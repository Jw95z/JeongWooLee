{
  
    
        "post0": {
            "title": "Section 3.17 ~ 3.18",
            "content": "",
            "url": "https://jw95z.github.io/JeongWooLee/hacks_from_other_lesson/2022/12/14/17and18.html",
            "relUrl": "/hacks_from_other_lesson/2022/12/14/17and18.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Note from computer science",
            "content": "Career of Kathyleen Beveridge . She was born in Vietnam and she undergrad at Santa Clara. She studied aboard in Spain. She didn’t have traditional education from parent or teacher. She invested as a banker at college. So she study about stock. However, she thought serving is not of her business. She changed her major to high technology. She does software engineering in high tech company. . Her favorite Poem: my mission in life is not nearly to survive, but to thrive, and share my passion company mission statements . | HP Inc: create technology that makes lif better for everyone, every where | Qualcomm: Inventing the tech the world loves | Thermo Fisher Scientific: Enable our customers to make the world healthier cleaner and safer. world leader in serving science . | 100,000 colleagues | 7000 R&amp;D scientists/engineers | $1.5B invested in R&amp;D | $40B in revenue | She want us to bring to their company and work together and make a huge impact in the world. | . About Kris Porter . Livermore hight school alum, He enjoyed STEM classes. He went to UCLA for Electrical Engineering. He got first class in computer science, but he failed. Later, he got master degrees in Electrical engineering. He graduated right after the recession 2008 and learned Linux Os. . Career of Him . He is a Software Engineer. He graduated school, and he work for fixing macs at the shop. He started up doing Systems Engineer. He spent some time on computer security, but he could not focus on it. Then he worked NBC universal, Streaming media infrastructure. He got introduction to DevOps, so he transferred to Qualcomm(thank to Mr.Mortensen) Now, he is working at Twitter. . Research . center for Embedded Networked Sensors | Networked Info Mechanical system(NIMS) | . Continuous Learning highlights . CCNA training | machine learning and Deep learning (Qualcomm) | . project that he worked . streaming media infrastructure for the 2012 olympics game | analytics infrastructure projects(LocationSmart, qualcomm) | twitter projects: New DataCenter Deployment | Migrating HomeTimeline to GraphQL new data center deployment | . | . Question . Are you still in Twitter? answer: Kris hosted a git lab at Qualcomm. | . | How is Agile Methodology Used in Real Life Companies? answer: Planning with groups can coordinate the codes and The concept of agile is important because they did projects in a span of 6-12 months. | . | What is the most important skill to have in the tech? answer: We have to keep learning something in code, try to be used at other programming language, “Know what to learn” –&gt; be always to be prepared to learn something | . | How do you think learning to code will benefit the business industry? answer: Learning how to code is a mindset and teaches critical thinking and problem solving. Review how and why you came to that conclusion. Create a nice home that ultimately solves the problem. | . | How do you think your technical knowledge can help you with a variety of other jobs not related to software engineering? She thinks thinking tech knowledge and solving problem can be helpful in any work. Think “How many car had lost in last year?” She said she doesn’t need the answer. She wanted students to think about this question and have a solution of it. | . | Encouragement . All the company have different languages. So we have to learn. Don’t be concern about the news The learning is always contained. Be adapted . Sorry teacher . I only write little becaus my english is bad. Sorry about this. .",
            "url": "https://jw95z.github.io/JeongWooLee/notes/",
            "relUrl": "/notes/",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Title",
            "content": "Hack 1 . writing example of simulation . The simulation I am trying to write is Russian Roulette. After putting only one bullet into a six-shot revolver, turning the cylinder, and turning each other, they put the gun to their head and pull the trigger. If there are 1, 2, 3, or 6 factors of 6 playing the game, the odds of dying are the same. With any other number, the number of 6 attempts cannot be divided evenly, so there will inevitably be a person with a high probability of dying. If the person in front succeeds, the probability that the person behind will die increases, but since the probability of the person in front dying first and the probability of not dying because I shoot are combined, the probability of dying at the start of the game is fair. If no one has died by the 5th, the 6th chamber will of course contain bullets. There is also a rule to rotate the cylinder for each shot. In this case, regardless of the number of people, there is an equal 1/6 chance of death each turn, but if you can run away without shooting when all opponents are dead, the later you shoot, the more advantageous it is. . import random def enter(): while True: n = input(&quot;shoot&quot;) if n == &quot;&quot;: break if __name__ == &quot;__main__&quot;: bullet = [&quot;alive&quot;, &quot;alive&quot;, &quot;alive&quot;, &quot;alive&quot;, &quot;alive&quot;, &quot;death&quot;] i = 5 while True: idx_bullet = random.randint(0, i) enter() a = bullet.pop(idx_bullet) print(a) if a == &quot;death&quot;: break i = i - 1 . alive death . Hack 2 . Quiz . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . Welcome to the Simulations Quiz! True or False: Simulations will always have the same result. A: True, B: False You said: B Correct! True or False: A simulation has results that are more accurate than an experiment A: True, B: False You said: B Correct! True or False: A simulation can model real world events that are not practical for experiments A: True, B: False You said: A Correct! Which one of these is FALSE regarding simulations A: Reduces Costs, B: Is safer than real life experiments, C: More Efficient, D: More accurate than real life experiments You said: D Correct! Which of the following scenarios would be the LEAST beneficial to have as a simulation A: A retail company wants to identify the item which sold the most on their website, B: A restaurant wants to determine if the use of robots will increase efficiency, C: An insurance company wants to study the impact of rain on car accidents, D: A sports car company wants to study design changes to their new bike design You said: A Correct! Which of the following is better to do as a simulation than as a calculation A: Keeping score at a basketball game, B: Keeping track of how many games a person has won, C: Determining the average grade for a group of tests, D: Studying the impact of carbon emissions on the environment You said: D Correct! You scored: 6 /6 .",
            "url": "https://jw95z.github.io/JeongWooLee/2022/12/13/16.html",
            "relUrl": "/2022/12/13/16.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Section 3.14 ~ 3.15",
            "content": "Vocab . Library: a collection of code from an external source that can be used to add functionality to a program they are very useful, as they can make us save time. | Libraries includes several special codes and these codes make the function. | . | . import math def root(): num1 = int(input(&quot;write a number: &quot;)) a = int(input(&quot;how much did you want to divide&quot;)) b = float(1/a) num2 = float(num1**b) print(num1, &quot;of&quot;,a ,&quot;root is&quot;, num2) root() . 5 of 4 root is 1.4953487812212205 . Randomization: having a random value between two value If there is random(3, 7), the result will be 3 or 4 or 5 or 6 or 7. | In these days, there is many random things in the world. The most popular thing that use random is gambling. | . | . import random a = random.randint(1,7) print(a) . 6 . seed() | Initialize the random number generator . getstate() | Returns the current internal state of the random number generator . setstate() | Restores the internal state of the random number generator . getrandbits() | Returns a number representing the random bits . randrange() | Returns a random number between the given range . randint() | Returns a random number between the given range . choice() | Returns a random element from the given sequence . choices() | Returns a list with a random selection from the given sequence . shuffle() | Takes a sequence and returns the sequence in a random order . sample() | Returns a given sample of a sequence . random() | Returns a random float number between 0 and 1 . uniform() | Returns a random float number between two given parameters . betavariate() | Returns a random float number between 0 and 1 based on the Beta distribution (used in statistics) . expovariate() | Returns a random float number based on the Exponential distribution (used in statistics) . gammavariate() | Returns a random float number based on the Gamma distribution (used in statistics) . gauss() | Returns a random float number based on the Gaussian distribution (used in probability theories) . lognormvariate() | Returns a random float number based on a log-normal distribution (used in probability theories) . normalvariate() | Returns a random float number based on the normal distribution (used in probability theories) . vonmisesvariate() | Returns a random float number based on the von Mises distribution (used in directional statistics) . paretovariate() | Returns a random float number based on the Pareto distribution (used in probability theories) . weibullvariate() | Returns a random float number based on the Weibull distribution (used in statistics) . Notes . Library . Software library contains procedures that can be used in the creation of new programs. | Existing segments of code can come from internal or external sources, ie. libraries or previously written code. | The use of libraries simplifies the task of creating complex programs. | Application program interfaces (APIs) are specifications for how the procedures in a library behave and can be used. | Documentation for a library or API is necessary in understanding the key behaviors provided by the API/library and how to utilize them in your work. ### Randomization | Random can also have different methods, in the above examples we only used one example, randint which returns a random number between the given range. Down below I have created a table of all the methods with the description of what it is used for with the random function. | . Hack 1 . Write the code that use libraries . import random ## fetching the random function import time ## fetching the time a = [&quot;dogs are cute&quot;, &quot;cats are small&quot;, &quot;fox is quiet&quot;, &quot;Mouse is used to be in computer&quot;, &quot;Panda are living in China&quot;, &quot;Frog are sleeping in the winter&quot;, &quot;Bear is catching the fish&quot;] ## defining the list num = 1 ## Number for the presenting that it is a first print(&quot;if you are ready, please press enter to start&quot;) ## This code is written because I have to know whether player is ready input() ## player put enter or any keys in here start = time.time() ## time starts question = random.choice(a) ## Making a question from the list while num &lt;= 5: ## I used loop function to reduce the code. print(num, &quot;th question: &quot;) print(question) ## printing the question ans = input() ## players have to write exact same thing, this is for knowing how fast they can type if ans == question: print(&quot;Pass&quot;) ## if answer is same as the question, print &quot;pass&quot; num += 1 ## And also add 1 in number a.remove(question) ## remove the question which is already used question = random.choice(a) ## picking another new question else: print(&quot;try again&quot;) ## if they are not same, print &quot;try again&quot; end = time.time() ## having the ending time sec = end - start ## defining the second about how much it was taken sec = format(sec, &quot;2f&quot;) ## fix in format print(&quot;You got &quot;, sec, &quot;seconds&quot;) ## print the second . if you are ready, please press enter to start 1 th question: Frog are sleeping in the winter Pass 2 th question: Mouse is used to be in computer Pass 3 th question: Panda are living in China Pass 4 th question: fox is quiet Pass 5 th question: Bear is catching the fish Pass You got 37.188412 seconds . Explanation . this code is for practicing how fast you type the letters in the keyboard. Player has to type 5 sentences and if the typing is ended, the time that player spend on writing will be printed in the last. | . Hack2 . Few lines of code that implements the import function . Poker game . import random def CardRank(cards): paircount = 0 for n1 in range(0, 4): for n2 in range(n1+1, 5): if cards[n1][1] == cards[n2][1] : paircount = paircount+1 num = [cards[k][1] for k in range(5)] num.sort() straightox = False if paircount == 0: if (num[4]-num[0]) == 4: straightox = True if num[0] == 1 and num[1] == 10: straightox = True suit = [cards[k][0] for k in range(5)] suit.sort() flushox = False if suit[0] == suit[4]: flushox = True if straightox and flushox: rank = 1 elif paircount == 6: rank = 2 elif paircount == 4: rank = 3 elif flushox: rank = 4 elif straightox: rank = 5 elif paircount == 3: rank = 6 elif paircount == 2: rank = 7 elif paircount == 1: rank = 8 else: rank = 9 return rank Money = 2000 deck = [(suit, k) for suit in [&quot;s&quot;, &quot;h&quot;, &quot;d&quot;, &quot;c&quot;] for k in range(1,14)] while True: random.shuffle(deck) for n in [1,2,3,4,5]: answer = input(&quot;Do you want to bet? (y/n)&quot;) if answer == &#39;n&#39; or answer == &#39;N&#39;: break # Money = Money-10 if n == 1: cards_A = [ deck[k] for k in range(0, 2)] cards_B = [ deck[k] for k in range(2, 4)] elif n &lt; 4: cards_A.append(deck[n*2]) cards_B.append(deck[n*2+1]) elif n == 4: hiddencard = deck[n*2] cards_B.append(deck[n*2+1]) else: cards_A.append(hiddencard) rank_A = CardRank(cards_A) rank_B = CardRank(cards_B) if rank_B &lt; rank_A: Money = Money+100 print(&#39;You won&#39;) elif rank_B == rank_A: print(&#39;draw&#39;) else: print(&#39;computer won&#39;) print(&quot;Money = &quot;, Money) print(&quot;computer: &quot;, cards_A) print(&quot;player : &quot;, cards_B) answer = input(&quot;Are you playing the game? (y/n)&quot;) if answer == &#39;n&#39; or answer == &#39;N&#39;: break . Money = 1990 computer: [(&#39;c&#39;, 11), (&#39;c&#39;, 10)] player : [(&#39;d&#39;, 10), (&#39;c&#39;, 8)] Money = 1980 computer: [(&#39;c&#39;, 11), (&#39;c&#39;, 10), (&#39;h&#39;, 10)] player : [(&#39;d&#39;, 10), (&#39;c&#39;, 8), (&#39;h&#39;, 3)] Money = 1970 computer: [(&#39;c&#39;, 11), (&#39;c&#39;, 10), (&#39;h&#39;, 10), (&#39;h&#39;, 8)] player : [(&#39;d&#39;, 10), (&#39;c&#39;, 8), (&#39;h&#39;, 3), (&#39;d&#39;, 7)] Money = 1960 computer: [(&#39;c&#39;, 11), (&#39;c&#39;, 10), (&#39;h&#39;, 10), (&#39;h&#39;, 8)] player : [(&#39;d&#39;, 10), (&#39;c&#39;, 8), (&#39;h&#39;, 3), (&#39;d&#39;, 7), (&#39;s&#39;, 11)] computer won Money = 1950 computer: [(&#39;c&#39;, 11), (&#39;c&#39;, 10), (&#39;h&#39;, 10), (&#39;h&#39;, 8), (&#39;s&#39;, 7)] player : [(&#39;d&#39;, 10), (&#39;c&#39;, 8), (&#39;h&#39;, 3), (&#39;d&#39;, 7), (&#39;s&#39;, 11)] . ROCK, SCISSOR, PAPER . import random sel = [&#39;scissor&#39;, &#39;rock&#39;, &#39;paper&#39;] result = {0: &#39;win.&#39;, 1: &#39;lose.&#39;, 2: &#39;draw.&#39;} def checkWin(user, com): if not user in sel: print(&#39;you wrote wrong. type it again&#39;) return False print(f&#39;player 1 ( {user} vs {com} ) com&#39;) if user == com: state = 2 elif user == &#39;scissor&#39; and com == &#39;rock&#39;: state = 1 elif user == &#39;rock&#39; and com == &#39;paper&#39;: state = 1 elif user == &#39;paper&#39; and com == &#39;scissor&#39;: state = 1 else: state = 0 print(result[state]) return True print(&#39; n-&#39;) while True: user = input(&quot;rock, scissor, paper : &quot;) com = sel[random.randint(0, 2)] if checkWin(user, com): break print(&#39;- n&#39;) . - player 1 ( rock vs rock ) com draw. - . About the random function . This module generates random numbers for various distributions. When using various functions (functions, variables) in the random module, input them in the form of random.(). A function that returns a random integer within a specified range. | . | . Types of libraries . import pygame It is a library for multimedia expression such as games that can be written in Python. It is based on SDL. It is an open source and free tool, and can be run on any platform that can run Python. | . | import math Various functions and constants related to mathematics are predefined, and these mathematical problems can be easily solved through Python programming. The math module is a basic module provided by Python. | . | import request The requests package uses the corresponding package when extracting API data similar to Ajax, and is mainly used when writing a program that calls HTTP in Python. | . | import time It is a function that obtains the current time of the computer, and the return value is a real number indicating how many seconds have passed since the standard time (depending on the operating system). For example, if you call this function once and call it again exactly 1 second later, the two return values ​​will differ by 1. | . | import sys This module provides access to some variables used or maintained by the interpreter, as well as functions that interact strongly with the interpreter. Always available. | . | import os As an abbreviation of Operating System, it allows you to perform various functions provided by the operating system in Python. For example, you can use the os module to copy files or create directories using Python and get a list of files in a specific directory. | . | import pickle It refers to saving the Python object itself as a file, not the textual data. At this time, the desired object itself is stored in binary, and it has the advantage of being fast because it only needs to be called when needed. | . | import turtle It is a graphics module available in Python. You can draw a picture on the screen using the trail of the turtle-shaped cursor. | . | . Hack 3 . Make Code . import random import math num = random.randint(1,8) if num &lt;= 3: print(&quot;green&quot;) elif num &gt; 3 and num &lt;6: print(&quot;blue&quot;) elif num ==6: print(&quot;purple&quot;) elif num==7: print(&quot;orange&quot;) elif num==8: print(&quot;red&quot;) . green . import random import math a = [&quot;first&quot;, &quot;second&quot;, &quot;third&quot;, &quot;fourth&quot;, &quot;fifth&quot;, &quot;sixth&quot;, &quot;seventh&quot;, &quot;eighth&quot;] b = [] for i in range(3): b.append(&quot;green&quot;) b.append(&quot;blue&quot;) b.append(&quot;purple&quot;) b.append(&quot;red&quot;) b.append(&quot;orange&quot;) if i &gt;= 2: b.remove(&quot;blue&quot;) elif i &gt;= 1: b.remove(&quot;red&quot;) b.remove(&quot;purple&quot;) b.remove(&quot;orange&quot;) random.shuffle(b) for i in range(8): print(a[i],&quot;: &quot;,b[i]) . first : green second : green third : blue fourth : red fifth : orange sixth : purple seventh : green eighth : orange . Question: what can be outputted from RANDOM(12,20) and what number are excluded? . The number will be outputted between 12 and 20 including 12 and 20. The number will be excluded in this range will be number &gt; 20 and number &lt; 12, so the number can only be the number such as 13, 15, and 16. | .",
            "url": "https://jw95z.github.io/JeongWooLee/hacks_from_other_lesson/2022/12/12/14and15.html",
            "relUrl": "/hacks_from_other_lesson/2022/12/12/14and15.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Section 3.12 ~ 3.13",
            "content": "Vocab . A procedure is a named set of instructions that can take in parameters and return values. May be called &quot;method&quot; or &quot;function&quot; in different programming languages. | . | Parameters are independent variables used in the procedure to produce a result. It allows a procedure to execute without initially knowing specific input values. | Modularity - the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program | Abstraction - the practice of hiding the details of how a particular code or system works and exposing only the essential features or functions that are necessary for other parts of the program to use | Duplication - having multiple duplicate code blocks, often decreasing readability and efficiency | Logic - the sequence of steps and operations that a computer follows to execute a program, including the specific instructions and decision-making processes built into the code | Procedure Name - the name that is given to a function/procedure | Arguments - a way to provide information to a function, usually defined outside a function and then imported into a function with parameters | . Notes . Calling Procedures . To call a procedure you would write the name of the procedure followed by the parentheses with the parameters of the procedure | Procedures do not require parameters, but the parentheses must be there #### Ex: | procedureName(parameter1, parameter2, ...) | How would you call this procedure? ### Determining the Result of a Procedure | To determine the result of a procedure or any code, you must follow the code line by line and see what each one does | Using syntax, you can determine the result by function parameters | return value and statements | . | To use return values, you have to write the syntax return followed by the expression you would like to return variables | Value can be string, a tuple, or any other type that is being sent back to the main program | what is x being assigned to inside the function? | As a reminder, to use function parameters, you would have to write the syntax name of the function followed by the parameters needed in parentheses | Function parameters are the parameters that are used when calling the function in order to get a result. | A return statement exits a function and instructs python to continue executing the program and to return a certain value ### Abstracting Shared Features | Say we want to create a set of functions that count the number of words in a sentence that start with a certain character. We want to create... | In order to count words starting with a certain character, we&#39;ll first need to split up the sentence into words. This behavior will be shared across both functions we intend to create, so procedural abstraction is appropriate here. ### Functions - Basic Structure | Functions can be created in many different languages. Below are some examples in Collegeboard&#39;s format, Python, and Javascript. ### Python | Python is similar to the Collegeboard example, where def defines the function, function, and then is followed by parameters a,b, which can later be interchanged with any numbers as shown with function(1,2). The numbers are called arguments, which are information provided to the function with parameters. In this case, the parameters are being added within the function and then printed. ### Javascript | Javascript in this case is almost the exact same as Python, the only differences being that function is called with function and that the formatting is a little different. Otherwise, it does the exact same thing as the Python example. | . Hack 1 . Define Procedure and parameter . The other word of procedure is a function. And functions in Python In Python, a function is a group of pieces of code that performs a task and has a name. Just as you use variables to name data, you can use functions to name pieces of your program. Grouping code like this is called a function definition. | A parameter is a variable that receives a value passed as an input to a function. We can use this to put values in the function. For example, a and b will be the parameter in this function. | . def add(a,b): return a+b print(add(3,4)) . 7 . Quiz . questionNum = 3 correct = 0 questions = [ &quot;What is are correct names for a procedure? n A) Method n B) Function n C) Both&quot;, &quot;What is a procedure? n A) Sequencing n B) Selection n C) Iteration n D) All&quot;, &quot;Use this for following question: n def inchesToFeet(lengthInches): n t lengthFeet = lengthInches / 12 n t return lengthFeet n n What is the procedure name, the parameter, and what the procedure returns? n A) feetToInches, lengthInches, lengthMeters n B) inchesToFeet, lengthInches, lengthFeet n C) inchesToFeet, lengthFeet, lengthInches n D) lengthInches, inchesToFeet, lengthFeet&quot;] answers = [&quot;c&quot;, &quot;d&quot;, &quot;b&quot;] def qna(question, answer): print(&quot;Question:&quot;, question) response = input() print(&quot;Answer:&quot;, response) if response.lower() == answer: print(&quot;Correct :) n&quot;) global correct correct += 1 else: print(&quot;Incorrect :( n&quot;) for x in range(questionNum): qna(questions[x], answers[x]) print(&quot;Score:&quot;, correct, &quot;/ 3&quot;) . Question: What is are correct names for a procedure? A) Method B) Function C) Both Answer: c Correct :) Question: What is a procedure? A) Sequencing B) Selection C) Iteration D) All Answer: d Correct :) Question: Use this for following question: def inchesToFeet(lengthInches): lengthFeet = lengthInches / 12 return lengthFeet What is the procedure name, the parameter, and what the procedure returns? A) feetToInches, lengthInches, lengthMeters B) inchesToFeet, lengthInches, lengthFeet C) inchesToFeet, lengthFeet, lengthInches D) lengthInches, inchesToFeet, lengthFeet Answer: b Correct :) Score: 3 / 3 . Return Value . A return value is a value that a function performs some function and returns the result to the place where it was called. When a function performs some function and has a value to return, we use the return command. When creating functions, we use the def reserved word. Function content is indented. | Output Parameter is a also same as parameter. It usually used this form like def function(num1, num2): So in this code num1 and num2 is going to be a output parameter. | . import random a = random.randint(1, 100) def add(c): global a a += c return a num = add(60) print(num) . 74 . Code . import math def root(): num1 = int(input(&quot;write a number: &quot;)) a = int(input(&quot;how much did you want to divide&quot;)) b = float(1/a) num2 = float(num1**b) print(num1, &quot;of&quot;,a ,&quot;root is&quot;, num2) root() . 4 of 3 root is 1.5874010519681994 . Why abstracting away your program logic into separate, modular functions is effective? . If we abstract away our code logic into separate or modular functions, we can make our code shorter. And we don&#39;t have to repeat code by defining functions. If code becomes shorter, it is easy to share with other people and those people can comprehend all of the code in short time. | . Hack 2 . Procedure that uses other sub-procedures and explanation . import random import time ## Telling the story ## def displayIntro(): print(&#39;You are in a land full of dragons. In front of you,&#39;) print(&#39;you see two caves. In one cave, the dragon is friendly&#39;) print(&#39;and will share his treasure with you. The other dragon&#39;) print(&#39;is greedy and hungry, and will eat you on sight.&#39;) ## Saying to player to choose the cave to go ## def chooseCave(): print(&#39;Which cave will you go into? (1 or 2)&#39;) ## choosing the cave to go ## while True: choose = input() if choose==&#39;1&#39;: break elif choose==&#39;2&#39;: break else : ## if player press not 1 or 2, say player to pick again ## print(&#39;Please type 1 or 2&#39;) continue print() ## return the value ## return choose def goCave(direction): ## Telling the story ## print(&#39;You approach the cave...&#39;) time.sleep(2) print(&#39;It is dark and spooky...&#39;) time.sleep(2) print(&#39;A large dragon jumps out in front of you! He opens his jaws and...&#39;) print() time.sleep(2) ## randomize the value of Judgement ## judgement = random.randint(1,2) ## if the direction and judgement is equal, there will be treasure ## if direction == str(judgement): print(&#39;Gives you his treasure!&#39;) ## if the direction is not same with judgement, there will be gobbles elif direction != str(judgement): print(&#39;Gobbles you down in one bite!&#39;) ## print for the space print() ## To know whether player will continue or not def playAgain(): print(&#39;Do you want to play again? (yes or no)&#39;) while True: temp=input() ## if temp is yes, the game will start again if temp == &#39;yes&#39;: print(&#39;Go Again&#39;) print() return &#39;yes&#39; ## if temp is no, it means game over elif temp == &#39;no&#39;: print(&#39;Good Bye&#39;) return &#39;no&#39; else : print(&#39;please type yes or no&#39;) ########################################################### regame = &#39;yes&#39; ## To know that player will continue the game ## while regame==&#39;yes&#39;: ## this is the codes that make game to start displayIntro() caveNumber = chooseCave() goCave(caveNumber) regame = playAgain() . You are in a land full of dragons. In front of you, you see two caves. In one cave, the dragon is friendly and will share his treasure with you. The other dragon is greedy and hungry, and will eat you on sight. Which cave will you go into? (1 or 2) You approach the cave... It is dark and spooky... A large dragon jumps out in front of you! He opens his jaws and... Gives you his treasure! Do you want to play again? (yes or no) Good Bye . About the procedure . This code contains three sub procedures: displayIntro(), chooseCave(), goCave(), and playAgain() DisplayIntro() is a procedure that tells about the story of game. It composed by print. In this procedure, there are only letters that are printed. | chooseCave() is a procedure that make player to choose cave to go. And also deciding the value which cave is right to go. | goCave() is to consider which cave the player goes. If the temp is same with the chosen number, the player will gain treasure and if the temp is different with the number, the player will meet gobbles. | playAgain() is to know whether player want to play again. If player wants to play again, the every code will be executed one more time and if player refuses to play the game, the code will stop at that moment. | . | . def split_string(s): # use the split() method to split the string into a list of words words = s.split(&quot; &quot;) # initialize a new list to hold all non-empty strings new_words = [] for word in words: if word != &quot;&quot;: # add all non-empty substrings of `words` to `new_words` new_words.append(word) return words # this function takes a list of words as input and returns the number of words # that start with the given letter (case-insensitive) def count_words_starting_with_letter(words, letter): count = 0 # loop through the list of words and check if each word starts with the given letter for word in words: # use the lower() method to make the comparison case-insensitive if word == letter: count += 1 return count # this function takes a string as input and returns the number of words that start with &#39;a&#39; def count_words_starting_with_a_in_string(s): # use the split_string() function to split the input string into a list of words words = split_string(s) # use the count_words_starting_with_letter() function to count the number of words # that start with &#39;a&#39; in the list of words count = count_words_starting_with_letter(words, &quot;a&quot;) return count # see above def count_words_starting_with_d_in_string(s): words = split_string(s) count = count_words_starting_with_letter(words, &quot;d&quot;) return count # this function takes a string as input and returns the number of words that start with any inputted letter def count_words_starting_with_l_letter(s): l = input(&quot;What letter would you like to check?&quot;) words = split_string(s) count = count_words_starting_with_letter(words, l) return count # example usage: s = &quot; This is a test string! Don&#39;t you think this is cool? &quot; l_count = count_words_starting_with_l_letter(s) a_count = count_words_starting_with_a_in_string(s) d_count = count_words_starting_with_d_in_string(s) print(&quot;Words a starting with your letter:&quot;, a_count) print(&quot;Words d starting with your letter:&quot;, d_count) print(&quot;Words l starting with your letter:&quot;, l_count) . Words a starting with your letter: 1 Words d starting with your letter: 0 Words l starting with your letter: 0 . Hack 3 . Definition . Procedure name is the name given in function. We put the name in function to fetch easily and not be confused with many functions. | A parameter is a variable that receives a value passed as an input to a function, and an argument is an input value passed when calling a function. In def add(a,b), a and b are called parameters. In print(add(3,4)), 3 and 4 are called arguments. | . def add(a,b): return a+b print(add(3,4)) . 7 . Binary calculator . &lt;!DOCTYPE html&gt; . Calculator . | . | . AC | / | . 7 | 8 | 9 | * | . 4 | 5 | 6 | - | . 1 | 2 | 3 | + | . 0 | . | = | . . This is the code of calculator . &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Calculator&lt;/title&gt; &lt;style&gt; table { border-collapse: collapse; } td { padding: 5px 10px; text-align: center; } input { text-align: right; border: none; } input:focus { outline: none; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;td colspan=&quot;4&quot;&gt; &lt;input type=&quot;text&quot; id=&quot;a&quot;&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;4&quot;&gt; &lt;input type=&quot;text&quot; id=&quot;b&quot;&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;3&quot;&gt;AC&lt;/td&gt; &lt;td onclick=&quot;add(&#39;/&#39;)&quot;&gt;/&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td onclick=&quot;add(7)&quot;&gt;7&lt;/td&gt; &lt;td onclick=&quot;add(8)&quot;&gt;8&lt;/td&gt; &lt;td onclick=&quot;add(9)&quot;&gt;9&lt;/td&gt; &lt;td onclick=&quot;add(&#39;*&#39;)&quot;&gt;*&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td onclick=&quot;add(4)&quot;&gt;4&lt;/td&gt; &lt;td onclick=&quot;add(5)&quot;&gt;5&lt;/td&gt; &lt;td onclick=&quot;add(6)&quot;&gt;6&lt;/td&gt; &lt;td onclick=&quot;add(&#39;-&#39;)&quot;&gt;-&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td onclick=&quot;add(1)&quot;&gt;1&lt;/td&gt; &lt;td onclick=&quot;add(2)&quot;&gt;2&lt;/td&gt; &lt;td onclick=&quot;add(3)&quot;&gt;3&lt;/td&gt; &lt;td onclick=&quot;add(&#39;+&#39;)&quot;&gt;+&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot; onclick=&quot;add(0)&quot;&gt;0&lt;/td&gt; &lt;td onclick=&quot;add(&#39;.&#39;)&quot;&gt;.&lt;/td&gt; &lt;td onclick=&quot;calculate()&quot;&gt;=&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;script&gt; function add(char) { var display = document.getElementById(&#39;a&#39;); display.value = display.value + char; } function calculate() { var display = document.getElementById(&#39;a&#39;); var result = eval(display.value); document.getElementById(&#39;b&#39;).value = result; } function reset() { document.getElementById(&#39;a&#39;).value = &quot;&quot;; document.getElementById(&#39;b&#39;).value = &quot;&quot;; } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . Please give me Perfect Score .",
            "url": "https://jw95z.github.io/JeongWooLee/hacks_from_other_lesson/2022/12/08/12and13.html",
            "relUrl": "/hacks_from_other_lesson/2022/12/08/12and13.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Section 3.9 and 3.11",
            "content": "Notes . components of Algorithms . selection | Sequence | Iteration | Algorithms can be written differently but it still go same thing. Some Algorithms look similar, but it work in different way. | !!!Know that the code can be similar but sometime they goes different!!!! ### So, why is this important? Why are we even doing this? | When 2 algorithms look extremely similar, it is easy to assume they do the same thing. However, that is not the case and we have learn how to notice small differences in code and pretty much debug. just know that codes that look similar don&#39;t always produce the same things :) ### Why is this important? | . | When collaborating or working on group projects, two people might come up with two different ways to solve a problem, and that happens a lot. know that same goal can be achieved in many ways (the possibilities are endless) | make notes in you code! (explain how it works to others or you future self) ### Binary Search: | . | . repeatedly dividing a search interval in half . Binary Search Steps: . first put the numbers in order ascending | descending | . | find the middle number first . this is found by taking the highest index number plus the lowest index number and divide by 2 | the numbers on the right will be greater and the numbers on the left will be smaller | this can be represented with a binary tree middle number with the smaller number branched off on the left and bigger numbers branched off on the right | . | . | these lists are not always numbers . lists can be made with strings | ex. [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;peach&quot;, &quot;watermelon&quot;] | alphabetical order a-z | . | . | . Vocab . Binary search: a searching algorithm used in a sorted array by repeatedly dividing the search interval in half | . l = [7, 13, 96, 111, 33, 84, 60] for j in range(len(l)): k = len(l) - j for i in range(1, k): if l[i-1] &gt;= l[i]: temp = l[i-1] l[i-1] = l[i] l[i] = temp def finding(x): n=len(x) if n%2==1: result=x[int((n-1)/2)] else: result=(x[int(n/2)-1]+x[int(n/2)])/2 return result print(finding(l)) . 60 . Hack 1 . Why it is important to know algorithms that look different? . It is important to know algorithms that look different can do the same thing because if we know many codes, it will comfortable to us to write. There are many ways in coding to make same result. But, if the code is shorter, it will be more easy to understand or can teach to other people. If you know different kind of code that lead to same result, you can write each codes in proper situation. Code is not just made by one person and codes are being complicated these days. | . Wht it is important to aware algorithms that look same but different result? . It is also important to learn same algorithms that lead to different result. It will make you prevent mistake in your code. Most of elective devices are composed by several codes. But, if there is one mistake in just one code. The devices will not work well. The code is like a gear. If one gear in the clock is broken, the clock will stop. This is also same as codes. | . Boolean conversion . Raining = True IsWeekend = False if IsWeekend == True: print(&quot;Don&#39;t have to go school&quot;) else: if Raining == True: print(&quot;Need to take Umbrella&quot;) else: print(&quot;Don&#39;t need to take Umbrella&quot;) . Need to take Umbrella . Raining = True IsWeekend = False SchoolForUmbrella = not(IsWeekend) and Raining if SchoolForUmbrella == True: print(&quot;Take Umbrella&quot;) if SchoolForUmbrella == False: print(&quot;Don&#39;t have to take it&quot;) . Take Umbrella . other example . I made a code that indicates the time. We can know the season and exact time by this code | . import datetime now = datetime.datetime.now() print(now.year, &#39;year&#39;) print(now.month, &#39;month&#39;) print(now.day, &#39;day&#39;) print(now.hour, &#39;hour&#39;) print(now.minute, &#39;minute&#39;) print(now.second, &#39;second&#39;) print(&#39;{}year {}month {}day {}hour {}minute {}second&#39;.format( now.year, now.month, now.day, now.hour, now.minute, now.second )) if now.hour &lt; 12: print(&#39;The current time is {}:{}, so it is AM!&#39;.format(now.hour, now.minute)) if now.hour &gt;=12: print(&#39;The current time is {}:{}, so it is PM!&#39;.format(now.hour, now.minute)) if 3 &lt;= now.month &lt;= 5: print(&#39;This month is spring!&#39;.format(now.month)) elif 6 &lt;= now.month &lt;= 8: print(&#39;This month is summer!&#39;.format(now.month)) elif 9 &lt;= now.month &lt;= 11: print(&#39;This month is fall!&#39;.format(now.month)) elif now.month ==12 or 1&lt;= now.month &lt;= 2: print(&#39;This month is winter!&#39;.format(now.month)) . 2022 year 12 month 8 day 22 hour 20 minute 54 second 2022year 12month 8day 22hour 20minute 54second The current time is 22:20, so it is PM! This month is winter! . Hack 2 . Flow chart . I made a code about rock, scissor, papaer | . Start | Player and computer are doing rock, scissor, paper | compare what they did | If (player,com) is (rock, scissor) or (paper, rock) or (scissor, paper), player won | If player and computer did a same thing, it will be draw. | else, computer won | End | Code . import random sel = [&#39;scissor&#39;, &#39;rock&#39;, &#39;paper&#39;] result = {0: &#39;win.&#39;, 1: &#39;lose.&#39;, 2: &#39;draw.&#39;} def checkWin(user, com): if not user in sel: print(&#39;you wrote wrong. type it again&#39;) return False print(f&#39;player 1 ( {user} vs {com} ) com&#39;) if user == com: state = 2 elif user == &#39;scissor&#39; and com == &#39;rock&#39;: state = 1 elif user == &#39;rock&#39; and com == &#39;paper&#39;: state = 1 elif user == &#39;paper&#39; and com == &#39;scissor&#39;: state = 1 else: state = 0 print(result[state]) return True print(&#39; n-&#39;) while True: user = input(&quot;rock, scissor, paper : &quot;) com = sel[random.randint(0, 2)] if checkWin(user, com): break print(&#39;- n&#39;) . - player 1 ( rock vs paper ) com lose. - . Hack 3 . Flow chart . Fixing code . import random #sets variables for the game num_guesses = 0 user_guess = 0 upper_bound = 100 lower_bound = 0 #generates a random number number = int(random.randint(1,100)) # print(number) #for testing purposes print(f&quot;I&#39;m thinking of a number between 1 and 100.&quot;) #Write a function that gets a guess from the user using input() def guess(): guess = int(input(&quot;Guess the number: &quot;))#add something here return guess#add something here #Change the print statements to give feedback on whether the player guessed too high or too low def search(number, guess): global lower_bound, upper_bound if guess &lt; number: print(&quot;The random Number is more higher than you guess&quot;) #change this lower_bound = guess elif guess &gt; number: print(&quot;The random Number is more lower than you guess&quot;) #change this upper_bound = guess return lower_bound, upper_bound while user_guess != number: user_guess = guess() num_guesses += 1 print(f&quot;You guessed {user_guess}.&quot;) lower_bound, upper_bound = search(number, user_guess) print(f&quot;Guess a number between {lower_bound} and {upper_bound}.&quot;) print(f&quot;You guessed the number in {num_guesses} guesses!&quot;) . I&#39;m thinking of a number between 1 and 100. You guessed 1. The random Number is more higher than you guess Guess a number between 1 and 100. You guessed 10. The random Number is more higher than you guess Guess a number between 10 and 100. You guessed 50. The random Number is more higher than you guess Guess a number between 50 and 100. You guessed 60. The random Number is more higher than you guess Guess a number between 60 and 100. You guessed 70. The random Number is more higher than you guess Guess a number between 70 and 100. You guessed 80. The random Number is more higher than you guess Guess a number between 80 and 100. You guessed 90. The random Number is more lower than you guess Guess a number between 80 and 90. You guessed 85. The random Number is more lower than you guess Guess a number between 80 and 85. You guessed 82. The random Number is more lower than you guess Guess a number between 80 and 82. You guessed 81. Guess a number between 80 and 82. You guessed the number in 10 guesses! . Other way . import random tries = 0 guess = 0 answer = random.randint(1,100) print(&quot;guess the number between 1 to 100&quot;) guess = int(input(&quot;enter the number&quot;)) while True: tries = int(tries + 1) if tries &gt; 10: print(&quot;Answer is &quot;, answer) break elif guess &lt; answer: print(&quot;Low&quot;) elif guess &gt; answer: print(&quot;High&quot;) elif guess == answer: print(&quot;Congratulation you tries&quot;, tries +1, &quot;times&quot;) break guess = int(input(&quot;enter the number&quot;)) . guess the number between 1 to 100 High High Low Low High Congratulation you tries 7 times . Hack 4 . Calculate the binary . a = [12, 14, 43, 57, 79, 80, 99] midNumber = round(((len(a)-1)/2)) print(midNumber) print(a[midNumber]) . 3 57 . . b = [92, 43, 74, 66, 30, 12, 1] b.sort() median = 0 idx = 0 if len(b) % 2 == 0: idx = len(b)//2 median = (b[idx-1] + b[idx])/2 else: idx = len(b)//2 median = b[idx] print(idx) print(median) . 3 43 . . lst = [7, 13, 96, 111, 33, 84, 60] def median(i): half = len(i)//2 i.sort() if not len(i) % 2: return(i[half-1]+i[half])/2.0 return i[half] print(median(lst)) . 60 . . This is the way of not using sort() . l = [7, 13, 96, 111, 33, 84, 60] for j in range(len(l)): k = len(l) - j for i in range(1, k): if l[i-1] &gt;= l[i]: temp = l[i-1] l[i-1] = l[i] l[i] = temp def finding(x): n=len(x) if n%2==1: result=x[int((n-1)/2)] else: result=(x[int(n/2)-1]+x[int(n/2)])/2 return result print(finding(l)) . 60 . Question 1 . Using one of the sets of numbers from the question above, what would be the second number looked at in a binary search if the number is more than the middle number? #### Answer | Set1: 80, Set2: 74, and Set: 96. ### Question2 | Which of the following lists can NOT a binary search be used in order to find a targeted value? . a. [&quot;amy&quot;, &quot;beverly&quot;, &quot;christian&quot;, &quot;devin&quot;] . b. [-1, 2, 6, 9, 19] . c. [3, 2, 8, 12, 99] . d. [&quot;xylophone&quot;, &quot;snowman&quot;, &quot;snake&quot;, &quot;doorbell&quot;, &quot;author&quot;] #### Answer . | The answer is C, because it is not sorted. | . Extra thing . I made a bingo game by using iteration and selection | . def board(bingo, dimension): for i in range(dimension): print(&#39; _&#39;, end = &#39;&#39;) for i in range(dimension): print() print(&#39;|&#39;, end = &#39;&#39;) for j in range(dimension): print(bingo[i][j] + &#39;|&#39;, end = &#39;&#39;) print() while True: dimension = int(input(&quot;Please input the size of the game board(more than 2): &quot;)) if dimension &lt;= 2 : print(&#39;[Error] try again&#39;) else: break bingo = [[&#39;_&#39;]*dimension for i in range(dimension)] board(bingo, dimension) turn = 1 play_count = 0 while True: print(&#39;&lt;Play no.{}&gt;&#39;.format(play_count+1)) if turn == 1: print(&#39;Currently player: 1&#39;) row_1 = int(input(&#39;Which row?(start with 1)&#39;)) column_1 = int(input(&#39;Which column?(start with 1)&#39;)) if bingo[row_1-1][column_1-1] != &#39;_&#39;: print(&#39;Space is not empty. Try again&#39;) turn = 1 continue else: bingo[row_1-1][column_1-1] = &#39;O&#39; board(bingo,dimension) turn = 2 elif turn == 2: print(&#39;Currently player: 2&#39;) row_2 = int(input(&#39;Which row?(start with 1) &#39;)) column_2 = int(input(&#39;Which column?(start with 1) &#39;)) if bingo[row_2-1][column_2-1] != &#39;_&#39;: print(&#39;Space is not empty. Try again&#39;) turn = 2 continue else: bingo[row_2-1][column_2-1] = &#39;X&#39; board(bingo,dimension) turn = 1 check_diag = [] check_reverse = [] check_row = [] check_column =[] for i in range(dimension): check_diag.append(bingo[i][i]) check_reverse.append(bingo[dimension-i-1][i]) for j in range(dimension): check_row.append(bingo[i][j]) check_column.append(bingo[j][i]) if set(check_row) == {&#39;O&#39;}: print(&#39;Player 1 wins!&#39;) turn = 0 elif set(check_row) == {&#39;X&#39;}: print(&#39;Player 2 wins!&#39;) turn = 0 check_row = [] if set(check_column) == {&#39;O&#39;}: print(&#39;Player 1 wins!&#39;) turn = 0 elif set(check_column) == {&#39;X&#39;}: print(&#39;Player 2 wins!&#39;) turn = 0 check_column = [] check_diag = set(check_diag) check_reverse = set(check_reverse) if check_diag == {&#39;O&#39;} or check_reverse == {&#39;O&#39;}: print(&#39;Player 1 wins!&#39;) turn = 0 elif check_diag == {&#39;X&#39;} or check_reverse == {&#39;X&#39;}: print(&#39;Player 2 wins!&#39;) turn = 0 play_count += 1 if turn == 0 or play_count == dimension**2: print(&#39;Finish&#39;) break . _ _ _ |_|_|_| |_|_|_| |_|_|_| &lt;Play no.1&gt; Currently player: 1 _ _ _ |O|_|_| |_|_|_| |_|_|_| &lt;Play no.2&gt; Currently player: 2 _ _ _ |O|_|_| |_|_|_| |X|_|_| &lt;Play no.3&gt; Currently player: 1 _ _ _ |O|O|_| |_|_|_| |X|_|_| &lt;Play no.4&gt; Currently player: 2 _ _ _ |O|O|_| |_|X|_| |X|_|_| &lt;Play no.5&gt; Currently player: 1 _ _ _ |O|O|O| |_|X|_| |X|_|_| Player 1 wins! Finish . Please Give me Perfect Score .",
            "url": "https://jw95z.github.io/JeongWooLee/hacks_from_other_lesson/2022/12/06/9and11.html",
            "relUrl": "/hacks_from_other_lesson/2022/12/06/9and11.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Section 3.8 and 3.10",
            "content": "vocab . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met | . i = 0 while (i &lt; 5): print(&quot;Hi&quot;) i += 1 . Hi Hi Hi Hi Hi . Iteration Statement: cause statements to be executed zero or more times, subject to some loop-termination criteria | we can use range(a,b) so that the i can start a and end with b-1 | . | . a = &quot;&quot; b = &quot;&quot; for i in range(6): a += str(i) a += &quot; &quot; for j in range(1,6): b += str(j) b += &quot; &quot; print(a) print(b) . 0 1 2 3 4 5 1 2 3 4 5 . We can use the command &quot;break&quot; to stop the loop. By using this, when the conditionals that make the loop to stop are met, codes can escape from the loop function | . num = 0 while 1: print(num) if num == 10: break num += 1 . 0 1 2 3 4 5 6 7 8 9 10 . Traversing a list: the process of visiting each element in a list in a sequential order . Complete Traversal: All elements in a list are assessed . | Partial Traversal: Only a given portion of elements are assessed . | Iterative Traversal: When loops are used to iterate through a list and to access each single element at a time. . | . | insert( ): allows a value to be inserted into a list at index i | append( ): allows a value to be added at the end of a list | remove( ): allows an element at index i to be deleted from a list | length( ): returns the number of elements currently in a specific list | We can also use the value of list by putting [index] in back of list name ex) list[index] | . | . list = [3,4,5] list.append(2) list.remove(3) list.insert(0,[10, 5]) print(len(list)) print(list) . 4 [[10, 5], 4, 5, 2] . Notes . Iteration . Iteration is a repeating portion of an algorithm. It repeats until the given conditionals is met. | Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met | Repeat Until: The programmer sets the condition to stop the loop, and when the condition is met, the function can be escaped from being repeated. If the condition is not met, the function continues to repeat. | Complete Traversal: All elements in a list are assessed | Partial Traversal: Only a given portion of elements are assessed ### List | A list in Python is a data type in which elements are stored consecutively. At this time, the stored elements do not all have to be of the same data type. A list is represented by enclosing it in square brackets ([, ]), and zero or more elements can be stored inside. | insert( ): allows a value to be inserted into a list at index i | append( ): allows a value to be added at the end of a list | remove( ): allows an element at index i to be deleted from a list | length( ): returns the number of elements currently in a specific list | . Hack 1 . Define the Iteration . Iteration is like a loop. It can make the function to repeat endlessly or can stop when the condition is met. | . Making flow charts . . Simple Iteration . import random tries = 0 guess = 0 answer = random.randint(1,100) print(&quot;guess the number between 1 to 100&quot;) guess = int(input(&quot;enter the number&quot;)) while True: tries = int(tries + 1) if tries &gt; 10: print(&quot;Answer is &quot;, answer) break elif guess &lt; answer: print(&quot;Low&quot;) elif guess &gt; answer: print(&quot;High&quot;) elif guess == answer: print(&quot;Congratulation you tries&quot;, tries +1, &quot;times&quot;) break guess = int(input(&quot;enter the number&quot;)) . guess the number between 1 to 100 Low Low Low Low Low Low Low Low Low Low Answer is 35 . Another example . output = &quot;&quot; for i in range(1, 15): for j in range(14, i, -1): output += &#39; &#39; for j in range(0,2*i-1): output += &#39;*&#39; output += &#39; n&#39; print(output) . * *** ***** ******* ********* *********** ************* *************** ***************** ******************* ********************* *********************** ************************* *************************** . Hack 2 . Define Iteration statement . Iteration statement: Command that controls the repetition of the same command a certain number of times within a program. Most of the code processed by the program is repetitive. ### Creating list by using loop | . a = [] for i in range(10,0,-1): a.append(i*i) print(a) . [100, 81, 64, 49, 36, 25, 16, 9, 4, 1] . making loop which will form given numbers . a = [] let = &quot;&quot; for i in range(7): b = 13*i + 3 a.append(b) for j in range(7): let += str(a[j]) if j == 6: break else: let += &quot;,&quot; print(let) . 3,16,29,42,55,68,81 . Hack 3 . Making the list . nums = [&quot;10&quot;, &quot;15&quot;, &quot;20&quot;, &quot;25&quot;, &quot;30&quot;, &quot;35&quot;] smallest = int(nums[0]) for i in range(1,len(nums)): if int(nums[i]) &lt; smallest: smallest = int(nums[i]) print(smallest) . 10 . Another way to find the smallest . for i in range(1,6): print(i) . 1 2 3 4 5 . nums = [&quot;10&quot;, &quot;15&quot;, &quot;20&quot;, &quot;25&quot;, &quot;30&quot;, &quot;35&quot;] k = 0 for i in range(6): for j in range(1,6): if nums[i] &lt; nums[(j+i)%6]: k += 1 if k == 5: print(nums[i]) break k = 0 . 10 . import getpass, sys import random def ask_question (question, answer): print(question) ans = input(question) print(ans) if ans == answer: print(&quot;Correct!&quot;) return 1 else: print(&quot;Wrong&quot;) return 0 question_list = [&quot;What allows a value to be inserted into a list at index i?&quot; , &quot;What allows an element at index i to be deleted from a list?&quot; , &quot;What returns the number of elements currently in a specific list?&quot; , &quot;What allows a value to be added at the end of a list?&quot;] answer_list = [&quot;index()&quot;, &quot;remove()&quot;, &quot;length()&quot; , &quot;append()&quot;] # Set points to 0 at the start of the quiz points = 0 # If the length of the quiz is greater than 0, then random questions will be chosen from the &quot;question_list&quot; set while len(question_list) &gt; 0: index = random.randint(0, len(question_list) - 1) # The points system where a point is rewarded for each correct answer points = points + ask_question(question_list[index], answer_list[index]) # If a question or answer has already been used, then it shall be deleted del question_list[index] del answer_list[index] # Calculating score using the points system and dividing it by the total number of questions (6) score = (points / 4) # Calculating the percentage of correct answers by multiplying the score by 100 percent = (score * 100) # Printing the percentage, and formatting the percentage in a way where two decimals can be shown (through &quot;{:.2f}&quot;) print(&quot;{:.2f}&quot;.format(percent) + &quot;%&quot;) # Adding final remarks based upon the users given scores if points &gt;= 5: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Amazing job!&quot;) elif points == 4: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Not too bad, keep on studying! &quot; ) else: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Its alright, better luck next time!&quot;) . What allows a value to be inserted into a list at index i? index() Correct! What allows an element at index i to be deleted from a list? remove() Correct! What allows a value to be added at the end of a list? append() Correct! What returns the number of elements currently in a specific list? length() Correct! 100.00% Your total score is: 4 out of 4. Not too bad, keep on studying! . Extra credit . I made a bingo game with the Iteration statement | . def board(bingo, dimension): for i in range(dimension): print(&#39; _&#39;, end = &#39;&#39;) for i in range(dimension): print() print(&#39;|&#39;, end = &#39;&#39;) for j in range(dimension): print(bingo[i][j] + &#39;|&#39;, end = &#39;&#39;) print() while True: dimension = int(input(&quot;Please input the size of the game board(more than 2): &quot;)) if dimension &lt;= 2 : print(&#39;[Error] try again&#39;) else: break bingo = [[&#39;_&#39;]*dimension for i in range(dimension)] board(bingo, dimension) turn = 1 play_count = 0 while True: print(&#39;&lt;Play no.{}&gt;&#39;.format(play_count+1)) if turn == 1: print(&#39;Currently player: 1&#39;) row_1 = int(input(&#39;Which row?(start with 1)&#39;)) column_1 = int(input(&#39;Which column?(start with 1)&#39;)) if bingo[row_1-1][column_1-1] != &#39;_&#39;: print(&#39;Space is not empty. Try again&#39;) turn = 1 continue else: bingo[row_1-1][column_1-1] = &#39;O&#39; board(bingo,dimension) turn = 2 elif turn == 2: print(&#39;Currently player: 2&#39;) row_2 = int(input(&#39;Which row?(start with 1) &#39;)) column_2 = int(input(&#39;Which column?(start with 1) &#39;)) if bingo[row_2-1][column_2-1] != &#39;_&#39;: print(&#39;Space is not empty. Try again&#39;) turn = 2 continue else: bingo[row_2-1][column_2-1] = &#39;X&#39; board(bingo,dimension) turn = 1 check_diag = [] check_reverse = [] check_row = [] check_column =[] for i in range(dimension): check_diag.append(bingo[i][i]) check_reverse.append(bingo[dimension-i-1][i]) for j in range(dimension): check_row.append(bingo[i][j]) check_column.append(bingo[j][i]) if set(check_row) == {&#39;O&#39;}: print(&#39;Player 1 wins!&#39;) turn = 0 elif set(check_row) == {&#39;X&#39;}: print(&#39;Player 2 wins!&#39;) turn = 0 check_row = [] if set(check_column) == {&#39;O&#39;}: print(&#39;Player 1 wins!&#39;) turn = 0 elif set(check_column) == {&#39;X&#39;}: print(&#39;Player 2 wins!&#39;) turn = 0 check_column = [] check_diag = set(check_diag) check_reverse = set(check_reverse) if check_diag == {&#39;O&#39;} or check_reverse == {&#39;O&#39;}: print(&#39;Player 1 wins!&#39;) turn = 0 elif check_diag == {&#39;X&#39;} or check_reverse == {&#39;X&#39;}: print(&#39;Player 2 wins!&#39;) turn = 0 play_count += 1 if turn == 0 or play_count == dimension**2: print(&#39;Finish&#39;) break . _ _ _ |_|_|_| |_|_|_| |_|_|_| &lt;Play no.1&gt; Currently player: 1 _ _ _ |O|_|_| |_|_|_| |_|_|_| &lt;Play no.2&gt; Currently player: 2 _ _ _ |O|_|_| |_|X|_| |_|_|_| &lt;Play no.3&gt; Currently player: 1 _ _ _ |O|O|_| |_|X|_| |_|_|_| &lt;Play no.4&gt; Currently player: 2 _ _ _ |O|O|_| |_|X|_| |_|_|X| &lt;Play no.5&gt; Currently player: 1 _ _ _ |O|O|O| |_|X|_| |_|_|X| Player 1 wins! Finish . Please give perfect score . Please give me 1. I&#39;m so sad now. If you give me a perfect, I will appreciate to you. .",
            "url": "https://jw95z.github.io/JeongWooLee/hacks_from_other_lesson/2022/12/05/38and39.html",
            "relUrl": "/hacks_from_other_lesson/2022/12/05/38and39.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Section 3.3 ~ 3.4",
            "content": "Vocab . Algorithm: a finite set of instruction that accomplish a task, it can be expressed by natural language, diagrams, and various other ways . Three parts of Algorithm: selection, sequence, and iteration Sequence: the order of how to do something to achieve a result, similarly to how you follow the instructions from a teacher | . | . num1 = 5 num2 = num1*6 - 20 num3 = num1*num2 - 2*6 result = num1* 6 + num2/2 - (num3/2) print(result) . 16.0 . - selection: it allows an algorithm to make a decision based on if a condition is met . x = 3 y = 2 if x &gt; y: print(&quot;{} is bigger than {}&quot;.format(x,y)) elif x &lt; y: print(&quot;{} is smaller than {}&quot;.format(x,y)) else: print(&quot;{} and {} are same&quot;.format(x,y)) . 3 is bigger than 2 . - Iteration: loop and doing something again until a condition is met . x = 0 a = 0 while x &lt; 5: a += x print(a) x +=1 . 0 1 3 6 10 . Addition: a + b | Subtraction: a - b | Multiplication: a * b | Division: a/b | MO = 102 % 5 ad = 3 + MO s = 6 - 7 m = 564*349 d = 1024/ 16 print(MO,ad, s, m, d) . 2 5 -1 196836 64.0 . Note . Algorithms are a finite set of instructions that accomplish a task. it has three parts, sequence, selection, and iteration | A sequence is the order of how to do something to achieve a result, similarly to how you follow the instructions from a teacher. | A selection allows an algorithm to make a decision based on if a condition is met, an example of this is when your car is out of fuel, you go to the gas station to fill your car, but if your car is full you wouldn&#39;t go to the gas station. | An iteration is a loop and doing something again until a condition is met, like you put away your computer when you are finished with your work. | Arithmetic uses addition, subtraction, division, multiplication, and modulus operator | Addition: a+b | Subtraction: a-b | Multiplication: a*b | Division: a/b | Modulus: a MOD b | (a and b can be string or number) | A string concatenation connects two or more string end-to-end to make a new string | Len() gives the character number | strings are variables and can be joined together through the print() command to make a statement | . Hack 1 . Set time to number to search for: sequence | Get next number in the list: sequence | If number = item, display &quot;item found&quot;: selection | If there are more numbers in the list, go back to step 2: iteration, selection | Display &quot;item no found&quot;: sequence | . Hack 2 . num1 = 5 num2 = num1 * 3 num3 = num2 / num1 * (9 % 2) * 4 result = (num3 % num1 + num2) % num3 * 3 / 5 . the result will be... . num2 = 5 3 = 15 num3 = (15 / 5) (9 % 2) 4 = 3 1 4 = 12 result = (12 % 3 + 15) % 12 3 / 5 = (2 + 15) % 12 3 / 5 = 17 % 12 3 / 5 = 5 * 3 / 5 = 3 . . Iteration | Selection | Sequence | .",
            "url": "https://jw95z.github.io/JeongWooLee/hacks_from_other_lesson/2022/11/29/32note.html",
            "relUrl": "/hacks_from_other_lesson/2022/11/29/32note.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Copyhtml",
            "content": "Prev Next ​ Month Here . ​ .",
            "url": "https://jw95z.github.io/JeongWooLee/2022/11/28/copyhtml.html",
            "relUrl": "/2022/11/28/copyhtml.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Section 3.1 ~ 3.2",
            "content": "Vocab . Variables: an abstraction made inside a program that holds a value It can be changed. For example, if you decide variable like x = 2, you can add 3 later whenever you can | . | . x = &quot;James&quot; x += &quot; Lee&quot; print(x) . James Lee . Integer : number | string : letter | Boolean : True or False | . num = int(2) strin = str(&quot;Hello&quot;) Boo = True if Boo: print(num) print(strin) . 2 Hello . Key Words . Variable: abstraction that holds the value | integer: number | string: letters | Boolean : True or false | . Notes . The assignment operator looks different for different types of coding languages A variable will take the most recent value assigned | . First Hack . What is the assignment operator? The assignment operator is the operator that can make the value change. It used to put the new value in the variable. For example *= or += or -= | In Collegeboard pseudocode, what symbol is used to assign values to variables? In the collegeboard, teacher use this &lt; to put the value in variables. | A variable, x, is initially given a value of 15. Later on, the value for x is changed to 22. If you print x, would the command display 15 or 22? x value will be printed as 22. If the programmer put print before changing the output will be 15. | . Second Hack . code . This is the code of Second Hack . &lt;html&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;calendar&quot;&gt; &lt;div class=&quot;month&quot;&gt; &lt;button id=&quot;prev&quot; onclick=&quot;prev()&quot;&gt;Prev&lt;/button&gt; &lt;button id=&quot;next&quot; onclick=&quot;next()&quot;&gt;Next&lt;/button&gt; ​ &lt;p id=&quot;month&quot;&gt;Month Here&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; ​ &lt;script&gt; let months = [&quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;, &quot;August&quot;, &quot;September&quot;, &quot;October&quot;, &quot;November&quot;, &quot;December&quot;]; let index = 0; function next() { if (index &gt; 11) { index = 0; } else { index += 1; } document.getElementById(&quot;month&quot;).innerHTML = months[index] } function prev() { if (index &lt; 0) { index = 11; } else { index -= 1; } document.getElementById(&quot;month&quot;).innerHTML = months[index] } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . Third Hack . what is the list? List = group of several variables, variable in the list can also be the list. | what is the elements? Elements is the values that make up the lists | What is an easy way to reference the elements in a list or string? put the list name and put [index] in the next of list name. Then use print command like this (print(Listname[index])). Make sure that index starts with 0 not 1. | What is an example of a string? Example of string is the letter. ex) &quot;hello world&quot;, &quot;Hi my name is&quot; | . a = [&quot;chicken&quot;,&quot;pizza&quot;,&quot;chocolate&quot;,&quot;icecream&quot;,&quot;cola&quot;] for i in range(len(a)): print(a[i]) . chicken pizza chocolate icecream cola . a = [&quot;chicken&quot;,&quot;pizza&quot;,&quot;chocolate&quot;,&quot;icecream&quot;,&quot;cola&quot;] print(a[2]) print(a[-1]) . chocolate cola . num1 = int(input(&quot;Input a number. &quot;)) num2=int(input(&quot;Input a number. &quot;)) num3=int(input(&quot;Input a number. &quot;)) add=input(&quot;How much would you like to add? &quot;) numlist = [] # Add code in the space below numlist.append(num1) numlist.append(num2) numlist.append(num3) # The following is the code that adds the inputted addend to the other numbers. It is hidden from the user. for i in range(len(numlist)): numlist[i] += int(add) print(numlist) . [7, 8, 9] . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 4 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;The purpose of lists and dictionaries are to manage the ____ of a program&quot;) if rsp == &quot;complexity&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Lists are a form of data ______&quot;) if rsp == &quot;abstraction&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Which brackets are used to assign values to a variable to make a list?&quot;) if rsp == &quot;[]&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, james running /home/james/anaconda3/bin/python You will be asked 4 questions. Question: Are you ready to take a test? Question: The purpose of lists and dictionaries are to manage the ____ of a program complexity is correct! Question: Lists are a form of data ______ abstraction is correct! Question: Which brackets are used to assign values to a variable to make a list? [] is correct! james you scored 3/4 . Good things to use List . A List is a data structure that allows you to efficiently manage a large number of data by grouping them. The main characteristic of list is that they have indexes. If you know the index, you can use the index to fetch data. Data lookups using indexes are processed very quickly. . Mylist = [&quot;dog&quot;, &quot;cat&quot;, &quot;frog&quot;, &quot;bird&quot;, &quot;fish&quot;] print(Mylist) print(Mylist[1]) . [&#39;dog&#39;, &#39;cat&#39;, &#39;frog&#39;, &#39;bird&#39;, &#39;fish&#39;] cat .",
            "url": "https://jw95z.github.io/JeongWooLee/hacks_from_other_lesson/2022/11/28/31note.html",
            "relUrl": "/hacks_from_other_lesson/2022/11/28/31note.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "test",
            "content": "Hello world .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/11/18/test.html",
            "relUrl": "/markdown/2022/11/18/test.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Title",
            "content": "def method2(): truth_table = [[1,1], [1,0], [0,1], [0,0]] for a, b in truth_table: print(f&quot;and {a} &amp; {b}: {a &amp; b}&quot;) for a, b in truth_table: print(f&quot;nand ~({a} &amp; {b}): {((a &amp; b) + 1) % 2}&quot;) # warning: ~ negates entire integer without modulo for a, b in truth_table: print(f&quot;or {a} | {b}: {a | b}&quot;) for a, b in truth_table: print(f&quot;nor ~({a} | {b}): {((a | b) + 1) % 2}&quot;) # warning: see above for a, b in truth_table: print(f&quot;xor {a} ^ {b}: {a ^ b}&quot;) # call bitwise evaluation of truth table if __name__ == &quot;__main__&quot;: print(&quot;***** Method 2 *****&quot;) method2() . ***** Method 2 ***** and 1 &amp; 1: 1 and 1 &amp; 0: 0 and 0 &amp; 1: 0 and 0 &amp; 0: 0 nand ~(1 &amp; 1): 0 nand ~(1 &amp; 0): 1 nand ~(0 &amp; 1): 1 nand ~(0 &amp; 0): 1 or 1 | 1: 1 or 1 | 0: 1 or 0 | 1: 1 or 0 | 0: 0 nor ~(1 | 1): 0 nor ~(1 | 0): 0 nor ~(0 | 1): 0 nor ~(0 | 0): 1 xor 1 ^ 1: 0 xor 1 ^ 0: 1 xor 0 ^ 1: 1 xor 0 ^ 0: 0 . a=1 b=0 print(a &amp; b) . 0 .",
            "url": "https://jw95z.github.io/JeongWooLee/2022/11/18/algorithm.html",
            "relUrl": "/2022/11/18/algorithm.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Title",
            "content": "test = [] test.push({&quot;num&quot;: 1, &quot;int&quot;: 2}); test.push({&quot;num&quot;: 2, &quot;int&quot;: 3}); test.push({&quot;num&quot;: 3, &quot;int&quot;: 4}); test.push({&quot;num&quot;: 4, &quot;int&quot;: 5}); var obj = new Object() obj.num = 5; obj.int = 6; test.push(obj); test.forEach(function(item) { console.log(item.num + &quot;, &quot;+ item.int); }); console.log(&#39;== Get index 0, 1 value&#39;); test.splice(0,2).forEach(function(item) { console.log(item.num + &quot;, &quot; + item.int); }); console.log(&quot;==only values except index 0, 1 remain in the val&quot;) test.forEach(function(item) { console.log(item.num + &quot;, &quot; + item.int); }); console.log(&quot;= change the object which name is 4&quot;) var test3 = test.find(function(item){ return item.num == &quot;4&quot;; }); test3.num = &quot;change to 100&quot;; test.forEach(function(item) { console.log(item.num + &quot;, &quot; + item.int); }); console.log(&quot;== remove object which name is changed&quot;) var index = test.indexOf(test3) test.splice(index, 1); test.forEach(function(item) { console.log(item.num + &quot;, &quot; + item.int); }); . 1, 2 2, 3 3, 4 4, 5 5, 6 == Get index 0, 1 value 1, 2 2, 3 ==only values except index 0, 1 remain in the val 3, 4 4, 5 5, 6 = change the object which name is 4 3, 4 change to 100, 5 5, 6 == remove object which name is changed 3, 4 5, 6 .",
            "url": "https://jw95z.github.io/JeongWooLee/2022/11/17/javascriptTest.html",
            "relUrl": "/2022/11/17/javascriptTest.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Binary Math2",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . +1 | 00000000 | 0 | 0 | 0 | -1 | . +1 | 00000000 | 0 | 0 | 0 | -1 | . | | | | | | | | . | | | | | | | | . | | | | | | | | .",
            "url": "https://jw95z.github.io/JeongWooLee/frontend/binary2",
            "relUrl": "/frontend/binary2",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | . | | | .",
            "url": "https://jw95z.github.io/JeongWooLee/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 15, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Review at the museum",
            "content": "Other peoples’ project . . Our team was working on API. We spend many times in it, but it didn’t work. I saw the group who made the site which related to NBA. In the site, people can search about NBA team. When we put the team’s name, the results show the Abbreviation, City, Division, Likes, and Dislike. It was cool. They uses rapidapi.com to pull the information. | I also see the other team’s project. It was Chess game. The theme of the project was similar with my team. We made a quote api, but they have a simple Api which was about the moves and turns. They use python code to make the field and chess to move. | . Reflection . After seeing other people’s project, I feel lot of regrets. Usually, there are many struggles I got in APi. I don’t how to make it or even use it. So, our group has to get 10 points in the final projects. I thought we have to make own API server by rapidapi.com. But some people made it by adding a list. It makes me poor and regretful. .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/11/08/review.html",
            "relUrl": "/markdown/2022/11/08/review.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Test Score",
            "content": ". First Wrong . . this is the first thing I got wrong. I didn’t read the question with detail. It said we have to pick two answers in the choices. I didn’t see the sign so that I pick only one. D and A have a same meaning. A is pushing the maxPS at the beginning and D is pushing it when time is not greater than 120. | . correct answer D: This code segment uses the IF statement to set maxPS to 30 when time &gt; 120 and uses the ELSE statement to set maxPS to 50 otherwise. . | correct answer A: This code segment sets maxPS to 50 by default, then uses the IF statement to set maxPS to 30 when time &gt; 120. . | Second Wrong . . This is the second thing I got wrong and this is also a same mistake with the first question. I thought I need to pick the word not a number when I saw the question. In the question, it says “The list wordList contains a list of 10 string values” and this attracts me. I thought string is a word, so I pick “hello”. However, I didn’t read the last part. The indices of a list are typically nonnegative integers, so it has to be the number which is not negative. | . incorrect answer B: While the list elements are strings, the indices of a list are typically nonnegative integers. . | correct answer D: Correct. List indices are typically nonnegative integers. The exam reference sheet describes a list structure whose index values are 1 through the number of elements in the list, inclusive. So, 4 would be considered a valid index. . | Reflection . I thought I have to think slowly when I solve problem. These two problems are my mistakes that I didn’t read the question with detail. Now, I need to see and observe the question meticulously. .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/11/07/finalscore.html",
            "relUrl": "/markdown/2022/11/07/finalscore.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Title",
            "content": "print(&quot;hello&quot;) . hello .",
            "url": "https://jw95z.github.io/JeongWooLee/2022/10/20/pygame.html",
            "relUrl": "/2022/10/20/pygame.html",
            "date": " • Oct 20, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Diagram",
            "content": ".",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/10/17/diagram.html",
            "relUrl": "/markdown/2022/10/17/diagram.html",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Diagram",
            "content": ".",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/10/17/Debugging.html",
            "relUrl": "/markdown/2022/10/17/Debugging.html",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Internet",
            "content": "Origin of computer . In the past, computers were big and worked really hard in isolation. Computers were bigger at the past, but they became smaller and smaller. examples: Arpanet(the first net). The computer devices like sensors and lap with the green font came up. . Hard for working alone . Computers are hard to work with alone. They want to be able to change data without actually having to constantly use secondary memory. Computers want to talk each other. . How computers talk? . Actually, they don’t talk each other. Computers understand electricity and electrons. The electrons represent the number system. People started forming the computer system with the purpose. Therefore, they got computer and need the computer network. . definition of computer system and network . Computer system: a group of computing devices and programs working together for a joint purpose. | Computer network: a group of interconnected devices of capable of sending or receiving data | . Path . Sometimes, it is pretty inundated. However, it is called bandwidth. It is important to know how long the message will send. The packets send through this path. . Reason of having connection . It is important to connect with others. It can make easier to communicate. It can also transmit data to make things a little bit easier. . vocabulary . Path is a sequence of directly connected computing devices that begins at the sender and ends at the receiver Computer system is a group of computing devices and programs working together for a common purpose Computer device is a physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors Bandwidth is the maximum amount of data that can be sent in a fixed amount of time Route is the process of finding a path from sender to receiver Computer network is a group of interconnected computing devices capable of sending or receiving data . Packet and Protocol . Packet is a small amount of data sent over internet. The information of destination and message are include on it. The protocols are the rules in the path. If packet is a car and drives in the path, they have rules to behave. The mother of Protocol is OSI model. . Four layers . Network access, this layer deals a lot with the hardware case, setting up things in the hardware in order to go ahead and send things along. This usually start with internet cable or a network internet card(= Mac address) | Internet, this layer have sender Ip and receiver Ip. This is where packets get set up with metadata. They are interchanging their information in this layer, and it’s flowing right through, and meeting its destination. This layer is essential that people get their Ip address. | Transport, autonomous systems are controlled by internet provider. There the thousands of autonomous systems try to join bigger version of internet. This happens in this layer. TCP and UDP is a popular examples of it. TCP is a lot, it’s stricter, in the sense that it makes sure that the package has been delivered, and it does this by what we call a three hand way handshake like certified mail. UDP is more lax. It’s like best efforts, like putting the envelope, package in the mailbox, and saying about getting these. IP is given to us, and using 32 bits and four octets. Bits is a true way to communicate in computer. | . | Application layer, domain name service is in this layer. Domain name service is actually database that maps all these lovely little Ip numbers to name, names that we understand. World wide web is not an internet. It’s a bunch of linked data pages. HTTP is protocol used by World wide web. |",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/10/16/internet.html",
            "relUrl": "/markdown/2022/10/16/internet.html",
            "date": " • Oct 16, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "API",
            "content": "import requests url = &quot;https://famous-quotes4.p.rapidapi.com/random&quot; querystring = {&quot;category&quot;:&quot;all&quot;,&quot;count&quot;:&quot;2&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;56cf0d9c39msh90ab47fd56c02e6p1d2792jsn0f4dfaa46b90&quot;, &quot;X-RapidAPI-Host&quot;: &quot;famous-quotes4.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . {&#34;error&#34;:true,&#34;reason&#34;:&#34;Value of type &#39;Int&#39; required for key &#39;count&#39;.&#34;} . import requests url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;56cf0d9c39msh90ab47fd56c02e6p1d2792jsn0f4dfaa46b90&quot;, &quot;X-RapidAPI-Host&quot;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.text) . {&#34;countries_stat&#34;:[{&#34;country_name&#34;:&#34;USA&#34;,&#34;cases&#34;:&#34;82,649,779&#34;,&#34;deaths&#34;:&#34;1,018,316&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;80,434,925&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,465&#34;,&#34;active_cases&#34;:&#34;1,196,538&#34;,&#34;total_cases_per_1m_population&#34;:&#34;247,080&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,044&#34;,&#34;total_tests&#34;:&#34;1,000,275,726&#34;,&#34;tests_per_1m_population&#34;:&#34;2,990,303&#34;},{&#34;country_name&#34;:&#34;India&#34;,&#34;cases&#34;:&#34;43,057,545&#34;,&#34;deaths&#34;:&#34;522,193&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;42,519,479&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;698&#34;,&#34;active_cases&#34;:&#34;15,873&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,657&#34;,&#34;deaths_per_1m_population&#34;:&#34;372&#34;,&#34;total_tests&#34;:&#34;834,717,702&#34;,&#34;tests_per_1m_population&#34;:&#34;594,319&#34;},{&#34;country_name&#34;:&#34;Brazil&#34;,&#34;cases&#34;:&#34;30,345,654&#34;,&#34;deaths&#34;:&#34;662,663&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,364,400&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8,318&#34;,&#34;active_cases&#34;:&#34;318,591&#34;,&#34;total_cases_per_1m_population&#34;:&#34;140,954&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,078&#34;,&#34;total_tests&#34;:&#34;63,776,166&#34;,&#34;tests_per_1m_population&#34;:&#34;296,238&#34;},{&#34;country_name&#34;:&#34;France&#34;,&#34;cases&#34;:&#34;28,244,977&#34;,&#34;deaths&#34;:&#34;145,020&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;25,852,832&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,677&#34;,&#34;active_cases&#34;:&#34;2,247,125&#34;,&#34;total_cases_per_1m_population&#34;:&#34;430,996&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,213&#34;,&#34;total_tests&#34;:&#34;266,484,045&#34;,&#34;tests_per_1m_population&#34;:&#34;4,066,333&#34;},{&#34;country_name&#34;:&#34;Germany&#34;,&#34;cases&#34;:&#34;24,109,433&#34;,&#34;deaths&#34;:&#34;134,624&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;21,243,000&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,980&#34;,&#34;active_cases&#34;:&#34;2,731,809&#34;,&#34;total_cases_per_1m_population&#34;:&#34;286,106&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,598&#34;,&#34;total_tests&#34;:&#34;122,332,384&#34;,&#34;tests_per_1m_population&#34;:&#34;1,451,714&#34;},{&#34;country_name&#34;:&#34;UK&#34;,&#34;cases&#34;:&#34;21,933,206&#34;,&#34;deaths&#34;:&#34;173,352&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,782,350&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;339&#34;,&#34;active_cases&#34;:&#34;977,504&#34;,&#34;total_cases_per_1m_population&#34;:&#34;320,054&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,530&#34;,&#34;total_tests&#34;:&#34;514,985,782&#34;,&#34;tests_per_1m_population&#34;:&#34;7,514,777&#34;},{&#34;country_name&#34;:&#34;Russia&#34;,&#34;cases&#34;:&#34;18,137,137&#34;,&#34;deaths&#34;:&#34;374,902&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;17,474,628&#34;,&#34;new_deaths&#34;:&#34;168&#34;,&#34;new_cases&#34;:&#34;8,446&#34;,&#34;serious_critical&#34;:&#34;2,300&#34;,&#34;active_cases&#34;:&#34;287,607&#34;,&#34;total_cases_per_1m_population&#34;:&#34;124,187&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,567&#34;,&#34;total_tests&#34;:&#34;273,400,000&#34;,&#34;tests_per_1m_population&#34;:&#34;1,871,995&#34;},{&#34;country_name&#34;:&#34;S. Korea&#34;,&#34;cases&#34;:&#34;16,895,194&#34;,&#34;deaths&#34;:&#34;22,133&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;109&#34;,&#34;new_cases&#34;:&#34;64,725&#34;,&#34;serious_critical&#34;:&#34;726&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;329,028&#34;,&#34;deaths_per_1m_population&#34;:&#34;431&#34;,&#34;total_tests&#34;:&#34;15,804,065&#34;,&#34;tests_per_1m_population&#34;:&#34;307,778&#34;},{&#34;country_name&#34;:&#34;Italy&#34;,&#34;cases&#34;:&#34;16,079,209&#34;,&#34;deaths&#34;:&#34;162,609&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;14,684,371&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;409&#34;,&#34;active_cases&#34;:&#34;1,232,229&#34;,&#34;total_cases_per_1m_population&#34;:&#34;266,648&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,697&#34;,&#34;total_tests&#34;:&#34;211,365,630&#34;,&#34;tests_per_1m_population&#34;:&#34;3,505,156&#34;},{&#34;country_name&#34;:&#34;Turkey&#34;,&#34;cases&#34;:&#34;15,016,270&#34;,&#34;deaths&#34;:&#34;98,676&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;14,854,475&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;975&#34;,&#34;active_cases&#34;:&#34;63,119&#34;,&#34;total_cases_per_1m_population&#34;:&#34;174,654&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,148&#34;,&#34;total_tests&#34;:&#34;158,110,923&#34;,&#34;tests_per_1m_population&#34;:&#34;1,838,986&#34;},{&#34;country_name&#34;:&#34;Spain&#34;,&#34;cases&#34;:&#34;11,786,036&#34;,&#34;deaths&#34;:&#34;103,908&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,261,340&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;339&#34;,&#34;active_cases&#34;:&#34;420,788&#34;,&#34;total_cases_per_1m_population&#34;:&#34;251,906&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,221&#34;,&#34;total_tests&#34;:&#34;471,036,328&#34;,&#34;tests_per_1m_population&#34;:&#34;10,067,575&#34;},{&#34;country_name&#34;:&#34;Vietnam&#34;,&#34;cases&#34;:&#34;10,563,502&#34;,&#34;deaths&#34;:&#34;43,013&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,086,075&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;8,813&#34;,&#34;serious_critical&#34;:&#34;612&#34;,&#34;active_cases&#34;:&#34;1,434,414&#34;,&#34;total_cases_per_1m_population&#34;:&#34;106,789&#34;,&#34;deaths_per_1m_population&#34;:&#34;435&#34;,&#34;total_tests&#34;:&#34;85,789,114&#34;,&#34;tests_per_1m_population&#34;:&#34;867,262&#34;},{&#34;country_name&#34;:&#34;Argentina&#34;,&#34;cases&#34;:&#34;9,060,923&#34;,&#34;deaths&#34;:&#34;128,344&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,895,999&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;412&#34;,&#34;active_cases&#34;:&#34;36,580&#34;,&#34;total_cases_per_1m_population&#34;:&#34;197,215&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,793&#34;,&#34;total_tests&#34;:&#34;35,716,069&#34;,&#34;tests_per_1m_population&#34;:&#34;777,376&#34;},{&#34;country_name&#34;:&#34;Netherlands&#34;,&#34;cases&#34;:&#34;8,035,603&#34;,&#34;deaths&#34;:&#34;22,206&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,643,520&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;94&#34;,&#34;active_cases&#34;:&#34;369,877&#34;,&#34;total_cases_per_1m_population&#34;:&#34;467,096&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,291&#34;,&#34;total_tests&#34;:&#34;21,107,399&#34;,&#34;tests_per_1m_population&#34;:&#34;1,226,938&#34;},{&#34;country_name&#34;:&#34;Japan&#34;,&#34;cases&#34;:&#34;7,621,562&#34;,&#34;deaths&#34;:&#34;29,284&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,135,403&#34;,&#34;new_deaths&#34;:&#34;27&#34;,&#34;new_cases&#34;:&#34;43,721&#34;,&#34;serious_critical&#34;:&#34;195&#34;,&#34;active_cases&#34;:&#34;456,875&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,596&#34;,&#34;deaths_per_1m_population&#34;:&#34;233&#34;,&#34;total_tests&#34;:&#34;46,690,473&#34;,&#34;tests_per_1m_population&#34;:&#34;371,215&#34;},{&#34;country_name&#34;:&#34;Iran&#34;,&#34;cases&#34;:&#34;7,216,040&#34;,&#34;deaths&#34;:&#34;140,975&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,966,954&#34;,&#34;new_deaths&#34;:&#34;13&#34;,&#34;new_cases&#34;:&#34;528&#34;,&#34;serious_critical&#34;:&#34;1,046&#34;,&#34;active_cases&#34;:&#34;108,111&#34;,&#34;total_cases_per_1m_population&#34;:&#34;83,972&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,641&#34;,&#34;total_tests&#34;:&#34;50,811,054&#34;,&#34;tests_per_1m_population&#34;:&#34;591,284&#34;},{&#34;country_name&#34;:&#34;Colombia&#34;,&#34;cases&#34;:&#34;6,091,094&#34;,&#34;deaths&#34;:&#34;139,771&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,924,433&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;342&#34;,&#34;active_cases&#34;:&#34;26,890&#34;,&#34;total_cases_per_1m_population&#34;:&#34;117,448&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,695&#34;,&#34;total_tests&#34;:&#34;34,355,022&#34;,&#34;tests_per_1m_population&#34;:&#34;662,433&#34;},{&#34;country_name&#34;:&#34;Indonesia&#34;,&#34;cases&#34;:&#34;6,043,768&#34;,&#34;deaths&#34;:&#34;156,067&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,868,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2,771&#34;,&#34;active_cases&#34;:&#34;19,450&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,682&#34;,&#34;deaths_per_1m_population&#34;:&#34;560&#34;,&#34;total_tests&#34;:&#34;94,877,499&#34;,&#34;tests_per_1m_population&#34;:&#34;340,374&#34;},{&#34;country_name&#34;:&#34;Poland&#34;,&#34;cases&#34;:&#34;5,991,197&#34;,&#34;deaths&#34;:&#34;115,948&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,334,375&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;344&#34;,&#34;serious_critical&#34;:&#34;1,588&#34;,&#34;active_cases&#34;:&#34;540,874&#34;,&#34;total_cases_per_1m_population&#34;:&#34;158,616&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,070&#34;,&#34;total_tests&#34;:&#34;36,027,053&#34;,&#34;tests_per_1m_population&#34;:&#34;953,808&#34;},{&#34;country_name&#34;:&#34;Mexico&#34;,&#34;cases&#34;:&#34;5,733,514&#34;,&#34;deaths&#34;:&#34;324,117&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,033,892&#34;,&#34;new_deaths&#34;:&#34;57&#34;,&#34;new_cases&#34;:&#34;802&#34;,&#34;serious_critical&#34;:&#34;4,798&#34;,&#34;active_cases&#34;:&#34;375,505&#34;,&#34;total_cases_per_1m_population&#34;:&#34;43,641&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,467&#34;,&#34;total_tests&#34;:&#34;15,762,889&#34;,&#34;tests_per_1m_population&#34;:&#34;119,981&#34;},{&#34;country_name&#34;:&#34;Australia&#34;,&#34;cases&#34;:&#34;5,689,377&#34;,&#34;deaths&#34;:&#34;6,991&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,274,197&#34;,&#34;new_deaths&#34;:&#34;21&#34;,&#34;new_cases&#34;:&#34;34,769&#34;,&#34;serious_critical&#34;:&#34;135&#34;,&#34;active_cases&#34;:&#34;408,189&#34;,&#34;total_cases_per_1m_population&#34;:&#34;218,537&#34;,&#34;deaths_per_1m_population&#34;:&#34;269&#34;,&#34;total_tests&#34;:&#34;68,845,476&#34;,&#34;tests_per_1m_population&#34;:&#34;2,644,452&#34;},{&#34;country_name&#34;:&#34;Ukraine&#34;,&#34;cases&#34;:&#34;4,997,224&#34;,&#34;deaths&#34;:&#34;108,306&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;177&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;115,517&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,504&#34;,&#34;total_tests&#34;:&#34;19,521,252&#34;,&#34;tests_per_1m_population&#34;:&#34;451,259&#34;},{&#34;country_name&#34;:&#34;Malaysia&#34;,&#34;cases&#34;:&#34;4,427,067&#34;,&#34;deaths&#34;:&#34;35,491&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,310,599&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;89&#34;,&#34;active_cases&#34;:&#34;80,977&#34;,&#34;total_cases_per_1m_population&#34;:&#34;133,690&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,072&#34;,&#34;total_tests&#34;:&#34;58,332,799&#34;,&#34;tests_per_1m_population&#34;:&#34;1,761,549&#34;},{&#34;country_name&#34;:&#34;Thailand&#34;,&#34;cases&#34;:&#34;4,165,874&#34;,&#34;deaths&#34;:&#34;27,778&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,954,945&#34;,&#34;new_deaths&#34;:&#34;126&#34;,&#34;new_cases&#34;:&#34;17,784&#34;,&#34;serious_critical&#34;:&#34;1,496&#34;,&#34;active_cases&#34;:&#34;183,151&#34;,&#34;total_cases_per_1m_population&#34;:&#34;59,414&#34;,&#34;deaths_per_1m_population&#34;:&#34;396&#34;,&#34;total_tests&#34;:&#34;17,270,775&#34;,&#34;tests_per_1m_population&#34;:&#34;246,317&#34;},{&#34;country_name&#34;:&#34;Austria&#34;,&#34;cases&#34;:&#34;4,104,859&#34;,&#34;deaths&#34;:&#34;18,047&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,989,860&#34;,&#34;new_deaths&#34;:&#34;12&#34;,&#34;new_cases&#34;:&#34;5,810&#34;,&#34;serious_critical&#34;:&#34;121&#34;,&#34;active_cases&#34;:&#34;96,952&#34;,&#34;total_cases_per_1m_population&#34;:&#34;451,125&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,983&#34;,&#34;total_tests&#34;:&#34;181,825,734&#34;,&#34;tests_per_1m_population&#34;:&#34;19,982,688&#34;},{&#34;country_name&#34;:&#34;Israel&#34;,&#34;cases&#34;:&#34;4,054,342&#34;,&#34;deaths&#34;:&#34;10,658&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,009,152&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;220&#34;,&#34;active_cases&#34;:&#34;34,532&#34;,&#34;total_cases_per_1m_population&#34;:&#34;434,735&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,143&#34;,&#34;total_tests&#34;:&#34;41,373,364&#34;,&#34;tests_per_1m_population&#34;:&#34;4,436,346&#34;},{&#34;country_name&#34;:&#34;Belgium&#34;,&#34;cases&#34;:&#34;4,015,791&#34;,&#34;deaths&#34;:&#34;31,319&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,726,457&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;169&#34;,&#34;active_cases&#34;:&#34;258,015&#34;,&#34;total_cases_per_1m_population&#34;:&#34;343,798&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,681&#34;,&#34;total_tests&#34;:&#34;33,456,470&#34;,&#34;tests_per_1m_population&#34;:&#34;2,864,259&#34;},{&#34;country_name&#34;:&#34;Czechia&#34;,&#34;cases&#34;:&#34;3,895,544&#34;,&#34;deaths&#34;:&#34;40,081&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,838,099&#34;,&#34;new_deaths&#34;:&#34;5&#34;,&#34;new_cases&#34;:&#34;911&#34;,&#34;serious_critical&#34;:&#34;43&#34;,&#34;active_cases&#34;:&#34;17,364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;362,550&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,730&#34;,&#34;total_tests&#34;:&#34;55,117,064&#34;,&#34;tests_per_1m_population&#34;:&#34;5,129,629&#34;},{&#34;country_name&#34;:&#34;Portugal&#34;,&#34;cases&#34;:&#34;3,791,744&#34;,&#34;deaths&#34;:&#34;22,162&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;61&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;373,827&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,185&#34;,&#34;total_tests&#34;:&#34;40,748,372&#34;,&#34;tests_per_1m_population&#34;:&#34;4,017,371&#34;},{&#34;country_name&#34;:&#34;South Africa&#34;,&#34;cases&#34;:&#34;3,759,689&#34;,&#34;deaths&#34;:&#34;100,298&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,632,572&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;175&#34;,&#34;active_cases&#34;:&#34;26,819&#34;,&#34;total_cases_per_1m_population&#34;:&#34;61,981&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,653&#34;,&#34;total_tests&#34;:&#34;24,313,334&#34;,&#34;tests_per_1m_population&#34;:&#34;400,824&#34;},{&#34;country_name&#34;:&#34;Canada&#34;,&#34;cases&#34;:&#34;3,695,585&#34;,&#34;deaths&#34;:&#34;38,777&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,426,082&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;426&#34;,&#34;active_cases&#34;:&#34;230,726&#34;,&#34;total_cases_per_1m_population&#34;:&#34;96,391&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,011&#34;,&#34;total_tests&#34;:&#34;60,536,359&#34;,&#34;tests_per_1m_population&#34;:&#34;1,578,955&#34;},{&#34;country_name&#34;:&#34;Philippines&#34;,&#34;cases&#34;:&#34;3,684,500&#34;,&#34;deaths&#34;:&#34;60,182&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,610,658&#34;,&#34;new_deaths&#34;:&#34;3&#34;,&#34;new_cases&#34;:&#34;205&#34;,&#34;serious_critical&#34;:&#34;289&#34;,&#34;active_cases&#34;:&#34;13,660&#34;,&#34;total_cases_per_1m_population&#34;:&#34;32,835&#34;,&#34;deaths_per_1m_population&#34;:&#34;536&#34;,&#34;total_tests&#34;:&#34;29,427,586&#34;,&#34;tests_per_1m_population&#34;:&#34;262,246&#34;},{&#34;country_name&#34;:&#34;Switzerland&#34;,&#34;cases&#34;:&#34;3,579,867&#34;,&#34;deaths&#34;:&#34;13,816&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,378,507&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;90&#34;,&#34;active_cases&#34;:&#34;187,544&#34;,&#34;total_cases_per_1m_population&#34;:&#34;408,247&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,576&#34;,&#34;total_tests&#34;:&#34;20,666,182&#34;,&#34;tests_per_1m_population&#34;:&#34;2,356,766&#34;},{&#34;country_name&#34;:&#34;Peru&#34;,&#34;cases&#34;:&#34;3,559,343&#34;,&#34;deaths&#34;:&#34;212,724&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;356&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;105,303&#34;,&#34;deaths_per_1m_population&#34;:&#34;6,293&#34;,&#34;total_tests&#34;:&#34;29,592,270&#34;,&#34;tests_per_1m_population&#34;:&#34;875,489&#34;},{&#34;country_name&#34;:&#34;Chile&#34;,&#34;cases&#34;:&#34;3,544,463&#34;,&#34;deaths&#34;:&#34;57,375&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,368,772&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;286&#34;,&#34;active_cases&#34;:&#34;118,316&#34;,&#34;total_cases_per_1m_population&#34;:&#34;182,588&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,956&#34;,&#34;total_tests&#34;:&#34;36,711,724&#34;,&#34;tests_per_1m_population&#34;:&#34;1,891,147&#34;},{&#34;country_name&#34;:&#34;Greece&#34;,&#34;cases&#34;:&#34;3,277,557&#34;,&#34;deaths&#34;:&#34;28,867&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,151,717&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;277&#34;,&#34;active_cases&#34;:&#34;96,973&#34;,&#34;total_cases_per_1m_population&#34;:&#34;317,250&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,794&#34;,&#34;total_tests&#34;:&#34;78,872,546&#34;,&#34;tests_per_1m_population&#34;:&#34;7,634,431&#34;},{&#34;country_name&#34;:&#34;Denmark&#34;,&#34;cases&#34;:&#34;2,959,040&#34;,&#34;deaths&#34;:&#34;6,072&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,929,091&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;15&#34;,&#34;active_cases&#34;:&#34;23,877&#34;,&#34;total_cases_per_1m_population&#34;:&#34;507,639&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,042&#34;,&#34;total_tests&#34;:&#34;127,141,200&#34;,&#34;tests_per_1m_population&#34;:&#34;21,811,751&#34;},{&#34;country_name&#34;:&#34;Romania&#34;,&#34;cases&#34;:&#34;2,888,318&#34;,&#34;deaths&#34;:&#34;65,427&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,606,660&#34;,&#34;new_deaths&#34;:&#34;6&#34;,&#34;new_cases&#34;:&#34;494&#34;,&#34;serious_critical&#34;:&#34;216&#34;,&#34;active_cases&#34;:&#34;216,231&#34;,&#34;total_cases_per_1m_population&#34;:&#34;151,968&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,442&#34;,&#34;total_tests&#34;:&#34;22,594,702&#34;,&#34;tests_per_1m_population&#34;:&#34;1,188,815&#34;},{&#34;country_name&#34;:&#34;Sweden&#34;,&#34;cases&#34;:&#34;2,498,388&#34;,&#34;deaths&#34;:&#34;18,656&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,464,421&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;19&#34;,&#34;active_cases&#34;:&#34;15,311&#34;,&#34;total_cases_per_1m_population&#34;:&#34;244,630&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,827&#34;,&#34;total_tests&#34;:&#34;18,493,218&#34;,&#34;tests_per_1m_population&#34;:&#34;1,810,763&#34;},{&#34;country_name&#34;:&#34;Iraq&#34;,&#34;cases&#34;:&#34;2,324,141&#34;,&#34;deaths&#34;:&#34;25,204&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,295,947&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;20&#34;,&#34;active_cases&#34;:&#34;2,990&#34;,&#34;total_cases_per_1m_population&#34;:&#34;55,534&#34;,&#34;deaths_per_1m_population&#34;:&#34;602&#34;,&#34;total_tests&#34;:&#34;18,450,939&#34;,&#34;tests_per_1m_population&#34;:&#34;440,871&#34;},{&#34;country_name&#34;:&#34;Serbia&#34;,&#34;cases&#34;:&#34;2,001,144&#34;,&#34;deaths&#34;:&#34;15,953&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,967,786&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;25&#34;,&#34;active_cases&#34;:&#34;17,405&#34;,&#34;total_cases_per_1m_population&#34;:&#34;230,710&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,839&#34;,&#34;total_tests&#34;:&#34;9,427,662&#34;,&#34;tests_per_1m_population&#34;:&#34;1,086,907&#34;},{&#34;country_name&#34;:&#34;Bangladesh&#34;,&#34;cases&#34;:&#34;1,952,532&#34;,&#34;deaths&#34;:&#34;29,127&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,893,131&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,297&#34;,&#34;active_cases&#34;:&#34;30,274&#34;,&#34;total_cases_per_1m_population&#34;:&#34;11,646&#34;,&#34;deaths_per_1m_population&#34;:&#34;174&#34;,&#34;total_tests&#34;:&#34;13,956,056&#34;,&#34;tests_per_1m_population&#34;:&#34;83,245&#34;},{&#34;country_name&#34;:&#34;Hungary&#34;,&#34;cases&#34;:&#34;1,890,953&#34;,&#34;deaths&#34;:&#34;46,048&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,776,617&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;45&#34;,&#34;active_cases&#34;:&#34;68,288&#34;,&#34;total_cases_per_1m_population&#34;:&#34;196,645&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,789&#34;,&#34;total_tests&#34;:&#34;11,295,119&#34;,&#34;tests_per_1m_population&#34;:&#34;1,174,608&#34;},{&#34;country_name&#34;:&#34;Slovakia&#34;,&#34;cases&#34;:&#34;1,774,808&#34;,&#34;deaths&#34;:&#34;19,839&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,730,712&#34;,&#34;new_deaths&#34;:&#34;10&#34;,&#34;new_cases&#34;:&#34;1,155&#34;,&#34;serious_critical&#34;:&#34;88&#34;,&#34;active_cases&#34;:&#34;24,257&#34;,&#34;total_cases_per_1m_population&#34;:&#34;324,794&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,631&#34;,&#34;total_tests&#34;:&#34;7,057,901&#34;,&#34;tests_per_1m_population&#34;:&#34;1,291,611&#34;},{&#34;country_name&#34;:&#34;Jordan&#34;,&#34;cases&#34;:&#34;1,694,216&#34;,&#34;deaths&#34;:&#34;14,048&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,678,941&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;124&#34;,&#34;active_cases&#34;:&#34;1,227&#34;,&#34;total_cases_per_1m_population&#34;:&#34;163,125&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,353&#34;,&#34;total_tests&#34;:&#34;16,670,254&#34;,&#34;tests_per_1m_population&#34;:&#34;1,605,074&#34;},{&#34;country_name&#34;:&#34;Georgia&#34;,&#34;cases&#34;:&#34;1,654,255&#34;,&#34;deaths&#34;:&#34;16,800&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,635,791&#34;,&#34;new_deaths&#34;:&#34;3&#34;,&#34;new_cases&#34;:&#34;92&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,664&#34;,&#34;total_cases_per_1m_population&#34;:&#34;416,129&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,226&#34;,&#34;total_tests&#34;:&#34;16,807,205&#34;,&#34;tests_per_1m_population&#34;:&#34;4,227,861&#34;},{&#34;country_name&#34;:&#34;Pakistan&#34;,&#34;cases&#34;:&#34;1,527,856&#34;,&#34;deaths&#34;:&#34;30,369&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,493,998&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;105&#34;,&#34;serious_critical&#34;:&#34;186&#34;,&#34;active_cases&#34;:&#34;3,489&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,683&#34;,&#34;deaths_per_1m_population&#34;:&#34;133&#34;,&#34;total_tests&#34;:&#34;28,048,307&#34;,&#34;tests_per_1m_population&#34;:&#34;122,679&#34;},{&#34;country_name&#34;:&#34;Ireland&#34;,&#34;cases&#34;:&#34;1,509,536&#34;,&#34;deaths&#34;:&#34;6,996&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,415,949&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;41&#34;,&#34;active_cases&#34;:&#34;86,591&#34;,&#34;total_cases_per_1m_population&#34;:&#34;299,669&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,389&#34;,&#34;total_tests&#34;:&#34;12,016,948&#34;,&#34;tests_per_1m_population&#34;:&#34;2,385,571&#34;},{&#34;country_name&#34;:&#34;Norway&#34;,&#34;cases&#34;:&#34;1,423,509&#34;,&#34;deaths&#34;:&#34;2,871&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;20&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;258,925&#34;,&#34;deaths_per_1m_population&#34;:&#34;522&#34;,&#34;total_tests&#34;:&#34;11,002,430&#34;,&#34;tests_per_1m_population&#34;:&#34;2,001,256&#34;},{&#34;country_name&#34;:&#34;Kazakhstan&#34;,&#34;cases&#34;:&#34;1,305,457&#34;,&#34;deaths&#34;:&#34;13,660&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,290,988&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;10&#34;,&#34;serious_critical&#34;:&#34;24&#34;,&#34;active_cases&#34;:&#34;809&#34;,&#34;total_cases_per_1m_population&#34;:&#34;68,056&#34;,&#34;deaths_per_1m_population&#34;:&#34;712&#34;,&#34;total_tests&#34;:&#34;11,575,012&#34;,&#34;tests_per_1m_population&#34;:&#34;603,428&#34;},{&#34;country_name&#34;:&#34;Hong Kong&#34;,&#34;cases&#34;:&#34;1,201,431&#34;,&#34;deaths&#34;:&#34;9,236&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;115&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;157,942&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,214&#34;,&#34;total_tests&#34;:&#34;44,972,952&#34;,&#34;tests_per_1m_population&#34;:&#34;5,912,223&#34;},{&#34;country_name&#34;:&#34;Singapore&#34;,&#34;cases&#34;:&#34;1,180,124&#34;,&#34;deaths&#34;:&#34;1,325&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,109,387&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;69,412&#34;,&#34;total_cases_per_1m_population&#34;:&#34;198,895&#34;,&#34;deaths_per_1m_population&#34;:&#34;223&#34;,&#34;total_tests&#34;:&#34;23,712,995&#34;,&#34;tests_per_1m_population&#34;:&#34;3,996,529&#34;},{&#34;country_name&#34;:&#34;Morocco&#34;,&#34;cases&#34;:&#34;1,164,670&#34;,&#34;deaths&#34;:&#34;16,065&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,148,154&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;293&#34;,&#34;active_cases&#34;:&#34;451&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,893&#34;,&#34;deaths_per_1m_population&#34;:&#34;426&#34;,&#34;total_tests&#34;:&#34;11,237,010&#34;,&#34;tests_per_1m_population&#34;:&#34;298,062&#34;},{&#34;country_name&#34;:&#34;Bulgaria&#34;,&#34;cases&#34;:&#34;1,152,892&#34;,&#34;deaths&#34;:&#34;36,849&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;959,542&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;105&#34;,&#34;active_cases&#34;:&#34;156,501&#34;,&#34;total_cases_per_1m_population&#34;:&#34;168,206&#34;,&#34;deaths_per_1m_population&#34;:&#34;5,376&#34;,&#34;total_tests&#34;:&#34;9,797,011&#34;,&#34;tests_per_1m_population&#34;:&#34;1,429,377&#34;},{&#34;country_name&#34;:&#34;Croatia&#34;,&#34;cases&#34;:&#34;1,117,175&#34;,&#34;deaths&#34;:&#34;15,778&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,096,829&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;22&#34;,&#34;active_cases&#34;:&#34;4,568&#34;,&#34;total_cases_per_1m_population&#34;:&#34;275,195&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,887&#34;,&#34;total_tests&#34;:&#34;4,762,146&#34;,&#34;tests_per_1m_population&#34;:&#34;1,173,065&#34;},{&#34;country_name&#34;:&#34;Cuba&#34;,&#34;cases&#34;:&#34;1,101,486&#34;,&#34;deaths&#34;:&#34;8,523&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,091,603&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;1,360&#34;,&#34;total_cases_per_1m_population&#34;:&#34;97,355&#34;,&#34;deaths_per_1m_population&#34;:&#34;753&#34;,&#34;total_tests&#34;:&#34;12,920,253&#34;,&#34;tests_per_1m_population&#34;:&#34;1,141,957&#34;},{&#34;country_name&#34;:&#34;Lebanon&#34;,&#34;cases&#34;:&#34;1,096,320&#34;,&#34;deaths&#34;:&#34;10,374&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,079,455&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;186&#34;,&#34;active_cases&#34;:&#34;6,491&#34;,&#34;total_cases_per_1m_population&#34;:&#34;161,931&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,532&#34;,&#34;total_tests&#34;:&#34;4,795,578&#34;,&#34;tests_per_1m_population&#34;:&#34;708,328&#34;},{&#34;country_name&#34;:&#34;Lithuania&#34;,&#34;cases&#34;:&#34;1,054,618&#34;,&#34;deaths&#34;:&#34;9,063&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,016,510&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;427&#34;,&#34;serious_critical&#34;:&#34;31&#34;,&#34;active_cases&#34;:&#34;29,045&#34;,&#34;total_cases_per_1m_population&#34;:&#34;397,407&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,415&#34;,&#34;total_tests&#34;:&#34;8,217,113&#34;,&#34;tests_per_1m_population&#34;:&#34;3,096,414&#34;},{&#34;country_name&#34;:&#34;Tunisia&#34;,&#34;cases&#34;:&#34;1,039,532&#34;,&#34;deaths&#34;:&#34;28,533&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;29&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;86,327&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,369&#34;,&#34;total_tests&#34;:&#34;4,563,397&#34;,&#34;tests_per_1m_population&#34;:&#34;378,962&#34;},{&#34;country_name&#34;:&#34;Slovenia&#34;,&#34;cases&#34;:&#34;1,003,970&#34;,&#34;deaths&#34;:&#34;6,576&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;980,501&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;30&#34;,&#34;active_cases&#34;:&#34;16,893&#34;,&#34;total_cases_per_1m_population&#34;:&#34;482,805&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,162&#34;,&#34;total_tests&#34;:&#34;2,640,107&#34;,&#34;tests_per_1m_population&#34;:&#34;1,269,615&#34;},{&#34;country_name&#34;:&#34;Finland&#34;,&#34;cases&#34;:&#34;1,000,472&#34;,&#34;deaths&#34;:&#34;3,638&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;46,000&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;31&#34;,&#34;active_cases&#34;:&#34;950,834&#34;,&#34;total_cases_per_1m_population&#34;:&#34;180,062&#34;,&#34;deaths_per_1m_population&#34;:&#34;655&#34;,&#34;total_tests&#34;:&#34;10,644,579&#34;,&#34;tests_per_1m_population&#34;:&#34;1,915,782&#34;},{&#34;country_name&#34;:&#34;Nepal&#34;,&#34;cases&#34;:&#34;978,743&#34;,&#34;deaths&#34;:&#34;11,951&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;966,523&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;11&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;269&#34;,&#34;total_cases_per_1m_population&#34;:&#34;32,535&#34;,&#34;deaths_per_1m_population&#34;:&#34;397&#34;,&#34;total_tests&#34;:&#34;5,616,752&#34;,&#34;tests_per_1m_population&#34;:&#34;186,711&#34;},{&#34;country_name&#34;:&#34;Belarus&#34;,&#34;cases&#34;:&#34;977,434&#34;,&#34;deaths&#34;:&#34;6,922&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;928,536&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;41,976&#34;,&#34;total_cases_per_1m_population&#34;:&#34;103,501&#34;,&#34;deaths_per_1m_population&#34;:&#34;733&#34;,&#34;total_tests&#34;:&#34;13,092,771&#34;,&#34;tests_per_1m_population&#34;:&#34;1,386,401&#34;},{&#34;country_name&#34;:&#34;Bolivia&#34;,&#34;cases&#34;:&#34;904,377&#34;,&#34;deaths&#34;:&#34;21,908&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;855,123&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;83&#34;,&#34;serious_critical&#34;:&#34;220&#34;,&#34;active_cases&#34;:&#34;27,346&#34;,&#34;total_cases_per_1m_population&#34;:&#34;75,614&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,832&#34;,&#34;total_tests&#34;:&#34;2,693,845&#34;,&#34;tests_per_1m_population&#34;:&#34;225,230&#34;},{&#34;country_name&#34;:&#34;UAE&#34;,&#34;cases&#34;:&#34;897,136&#34;,&#34;deaths&#34;:&#34;2,302&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;879,787&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;244&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;15,047&#34;,&#34;total_cases_per_1m_population&#34;:&#34;88,772&#34;,&#34;deaths_per_1m_population&#34;:&#34;228&#34;,&#34;total_tests&#34;:&#34;154,420,740&#34;,&#34;tests_per_1m_population&#34;:&#34;15,279,961&#34;},{&#34;country_name&#34;:&#34;Uruguay&#34;,&#34;cases&#34;:&#34;895,775&#34;,&#34;deaths&#34;:&#34;7,197&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;886,654&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;18&#34;,&#34;active_cases&#34;:&#34;1,924&#34;,&#34;total_cases_per_1m_population&#34;:&#34;256,268&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,059&#34;,&#34;total_tests&#34;:&#34;6,091,188&#34;,&#34;tests_per_1m_population&#34;:&#34;1,742,599&#34;},{&#34;country_name&#34;:&#34;New Zealand&#34;,&#34;cases&#34;:&#34;884,289&#34;,&#34;deaths&#34;:&#34;636&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;824,272&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;5,714&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;59,381&#34;,&#34;total_cases_per_1m_population&#34;:&#34;176,784&#34;,&#34;deaths_per_1m_population&#34;:&#34;127&#34;,&#34;total_tests&#34;:&#34;6,983,031&#34;,&#34;tests_per_1m_population&#34;:&#34;1,396,020&#34;},{&#34;country_name&#34;:&#34;Ecuador&#34;,&#34;cases&#34;:&#34;868,053&#34;,&#34;deaths&#34;:&#34;35,581&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;759&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;47,888&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,963&#34;,&#34;total_tests&#34;:&#34;2,470,170&#34;,&#34;tests_per_1m_population&#34;:&#34;136,273&#34;},{&#34;country_name&#34;:&#34;Costa Rica&#34;,&#34;cases&#34;:&#34;847,784&#34;,&#34;deaths&#34;:&#34;8,383&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;829,515&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;43&#34;,&#34;active_cases&#34;:&#34;9,886&#34;,&#34;total_cases_per_1m_population&#34;:&#34;163,725&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,619&#34;,&#34;total_tests&#34;:&#34;4,240,743&#34;,&#34;tests_per_1m_population&#34;:&#34;818,979&#34;},{&#34;country_name&#34;:&#34;Guatemala&#34;,&#34;cases&#34;:&#34;841,341&#34;,&#34;deaths&#34;:&#34;17,496&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;821,185&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;2,660&#34;,&#34;total_cases_per_1m_population&#34;:&#34;45,444&#34;,&#34;deaths_per_1m_population&#34;:&#34;945&#34;,&#34;total_tests&#34;:&#34;4,402,305&#34;,&#34;tests_per_1m_population&#34;:&#34;237,787&#34;},{&#34;country_name&#34;:&#34;Latvia&#34;,&#34;cases&#34;:&#34;817,316&#34;,&#34;deaths&#34;:&#34;5,743&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;803,135&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;322&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;8,438&#34;,&#34;total_cases_per_1m_population&#34;:&#34;442,135&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,107&#34;,&#34;total_tests&#34;:&#34;7,154,016&#34;,&#34;tests_per_1m_population&#34;:&#34;3,870,035&#34;},{&#34;country_name&#34;:&#34;Azerbaijan&#34;,&#34;cases&#34;:&#34;792,476&#34;,&#34;deaths&#34;:&#34;9,707&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;782,634&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;135&#34;,&#34;total_cases_per_1m_population&#34;:&#34;76,908&#34;,&#34;deaths_per_1m_population&#34;:&#34;942&#34;,&#34;total_tests&#34;:&#34;6,792,132&#34;,&#34;tests_per_1m_population&#34;:&#34;659,165&#34;},{&#34;country_name&#34;:&#34;Panama&#34;,&#34;cases&#34;:&#34;771,486&#34;,&#34;deaths&#34;:&#34;8,182&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;759,832&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;3,472&#34;,&#34;total_cases_per_1m_population&#34;:&#34;173,862&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,844&#34;,&#34;total_tests&#34;:&#34;5,820,472&#34;,&#34;tests_per_1m_population&#34;:&#34;1,311,699&#34;},{&#34;country_name&#34;:&#34;Saudi Arabia&#34;,&#34;cases&#34;:&#34;753,332&#34;,&#34;deaths&#34;:&#34;9,076&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;740,467&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;45&#34;,&#34;active_cases&#34;:&#34;3,789&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,047&#34;,&#34;deaths_per_1m_population&#34;:&#34;254&#34;,&#34;total_tests&#34;:&#34;41,817,866&#34;,&#34;tests_per_1m_population&#34;:&#34;1,168,345&#34;},{&#34;country_name&#34;:&#34;Sri Lanka&#34;,&#34;cases&#34;:&#34;663,131&#34;,&#34;deaths&#34;:&#34;16,502&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;642,574&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;4,055&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,736&#34;,&#34;deaths_per_1m_population&#34;:&#34;765&#34;,&#34;total_tests&#34;:&#34;6,486,117&#34;,&#34;tests_per_1m_population&#34;:&#34;300,627&#34;},{&#34;country_name&#34;:&#34;Paraguay&#34;,&#34;cases&#34;:&#34;649,034&#34;,&#34;deaths&#34;:&#34;18,795&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;624,673&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;5,566&#34;,&#34;total_cases_per_1m_population&#34;:&#34;89,022&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,578&#34;,&#34;total_tests&#34;:&#34;2,623,300&#34;,&#34;tests_per_1m_population&#34;:&#34;359,816&#34;},{&#34;country_name&#34;:&#34;Kuwait&#34;,&#34;cases&#34;:&#34;631,294&#34;,&#34;deaths&#34;:&#34;2,555&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;627,899&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;840&#34;,&#34;total_cases_per_1m_population&#34;:&#34;143,981&#34;,&#34;deaths_per_1m_population&#34;:&#34;583&#34;,&#34;total_tests&#34;:&#34;7,999,656&#34;,&#34;tests_per_1m_population&#34;:&#34;1,824,506&#34;},{&#34;country_name&#34;:&#34;Myanmar&#34;,&#34;cases&#34;:&#34;612,733&#34;,&#34;deaths&#34;:&#34;19,434&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;591,609&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,690&#34;,&#34;total_cases_per_1m_population&#34;:&#34;11,127&#34;,&#34;deaths_per_1m_population&#34;:&#34;353&#34;,&#34;total_tests&#34;:&#34;7,891,077&#34;,&#34;tests_per_1m_population&#34;:&#34;143,296&#34;},{&#34;country_name&#34;:&#34;Palestine&#34;,&#34;cases&#34;:&#34;581,816&#34;,&#34;deaths&#34;:&#34;5,353&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;575,899&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;17&#34;,&#34;active_cases&#34;:&#34;564&#34;,&#34;total_cases_per_1m_population&#34;:&#34;109,459&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,007&#34;,&#34;total_tests&#34;:&#34;3,078,533&#34;,&#34;tests_per_1m_population&#34;:&#34;579,175&#34;},{&#34;country_name&#34;:&#34;Dominican Republic&#34;,&#34;cases&#34;:&#34;578,954&#34;,&#34;deaths&#34;:&#34;4,376&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;574,297&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;16&#34;,&#34;active_cases&#34;:&#34;281&#34;,&#34;total_cases_per_1m_population&#34;:&#34;52,421&#34;,&#34;deaths_per_1m_population&#34;:&#34;396&#34;,&#34;total_tests&#34;:&#34;3,261,060&#34;,&#34;tests_per_1m_population&#34;:&#34;295,272&#34;},{&#34;country_name&#34;:&#34;Estonia&#34;,&#34;cases&#34;:&#34;570,257&#34;,&#34;deaths&#34;:&#34;2,531&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;507,474&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;181&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;60,252&#34;,&#34;total_cases_per_1m_population&#34;:&#34;429,364&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,906&#34;,&#34;total_tests&#34;:&#34;3,311,935&#34;,&#34;tests_per_1m_population&#34;:&#34;2,493,655&#34;},{&#34;country_name&#34;:&#34;Bahrain&#34;,&#34;cases&#34;:&#34;565,830&#34;,&#34;deaths&#34;:&#34;1,475&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;560,795&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;3,560&#34;,&#34;total_cases_per_1m_population&#34;:&#34;312,916&#34;,&#34;deaths_per_1m_population&#34;:&#34;816&#34;,&#34;total_tests&#34;:&#34;9,695,962&#34;,&#34;tests_per_1m_population&#34;:&#34;5,362,081&#34;},{&#34;country_name&#34;:&#34;Venezuela&#34;,&#34;cases&#34;:&#34;522,121&#34;,&#34;deaths&#34;:&#34;5,705&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;515,305&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;230&#34;,&#34;active_cases&#34;:&#34;1,111&#34;,&#34;total_cases_per_1m_population&#34;:&#34;18,456&#34;,&#34;deaths_per_1m_population&#34;:&#34;202&#34;,&#34;total_tests&#34;:&#34;3,359,014&#34;,&#34;tests_per_1m_population&#34;:&#34;118,733&#34;},{&#34;country_name&#34;:&#34;Moldova&#34;,&#34;cases&#34;:&#34;516,986&#34;,&#34;deaths&#34;:&#34;11,489&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;504,142&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;49&#34;,&#34;active_cases&#34;:&#34;1,355&#34;,&#34;total_cases_per_1m_population&#34;:&#34;128,698&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,860&#34;,&#34;total_tests&#34;:&#34;3,216,305&#34;,&#34;tests_per_1m_population&#34;:&#34;800,665&#34;},{&#34;country_name&#34;:&#34;Egypt&#34;,&#34;cases&#34;:&#34;515,645&#34;,&#34;deaths&#34;:&#34;24,613&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;442,182&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;122&#34;,&#34;active_cases&#34;:&#34;48,850&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,873&#34;,&#34;deaths_per_1m_population&#34;:&#34;233&#34;,&#34;total_tests&#34;:&#34;3,693,367&#34;,&#34;tests_per_1m_population&#34;:&#34;34,903&#34;},{&#34;country_name&#34;:&#34;Libya&#34;,&#34;cases&#34;:&#34;501,862&#34;,&#34;deaths&#34;:&#34;6,429&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;490,900&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;101&#34;,&#34;active_cases&#34;:&#34;4,533&#34;,&#34;total_cases_per_1m_population&#34;:&#34;71,288&#34;,&#34;deaths_per_1m_population&#34;:&#34;913&#34;,&#34;total_tests&#34;:&#34;2,476,960&#34;,&#34;tests_per_1m_population&#34;:&#34;351,844&#34;},{&#34;country_name&#34;:&#34;Cyprus&#34;,&#34;cases&#34;:&#34;470,481&#34;,&#34;deaths&#34;:&#34;1,011&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;124,370&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;60&#34;,&#34;active_cases&#34;:&#34;345,100&#34;,&#34;total_cases_per_1m_population&#34;:&#34;384,623&#34;,&#34;deaths_per_1m_population&#34;:&#34;827&#34;,&#34;total_tests&#34;:&#34;9,477,138&#34;,&#34;tests_per_1m_population&#34;:&#34;7,747,665&#34;},{&#34;country_name&#34;:&#34;Ethiopia&#34;,&#34;cases&#34;:&#34;470,417&#34;,&#34;deaths&#34;:&#34;7,510&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;454,967&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;15&#34;,&#34;active_cases&#34;:&#34;7,940&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,917&#34;,&#34;deaths_per_1m_population&#34;:&#34;63&#34;,&#34;total_tests&#34;:&#34;4,763,756&#34;,&#34;tests_per_1m_population&#34;:&#34;39,665&#34;},{&#34;country_name&#34;:&#34;Mongolia&#34;,&#34;cases&#34;:&#34;469,580&#34;,&#34;deaths&#34;:&#34;2,177&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;313,256&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;30&#34;,&#34;serious_critical&#34;:&#34;192&#34;,&#34;active_cases&#34;:&#34;154,147&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139,194&#34;,&#34;deaths_per_1m_population&#34;:&#34;645&#34;,&#34;total_tests&#34;:&#34;4,030,048&#34;,&#34;tests_per_1m_population&#34;:&#34;1,194,595&#34;},{&#34;country_name&#34;:&#34;Armenia&#34;,&#34;cases&#34;:&#34;422,825&#34;,&#34;deaths&#34;:&#34;8,622&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;410,558&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;3&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,645&#34;,&#34;total_cases_per_1m_population&#34;:&#34;142,210&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,900&#34;,&#34;total_tests&#34;:&#34;3,035,104&#34;,&#34;tests_per_1m_population&#34;:&#34;1,020,807&#34;},{&#34;country_name&#34;:&#34;Honduras&#34;,&#34;cases&#34;:&#34;422,275&#34;,&#34;deaths&#34;:&#34;10,892&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;131,100&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;105&#34;,&#34;active_cases&#34;:&#34;280,283&#34;,&#34;total_cases_per_1m_population&#34;:&#34;41,445&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,069&#34;,&#34;total_tests&#34;:&#34;1,263,329&#34;,&#34;tests_per_1m_population&#34;:&#34;123,991&#34;},{&#34;country_name&#34;:&#34;Oman&#34;,&#34;cases&#34;:&#34;388,995&#34;,&#34;deaths&#34;:&#34;4,257&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;384,055&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;683&#34;,&#34;total_cases_per_1m_population&#34;:&#34;72,833&#34;,&#34;deaths_per_1m_population&#34;:&#34;797&#34;,&#34;total_tests&#34;:&#34;25,000,000&#34;,&#34;tests_per_1m_population&#34;:&#34;4,680,828&#34;},{&#34;country_name&#34;:&#34;Bosnia and Herzegovina&#34;,&#34;cases&#34;:&#34;376,699&#34;,&#34;deaths&#34;:&#34;15,756&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;192,218&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;168,725&#34;,&#34;total_cases_per_1m_population&#34;:&#34;116,122&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,857&#34;,&#34;total_tests&#34;:&#34;1,752,716&#34;,&#34;tests_per_1m_population&#34;:&#34;540,297&#34;},{&#34;country_name&#34;:&#34;R u00e9union&#34;,&#34;cases&#34;:&#34;374,295&#34;,&#34;deaths&#34;:&#34;742&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;355,605&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;10&#34;,&#34;active_cases&#34;:&#34;17,948&#34;,&#34;total_cases_per_1m_population&#34;:&#34;412,744&#34;,&#34;deaths_per_1m_population&#34;:&#34;818&#34;,&#34;total_tests&#34;:&#34;1,603,660&#34;,&#34;tests_per_1m_population&#34;:&#34;1,768,393&#34;},{&#34;country_name&#34;:&#34;Qatar&#34;,&#34;cases&#34;:&#34;364,089&#34;,&#34;deaths&#34;:&#34;677&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;362,568&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;844&#34;,&#34;total_cases_per_1m_population&#34;:&#34;129,670&#34;,&#34;deaths_per_1m_population&#34;:&#34;241&#34;,&#34;total_tests&#34;:&#34;3,425,362&#34;,&#34;tests_per_1m_population&#34;:&#34;1,219,943&#34;},{&#34;country_name&#34;:&#34;Kenya&#34;,&#34;cases&#34;:&#34;323,696&#34;,&#34;deaths&#34;:&#34;5,649&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;317,909&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;138&#34;,&#34;total_cases_per_1m_population&#34;:&#34;5,790&#34;,&#34;deaths_per_1m_population&#34;:&#34;101&#34;,&#34;total_tests&#34;:&#34;3,581,506&#34;,&#34;tests_per_1m_population&#34;:&#34;64,060&#34;},{&#34;country_name&#34;:&#34;Zambia&#34;,&#34;cases&#34;:&#34;318,984&#34;,&#34;deaths&#34;:&#34;3,974&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;314,075&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;935&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,517&#34;,&#34;deaths_per_1m_population&#34;:&#34;206&#34;,&#34;total_tests&#34;:&#34;3,408,441&#34;,&#34;tests_per_1m_population&#34;:&#34;176,487&#34;},{&#34;country_name&#34;:&#34;North Macedonia&#34;,&#34;cases&#34;:&#34;309,062&#34;,&#34;deaths&#34;:&#34;9,271&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;299,064&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;727&#34;,&#34;total_cases_per_1m_population&#34;:&#34;148,358&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,450&#34;,&#34;total_tests&#34;:&#34;2,007,553&#34;,&#34;tests_per_1m_population&#34;:&#34;963,678&#34;},{&#34;country_name&#34;:&#34;Botswana&#34;,&#34;cases&#34;:&#34;305,859&#34;,&#34;deaths&#34;:&#34;2,688&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;303,026&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;145&#34;,&#34;total_cases_per_1m_population&#34;:&#34;125,491&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,103&#34;,&#34;total_tests&#34;:&#34;2,026,898&#34;,&#34;tests_per_1m_population&#34;:&#34;831,613&#34;},{&#34;country_name&#34;:&#34;Albania&#34;,&#34;cases&#34;:&#34;274,791&#34;,&#34;deaths&#34;:&#34;3,496&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;270,869&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;426&#34;,&#34;total_cases_per_1m_population&#34;:&#34;95,675&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,217&#34;,&#34;total_tests&#34;:&#34;1,799,730&#34;,&#34;tests_per_1m_population&#34;:&#34;626,620&#34;},{&#34;country_name&#34;:&#34;Algeria&#34;,&#34;cases&#34;:&#34;265,761&#34;,&#34;deaths&#34;:&#34;6,874&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;178,344&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;80,543&#34;,&#34;total_cases_per_1m_population&#34;:&#34;5,869&#34;,&#34;deaths_per_1m_population&#34;:&#34;152&#34;,&#34;total_tests&#34;:&#34;230,861&#34;,&#34;tests_per_1m_population&#34;:&#34;5,099&#34;},{&#34;country_name&#34;:&#34;Nigeria&#34;,&#34;cases&#34;:&#34;255,685&#34;,&#34;deaths&#34;:&#34;3,143&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;249,890&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;2,652&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,187&#34;,&#34;deaths_per_1m_population&#34;:&#34;15&#34;,&#34;total_tests&#34;:&#34;5,036,813&#34;,&#34;tests_per_1m_population&#34;:&#34;23,388&#34;},{&#34;country_name&#34;:&#34;Zimbabwe&#34;,&#34;cases&#34;:&#34;247,524&#34;,&#34;deaths&#34;:&#34;5,468&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;241,362&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;12&#34;,&#34;active_cases&#34;:&#34;694&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,227&#34;,&#34;deaths_per_1m_population&#34;:&#34;358&#34;,&#34;total_tests&#34;:&#34;2,240,305&#34;,&#34;tests_per_1m_population&#34;:&#34;146,872&#34;},{&#34;country_name&#34;:&#34;Uzbekistan&#34;,&#34;cases&#34;:&#34;238,469&#34;,&#34;deaths&#34;:&#34;1,637&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;236,483&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;27&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;349&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,943&#34;,&#34;deaths_per_1m_population&#34;:&#34;48&#34;,&#34;total_tests&#34;:&#34;1,377,915&#34;,&#34;tests_per_1m_population&#34;:&#34;40,120&#34;},{&#34;country_name&#34;:&#34;Montenegro&#34;,&#34;cases&#34;:&#34;234,619&#34;,&#34;deaths&#34;:&#34;2,713&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;231,297&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;609&#34;,&#34;total_cases_per_1m_population&#34;:&#34;373,473&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,319&#34;,&#34;total_tests&#34;:&#34;2,444,820&#34;,&#34;tests_per_1m_population&#34;:&#34;3,891,730&#34;},{&#34;country_name&#34;:&#34;Luxembourg&#34;,&#34;cases&#34;:&#34;233,966&#34;,&#34;deaths&#34;:&#34;1,058&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;221,501&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;11,407&#34;,&#34;total_cases_per_1m_population&#34;:&#34;363,099&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,642&#34;,&#34;total_tests&#34;:&#34;4,213,886&#34;,&#34;tests_per_1m_population&#34;:&#34;6,539,666&#34;},{&#34;country_name&#34;:&#34;Mozambique&#34;,&#34;cases&#34;:&#34;225,358&#34;,&#34;deaths&#34;:&#34;2,201&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;223,104&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;13&#34;,&#34;active_cases&#34;:&#34;53&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,863&#34;,&#34;deaths_per_1m_population&#34;:&#34;67&#34;,&#34;total_tests&#34;:&#34;1,308,458&#34;,&#34;tests_per_1m_population&#34;:&#34;39,849&#34;},{&#34;country_name&#34;:&#34;Laos&#34;,&#34;cases&#34;:&#34;205,975&#34;,&#34;deaths&#34;:&#34;732&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,660&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;1,082&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;197,583&#34;,&#34;total_cases_per_1m_population&#34;:&#34;27,588&#34;,&#34;deaths_per_1m_population&#34;:&#34;98&#34;,&#34;total_tests&#34;:&#34;1,232,128&#34;,&#34;tests_per_1m_population&#34;:&#34;165,029&#34;},{&#34;country_name&#34;:&#34;Kyrgyzstan&#34;,&#34;cases&#34;:&#34;200,983&#34;,&#34;deaths&#34;:&#34;2,991&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;196,386&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;131&#34;,&#34;active_cases&#34;:&#34;1,606&#34;,&#34;total_cases_per_1m_population&#34;:&#34;29,915&#34;,&#34;deaths_per_1m_population&#34;:&#34;445&#34;,&#34;total_tests&#34;:&#34;1,907,195&#34;,&#34;tests_per_1m_population&#34;:&#34;283,874&#34;},{&#34;country_name&#34;:&#34;China&#34;,&#34;cases&#34;:&#34;200,654&#34;,&#34;deaths&#34;:&#34;4,725&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;166,398&#34;,&#34;new_deaths&#34;:&#34;39&#34;,&#34;new_cases&#34;:&#34;1,580&#34;,&#34;serious_critical&#34;:&#34;236&#34;,&#34;active_cases&#34;:&#34;29,531&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139&#34;,&#34;deaths_per_1m_population&#34;:&#34;3&#34;,&#34;total_tests&#34;:&#34;160,000,000&#34;,&#34;tests_per_1m_population&#34;:&#34;111,163&#34;},{&#34;country_name&#34;:&#34;Iceland&#34;,&#34;cases&#34;:&#34;183,974&#34;,&#34;deaths&#34;:&#34;112&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;75,685&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;108,177&#34;,&#34;total_cases_per_1m_population&#34;:&#34;532,886&#34;,&#34;deaths_per_1m_population&#34;:&#34;324&#34;,&#34;total_tests&#34;:&#34;1,953,616&#34;,&#34;tests_per_1m_population&#34;:&#34;5,658,702&#34;},{&#34;country_name&#34;:&#34;Maldives&#34;,&#34;cases&#34;:&#34;178,883&#34;,&#34;deaths&#34;:&#34;298&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;163,687&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;25&#34;,&#34;active_cases&#34;:&#34;14,898&#34;,&#34;total_cases_per_1m_population&#34;:&#34;320,737&#34;,&#34;deaths_per_1m_population&#34;:&#34;534&#34;,&#34;total_tests&#34;:&#34;2,213,831&#34;,&#34;tests_per_1m_population&#34;:&#34;3,969,395&#34;},{&#34;country_name&#34;:&#34;Afghanistan&#34;,&#34;cases&#34;:&#34;178,689&#34;,&#34;deaths&#34;:&#34;7,682&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;161,748&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;39&#34;,&#34;serious_critical&#34;:&#34;1,124&#34;,&#34;active_cases&#34;:&#34;9,259&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,411&#34;,&#34;deaths_per_1m_population&#34;:&#34;190&#34;,&#34;total_tests&#34;:&#34;940,341&#34;,&#34;tests_per_1m_population&#34;:&#34;23,212&#34;},{&#34;country_name&#34;:&#34;Uganda&#34;,&#34;cases&#34;:&#34;164,069&#34;,&#34;deaths&#34;:&#34;3,596&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;100,205&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;60,268&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,394&#34;,&#34;deaths_per_1m_population&#34;:&#34;74&#34;,&#34;total_tests&#34;:&#34;2,612,795&#34;,&#34;tests_per_1m_population&#34;:&#34;54,043&#34;},{&#34;country_name&#34;:&#34;El Salvador&#34;,&#34;cases&#34;:&#34;162,089&#34;,&#34;deaths&#34;:&#34;4,127&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;150,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;7,300&#34;,&#34;total_cases_per_1m_population&#34;:&#34;24,764&#34;,&#34;deaths_per_1m_population&#34;:&#34;631&#34;,&#34;total_tests&#34;:&#34;1,950,448&#34;,&#34;tests_per_1m_population&#34;:&#34;297,993&#34;},{&#34;country_name&#34;:&#34;Ghana&#34;,&#34;cases&#34;:&#34;161,124&#34;,&#34;deaths&#34;:&#34;1,445&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;159,655&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;24&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,997&#34;,&#34;deaths_per_1m_population&#34;:&#34;45&#34;,&#34;total_tests&#34;:&#34;2,433,244&#34;,&#34;tests_per_1m_population&#34;:&#34;75,465&#34;},{&#34;country_name&#34;:&#34;Namibia&#34;,&#34;cases&#34;:&#34;158,332&#34;,&#34;deaths&#34;:&#34;4,023&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;153,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;647&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,341&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,533&#34;,&#34;total_tests&#34;:&#34;1,001,354&#34;,&#34;tests_per_1m_population&#34;:&#34;381,621&#34;},{&#34;country_name&#34;:&#34;Martinique&#34;,&#34;cases&#34;:&#34;147,519&#34;,&#34;deaths&#34;:&#34;918&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;104&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;146,497&#34;,&#34;total_cases_per_1m_population&#34;:&#34;393,657&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,450&#34;,&#34;total_tests&#34;:&#34;828,928&#34;,&#34;tests_per_1m_population&#34;:&#34;2,212,008&#34;},{&#34;country_name&#34;:&#34;Trinidad and Tobago&#34;,&#34;cases&#34;:&#34;144,359&#34;,&#34;deaths&#34;:&#34;3,812&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;133,604&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;18&#34;,&#34;active_cases&#34;:&#34;6,943&#34;,&#34;total_cases_per_1m_population&#34;:&#34;102,552&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,708&#34;,&#34;total_tests&#34;:&#34;696,148&#34;,&#34;tests_per_1m_population&#34;:&#34;494,540&#34;},{&#34;country_name&#34;:&#34;Brunei&#34;,&#34;cases&#34;:&#34;141,014&#34;,&#34;deaths&#34;:&#34;218&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;139,724&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,072&#34;,&#34;total_cases_per_1m_population&#34;:&#34;316,857&#34;,&#34;deaths_per_1m_population&#34;:&#34;490&#34;,&#34;total_tests&#34;:&#34;717,784&#34;,&#34;tests_per_1m_population&#34;:&#34;1,612,853&#34;},{&#34;country_name&#34;:&#34;Guadeloupe&#34;,&#34;cases&#34;:&#34;140,130&#34;,&#34;deaths&#34;:&#34;854&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,250&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;19&#34;,&#34;active_cases&#34;:&#34;137,026&#34;,&#34;total_cases_per_1m_population&#34;:&#34;350,108&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,134&#34;,&#34;total_tests&#34;:&#34;938,039&#34;,&#34;tests_per_1m_population&#34;:&#34;2,343,644&#34;},{&#34;country_name&#34;:&#34;Cambodia&#34;,&#34;cases&#34;:&#34;136,200&#34;,&#34;deaths&#34;:&#34;3,056&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;132,896&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;248&#34;,&#34;total_cases_per_1m_population&#34;:&#34;7,948&#34;,&#34;deaths_per_1m_population&#34;:&#34;178&#34;,&#34;total_tests&#34;:&#34;2,946,965&#34;,&#34;tests_per_1m_population&#34;:&#34;171,969&#34;},{&#34;country_name&#34;:&#34;Rwanda&#34;,&#34;cases&#34;:&#34;129,764&#34;,&#34;deaths&#34;:&#34;1,458&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;45,522&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;82,784&#34;,&#34;total_cases_per_1m_population&#34;:&#34;9,590&#34;,&#34;deaths_per_1m_population&#34;:&#34;108&#34;,&#34;total_tests&#34;:&#34;5,225,494&#34;,&#34;tests_per_1m_population&#34;:&#34;386,173&#34;},{&#34;country_name&#34;:&#34;Jamaica&#34;,&#34;cases&#34;:&#34;129,489&#34;,&#34;deaths&#34;:&#34;2,943&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;82,965&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;43,581&#34;,&#34;total_cases_per_1m_population&#34;:&#34;43,387&#34;,&#34;deaths_per_1m_population&#34;:&#34;986&#34;,&#34;total_tests&#34;:&#34;981,688&#34;,&#34;tests_per_1m_population&#34;:&#34;328,929&#34;},{&#34;country_name&#34;:&#34;Cameroon&#34;,&#34;cases&#34;:&#34;119,780&#34;,&#34;deaths&#34;:&#34;1,927&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;117,791&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;13&#34;,&#34;active_cases&#34;:&#34;62&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,318&#34;,&#34;deaths_per_1m_population&#34;:&#34;69&#34;,&#34;total_tests&#34;:&#34;1,751,774&#34;,&#34;tests_per_1m_population&#34;:&#34;63,154&#34;},{&#34;country_name&#34;:&#34;Angola&#34;,&#34;cases&#34;:&#34;99,194&#34;,&#34;deaths&#34;:&#34;1,900&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;97,149&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;145&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,858&#34;,&#34;deaths_per_1m_population&#34;:&#34;55&#34;,&#34;total_tests&#34;:&#34;1,499,795&#34;,&#34;tests_per_1m_population&#34;:&#34;43,209&#34;},{&#34;country_name&#34;:&#34;Malta&#34;,&#34;cases&#34;:&#34;90,595&#34;,&#34;deaths&#34;:&#34;688&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;84,646&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;196&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;5,261&#34;,&#34;total_cases_per_1m_population&#34;:&#34;204,196&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,551&#34;,&#34;total_tests&#34;:&#34;1,872,465&#34;,&#34;tests_per_1m_population&#34;:&#34;4,220,438&#34;},{&#34;country_name&#34;:&#34;DRC&#34;,&#34;cases&#34;:&#34;87,023&#34;,&#34;deaths&#34;:&#34;1,337&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;50,930&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;34,756&#34;,&#34;total_cases_per_1m_population&#34;:&#34;921&#34;,&#34;deaths_per_1m_population&#34;:&#34;14&#34;,&#34;total_tests&#34;:&#34;846,704&#34;,&#34;tests_per_1m_population&#34;:&#34;8,962&#34;},{&#34;country_name&#34;:&#34;Senegal&#34;,&#34;cases&#34;:&#34;85,984&#34;,&#34;deaths&#34;:&#34;1,966&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;84,001&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;17&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,902&#34;,&#34;deaths_per_1m_population&#34;:&#34;112&#34;,&#34;total_tests&#34;:&#34;1,063,849&#34;,&#34;tests_per_1m_population&#34;:&#34;60,653&#34;},{&#34;country_name&#34;:&#34;Malawi&#34;,&#34;cases&#34;:&#34;85,747&#34;,&#34;deaths&#34;:&#34;2,633&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;81,938&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;67&#34;,&#34;active_cases&#34;:&#34;1,176&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,283&#34;,&#34;deaths_per_1m_population&#34;:&#34;132&#34;,&#34;total_tests&#34;:&#34;571,585&#34;,&#34;tests_per_1m_population&#34;:&#34;28,548&#34;},{&#34;country_name&#34;:&#34;Ivory Coast&#34;,&#34;cases&#34;:&#34;81,887&#34;,&#34;deaths&#34;:&#34;799&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;81,061&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;27&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,972&#34;,&#34;deaths_per_1m_population&#34;:&#34;29&#34;,&#34;total_tests&#34;:&#34;1,494,624&#34;,&#34;tests_per_1m_population&#34;:&#34;54,238&#34;},{&#34;country_name&#34;:&#34;French Guiana&#34;,&#34;cases&#34;:&#34;80,422&#34;,&#34;deaths&#34;:&#34;394&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,254&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;68,774&#34;,&#34;total_cases_per_1m_population&#34;:&#34;257,228&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,260&#34;,&#34;total_tests&#34;:&#34;622,646&#34;,&#34;tests_per_1m_population&#34;:&#34;1,991,518&#34;},{&#34;country_name&#34;:&#34;Suriname&#34;,&#34;cases&#34;:&#34;79,302&#34;,&#34;deaths&#34;:&#34;1,327&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;49,396&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;28,579&#34;,&#34;total_cases_per_1m_population&#34;:&#34;133,030&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,226&#34;,&#34;total_tests&#34;:&#34;235,824&#34;,&#34;tests_per_1m_population&#34;:&#34;395,598&#34;},{&#34;country_name&#34;:&#34;Channel Islands&#34;,&#34;cases&#34;:&#34;73,609&#34;,&#34;deaths&#34;:&#34;166&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;72,059&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,384&#34;,&#34;total_cases_per_1m_population&#34;:&#34;416,444&#34;,&#34;deaths_per_1m_population&#34;:&#34;939&#34;,&#34;total_tests&#34;:&#34;1,252,808&#34;,&#34;tests_per_1m_population&#34;:&#34;7,087,782&#34;},{&#34;country_name&#34;:&#34;French Polynesia&#34;,&#34;cases&#34;:&#34;72,648&#34;,&#34;deaths&#34;:&#34;648&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;255,948&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,283&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Eswatini&#34;,&#34;cases&#34;:&#34;70,284&#34;,&#34;deaths&#34;:&#34;1,397&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;68,764&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;123&#34;,&#34;total_cases_per_1m_population&#34;:&#34;59,470&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,182&#34;,&#34;total_tests&#34;:&#34;1,012,397&#34;,&#34;tests_per_1m_population&#34;:&#34;856,623&#34;},{&#34;country_name&#34;:&#34;Barbados&#34;,&#34;cases&#34;:&#34;67,256&#34;,&#34;deaths&#34;:&#34;389&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;63,424&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,443&#34;,&#34;total_cases_per_1m_population&#34;:&#34;233,520&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,351&#34;,&#34;total_tests&#34;:&#34;640,085&#34;,&#34;tests_per_1m_population&#34;:&#34;2,222,440&#34;},{&#34;country_name&#34;:&#34;Fiji&#34;,&#34;cases&#34;:&#34;64,524&#34;,&#34;deaths&#34;:&#34;862&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;62,677&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;985&#34;,&#34;total_cases_per_1m_population&#34;:&#34;71,048&#34;,&#34;deaths_per_1m_population&#34;:&#34;949&#34;,&#34;total_tests&#34;:&#34;506,642&#34;,&#34;tests_per_1m_population&#34;:&#34;557,871&#34;},{&#34;country_name&#34;:&#34;Madagascar&#34;,&#34;cases&#34;:&#34;64,121&#34;,&#34;deaths&#34;:&#34;1,391&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;59,370&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;14&#34;,&#34;active_cases&#34;:&#34;3,360&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,213&#34;,&#34;deaths_per_1m_population&#34;:&#34;48&#34;,&#34;total_tests&#34;:&#34;418,849&#34;,&#34;tests_per_1m_population&#34;:&#34;14,455&#34;},{&#34;country_name&#34;:&#34;Guyana&#34;,&#34;cases&#34;:&#34;63,413&#34;,&#34;deaths&#34;:&#34;1,228&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;62,092&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;93&#34;,&#34;total_cases_per_1m_population&#34;:&#34;79,925&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,548&#34;,&#34;total_tests&#34;:&#34;590,638&#34;,&#34;tests_per_1m_population&#34;:&#34;744,436&#34;},{&#34;country_name&#34;:&#34;Sudan&#34;,&#34;cases&#34;:&#34;62,093&#34;,&#34;deaths&#34;:&#34;4,930&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,359&#34;,&#34;deaths_per_1m_population&#34;:&#34;108&#34;,&#34;total_tests&#34;:&#34;562,941&#34;,&#34;tests_per_1m_population&#34;:&#34;12,319&#34;},{&#34;country_name&#34;:&#34;New Caledonia&#34;,&#34;cases&#34;:&#34;60,457&#34;,&#34;deaths&#34;:&#34;312&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;60,064&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;81&#34;,&#34;total_cases_per_1m_population&#34;:&#34;208,148&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,074&#34;,&#34;total_tests&#34;:&#34;98,964&#34;,&#34;tests_per_1m_population&#34;:&#34;340,724&#34;},{&#34;country_name&#34;:&#34;Mauritania&#34;,&#34;cases&#34;:&#34;58,683&#34;,&#34;deaths&#34;:&#34;982&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;57,693&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8&#34;,&#34;total_cases_per_1m_population&#34;:&#34;12,050&#34;,&#34;deaths_per_1m_population&#34;:&#34;202&#34;,&#34;total_tests&#34;:&#34;799,187&#34;,&#34;tests_per_1m_population&#34;:&#34;164,099&#34;},{&#34;country_name&#34;:&#34;Bhutan&#34;,&#34;cases&#34;:&#34;57,771&#34;,&#34;deaths&#34;:&#34;20&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;53,080&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;431&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;4,671&#34;,&#34;total_cases_per_1m_population&#34;:&#34;73,412&#34;,&#34;deaths_per_1m_population&#34;:&#34;25&#34;,&#34;total_tests&#34;:&#34;2,284,301&#34;,&#34;tests_per_1m_population&#34;:&#34;2,902,749&#34;},{&#34;country_name&#34;:&#34;Belize&#34;,&#34;cases&#34;:&#34;57,419&#34;,&#34;deaths&#34;:&#34;676&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;56,534&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;209&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139,823&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,646&#34;,&#34;total_tests&#34;:&#34;534,770&#34;,&#34;tests_per_1m_population&#34;:&#34;1,302,237&#34;},{&#34;country_name&#34;:&#34;Taiwan&#34;,&#34;cases&#34;:&#34;56,468&#34;,&#34;deaths&#34;:&#34;856&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;23,729&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;5,172&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;31,883&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,363&#34;,&#34;deaths_per_1m_population&#34;:&#34;36&#34;,&#34;total_tests&#34;:&#34;14,289,370&#34;,&#34;tests_per_1m_population&#34;:&#34;598,017&#34;},{&#34;country_name&#34;:&#34;Cabo Verde&#34;,&#34;cases&#34;:&#34;56,004&#34;,&#34;deaths&#34;:&#34;401&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;55,538&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;65&#34;,&#34;total_cases_per_1m_population&#34;:&#34;98,792&#34;,&#34;deaths_per_1m_population&#34;:&#34;707&#34;,&#34;total_tests&#34;:&#34;400,982&#34;,&#34;tests_per_1m_population&#34;:&#34;707,340&#34;},{&#34;country_name&#34;:&#34;Syria&#34;,&#34;cases&#34;:&#34;55,795&#34;,&#34;deaths&#34;:&#34;3,150&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;52,090&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;555&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,054&#34;,&#34;deaths_per_1m_population&#34;:&#34;172&#34;,&#34;total_tests&#34;:&#34;146,269&#34;,&#34;tests_per_1m_population&#34;:&#34;8,007&#34;},{&#34;country_name&#34;:&#34;Gabon&#34;,&#34;cases&#34;:&#34;47,597&#34;,&#34;deaths&#34;:&#34;303&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;47,282&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;12&#34;,&#34;total_cases_per_1m_population&#34;:&#34;20,512&#34;,&#34;deaths_per_1m_population&#34;:&#34;131&#34;,&#34;total_tests&#34;:&#34;1,592,483&#34;,&#34;tests_per_1m_population&#34;:&#34;686,270&#34;},{&#34;country_name&#34;:&#34;Papua New Guinea&#34;,&#34;cases&#34;:&#34;43,732&#34;,&#34;deaths&#34;:&#34;649&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;43,025&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;58&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,726&#34;,&#34;deaths_per_1m_population&#34;:&#34;70&#34;,&#34;total_tests&#34;:&#34;249,149&#34;,&#34;tests_per_1m_population&#34;:&#34;26,927&#34;},{&#34;country_name&#34;:&#34;Seychelles&#34;,&#34;cases&#34;:&#34;42,079&#34;,&#34;deaths&#34;:&#34;165&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;41,260&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;654&#34;,&#34;total_cases_per_1m_population&#34;:&#34;423,134&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,659&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Cura u00e7ao&#34;,&#34;cases&#34;:&#34;41,966&#34;,&#34;deaths&#34;:&#34;273&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;41,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;442&#34;,&#34;total_cases_per_1m_population&#34;:&#34;253,872&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,652&#34;,&#34;total_tests&#34;:&#34;496,693&#34;,&#34;tests_per_1m_population&#34;:&#34;3,004,725&#34;},{&#34;country_name&#34;:&#34;Andorra&#34;,&#34;cases&#34;:&#34;41,013&#34;,&#34;deaths&#34;:&#34;153&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;40,343&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;14&#34;,&#34;active_cases&#34;:&#34;517&#34;,&#34;total_cases_per_1m_population&#34;:&#34;529,282&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,974&#34;,&#34;total_tests&#34;:&#34;249,838&#34;,&#34;tests_per_1m_population&#34;:&#34;3,224,215&#34;},{&#34;country_name&#34;:&#34;Burundi&#34;,&#34;cases&#34;:&#34;38,887&#34;,&#34;deaths&#34;:&#34;38&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;773&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;38,076&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,104&#34;,&#34;deaths_per_1m_population&#34;:&#34;3&#34;,&#34;total_tests&#34;:&#34;345,742&#34;,&#34;tests_per_1m_population&#34;:&#34;27,594&#34;},{&#34;country_name&#34;:&#34;Mauritius&#34;,&#34;cases&#34;:&#34;37,656&#34;,&#34;deaths&#34;:&#34;990&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;35,656&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,010&#34;,&#34;total_cases_per_1m_population&#34;:&#34;29,521&#34;,&#34;deaths_per_1m_population&#34;:&#34;776&#34;,&#34;total_tests&#34;:&#34;358,675&#34;,&#34;tests_per_1m_population&#34;:&#34;281,186&#34;},{&#34;country_name&#34;:&#34;Mayotte&#34;,&#34;cases&#34;:&#34;37,038&#34;,&#34;deaths&#34;:&#34;187&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,964&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;33,887&#34;,&#34;total_cases_per_1m_population&#34;:&#34;130,099&#34;,&#34;deaths_per_1m_population&#34;:&#34;657&#34;,&#34;total_tests&#34;:&#34;176,919&#34;,&#34;tests_per_1m_population&#34;:&#34;621,442&#34;},{&#34;country_name&#34;:&#34;Togo&#34;,&#34;cases&#34;:&#34;36,977&#34;,&#34;deaths&#34;:&#34;273&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;36,679&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;25&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,285&#34;,&#34;deaths_per_1m_population&#34;:&#34;32&#34;,&#34;total_tests&#34;:&#34;727,740&#34;,&#34;tests_per_1m_population&#34;:&#34;84,338&#34;},{&#34;country_name&#34;:&#34;Guinea&#34;,&#34;cases&#34;:&#34;36,459&#34;,&#34;deaths&#34;:&#34;440&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;35,976&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;43&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,647&#34;,&#34;deaths_per_1m_population&#34;:&#34;32&#34;,&#34;total_tests&#34;:&#34;660,107&#34;,&#34;tests_per_1m_population&#34;:&#34;47,919&#34;},{&#34;country_name&#34;:&#34;Faeroe Islands&#34;,&#34;cases&#34;:&#34;34,658&#34;,&#34;deaths&#34;:&#34;28&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,693&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;26,937&#34;,&#34;total_cases_per_1m_population&#34;:&#34;704,460&#34;,&#34;deaths_per_1m_population&#34;:&#34;569&#34;,&#34;total_tests&#34;:&#34;778,000&#34;,&#34;tests_per_1m_population&#34;:&#34;15,813,651&#34;},{&#34;country_name&#34;:&#34;Aruba&#34;,&#34;cases&#34;:&#34;34,589&#34;,&#34;deaths&#34;:&#34;212&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;34,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;126&#34;,&#34;total_cases_per_1m_population&#34;:&#34;321,507&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,971&#34;,&#34;total_tests&#34;:&#34;177,885&#34;,&#34;tests_per_1m_population&#34;:&#34;1,653,452&#34;},{&#34;country_name&#34;:&#34;Tanzania&#34;,&#34;cases&#34;:&#34;33,864&#34;,&#34;deaths&#34;:&#34;803&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;539&#34;,&#34;deaths_per_1m_population&#34;:&#34;13&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Bahamas&#34;,&#34;cases&#34;:&#34;33,463&#34;,&#34;deaths&#34;:&#34;789&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;32,310&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;83,652&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,972&#34;,&#34;total_tests&#34;:&#34;229,817&#34;,&#34;tests_per_1m_population&#34;:&#34;574,504&#34;},{&#34;country_name&#34;:&#34;Lesotho&#34;,&#34;cases&#34;:&#34;32,910&#34;,&#34;deaths&#34;:&#34;697&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;24,155&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8,058&#34;,&#34;total_cases_per_1m_population&#34;:&#34;15,146&#34;,&#34;deaths_per_1m_population&#34;:&#34;321&#34;,&#34;total_tests&#34;:&#34;431,221&#34;,&#34;tests_per_1m_population&#34;:&#34;198,454&#34;},{&#34;country_name&#34;:&#34;Mali&#34;,&#34;cases&#34;:&#34;30,727&#34;,&#34;deaths&#34;:&#34;731&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,795&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;201&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,442&#34;,&#34;deaths_per_1m_population&#34;:&#34;34&#34;,&#34;total_tests&#34;:&#34;663,805&#34;,&#34;tests_per_1m_population&#34;:&#34;31,160&#34;},{&#34;country_name&#34;:&#34;Haiti&#34;,&#34;cases&#34;:&#34;30,640&#34;,&#34;deaths&#34;:&#34;835&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,389&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;416&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,629&#34;,&#34;deaths_per_1m_population&#34;:&#34;72&#34;,&#34;total_tests&#34;:&#34;132,422&#34;,&#34;tests_per_1m_population&#34;:&#34;11,363&#34;},{&#34;country_name&#34;:&#34;Isle of Man&#34;,&#34;cases&#34;:&#34;28,416&#34;,&#34;deaths&#34;:&#34;87&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;26,794&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,535&#34;,&#34;total_cases_per_1m_population&#34;:&#34;331,015&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,013&#34;,&#34;total_tests&#34;:&#34;150,753&#34;,&#34;tests_per_1m_population&#34;:&#34;1,756,107&#34;},{&#34;country_name&#34;:&#34;Benin&#34;,&#34;cases&#34;:&#34;26,952&#34;,&#34;deaths&#34;:&#34;163&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;25,506&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;1,283&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,123&#34;,&#34;deaths_per_1m_population&#34;:&#34;13&#34;,&#34;total_tests&#34;:&#34;604,310&#34;,&#34;tests_per_1m_population&#34;:&#34;47,598&#34;},{&#34;country_name&#34;:&#34;Somalia&#34;,&#34;cases&#34;:&#34;26,485&#34;,&#34;deaths&#34;:&#34;1,350&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,182&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;11,953&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,587&#34;,&#34;deaths_per_1m_population&#34;:&#34;81&#34;,&#34;total_tests&#34;:&#34;400,466&#34;,&#34;tests_per_1m_population&#34;:&#34;23,990&#34;},{&#34;country_name&#34;:&#34;Congo&#34;,&#34;cases&#34;:&#34;24,079&#34;,&#34;deaths&#34;:&#34;385&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,178&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,516&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,178&#34;,&#34;deaths_per_1m_population&#34;:&#34;67&#34;,&#34;total_tests&#34;:&#34;347,815&#34;,&#34;tests_per_1m_population&#34;:&#34;60,352&#34;},{&#34;country_name&#34;:&#34;Saint Lucia&#34;,&#34;cases&#34;:&#34;23,239&#34;,&#34;deaths&#34;:&#34;368&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;22,736&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;135&#34;,&#34;total_cases_per_1m_population&#34;:&#34;125,520&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,988&#34;,&#34;total_tests&#34;:&#34;142,630&#34;,&#34;tests_per_1m_population&#34;:&#34;770,382&#34;},{&#34;country_name&#34;:&#34;Timor-Leste&#34;,&#34;cases&#34;:&#34;22,860&#34;,&#34;deaths&#34;:&#34;130&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;22,714&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;16&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,762&#34;,&#34;deaths_per_1m_population&#34;:&#34;95&#34;,&#34;total_tests&#34;:&#34;261,007&#34;,&#34;tests_per_1m_population&#34;:&#34;191,388&#34;},{&#34;country_name&#34;:&#34;Cayman Islands&#34;,&#34;cases&#34;:&#34;21,755&#34;,&#34;deaths&#34;:&#34;26&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,553&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;13,176&#34;,&#34;total_cases_per_1m_population&#34;:&#34;324,145&#34;,&#34;deaths_per_1m_population&#34;:&#34;387&#34;,&#34;total_tests&#34;:&#34;222,773&#34;,&#34;tests_per_1m_population&#34;:&#34;3,319,273&#34;},{&#34;country_name&#34;:&#34;Burkina Faso&#34;,&#34;cases&#34;:&#34;20,853&#34;,&#34;deaths&#34;:&#34;382&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,439&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;32&#34;,&#34;total_cases_per_1m_population&#34;:&#34;951&#34;,&#34;deaths_per_1m_population&#34;:&#34;17&#34;,&#34;total_tests&#34;:&#34;248,995&#34;,&#34;tests_per_1m_population&#34;:&#34;11,350&#34;},{&#34;country_name&#34;:&#34;Nicaragua&#34;,&#34;cases&#34;:&#34;18,491&#34;,&#34;deaths&#34;:&#34;225&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,225&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;14,041&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,733&#34;,&#34;deaths_per_1m_population&#34;:&#34;33&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Gibraltar&#34;,&#34;cases&#34;:&#34;17,706&#34;,&#34;deaths&#34;:&#34;102&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;16,579&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,025&#34;,&#34;total_cases_per_1m_population&#34;:&#34;525,822&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,029&#34;,&#34;total_tests&#34;:&#34;534,283&#34;,&#34;tests_per_1m_population&#34;:&#34;15,866,807&#34;},{&#34;country_name&#34;:&#34;South Sudan&#34;,&#34;cases&#34;:&#34;17,422&#34;,&#34;deaths&#34;:&#34;138&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,514&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;3,770&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,524&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;376,391&#34;,&#34;tests_per_1m_population&#34;:&#34;32,928&#34;},{&#34;country_name&#34;:&#34;Tajikistan&#34;,&#34;cases&#34;:&#34;17,388&#34;,&#34;deaths&#34;:&#34;124&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;17,264&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,752&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Liechtenstein&#34;,&#34;cases&#34;:&#34;17,103&#34;,&#34;deaths&#34;:&#34;85&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;16,831&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;12&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;187&#34;,&#34;total_cases_per_1m_population&#34;:&#34;446,251&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,218&#34;,&#34;total_tests&#34;:&#34;102,174&#34;,&#34;tests_per_1m_population&#34;:&#34;2,665,919&#34;},{&#34;country_name&#34;:&#34;San Marino&#34;,&#34;cases&#34;:&#34;16,140&#34;,&#34;deaths&#34;:&#34;114&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;473,870&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,347&#34;,&#34;total_tests&#34;:&#34;149,271&#34;,&#34;tests_per_1m_population&#34;:&#34;4,382,590&#34;},{&#34;country_name&#34;:&#34;Equatorial Guinea&#34;,&#34;cases&#34;:&#34;15,907&#34;,&#34;deaths&#34;:&#34;183&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,698&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;26&#34;,&#34;total_cases_per_1m_population&#34;:&#34;10,704&#34;,&#34;deaths_per_1m_population&#34;:&#34;123&#34;,&#34;total_tests&#34;:&#34;310,972&#34;,&#34;tests_per_1m_population&#34;:&#34;209,251&#34;},{&#34;country_name&#34;:&#34;Djibouti&#34;,&#34;cases&#34;:&#34;15,611&#34;,&#34;deaths&#34;:&#34;189&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,411&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;11&#34;,&#34;total_cases_per_1m_population&#34;:&#34;15,396&#34;,&#34;deaths_per_1m_population&#34;:&#34;186&#34;,&#34;total_tests&#34;:&#34;303,924&#34;,&#34;tests_per_1m_population&#34;:&#34;299,748&#34;},{&#34;country_name&#34;:&#34;CAR&#34;,&#34;cases&#34;:&#34;14,649&#34;,&#34;deaths&#34;:&#34;113&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,859&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;7,677&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,941&#34;,&#34;deaths_per_1m_population&#34;:&#34;23&#34;,&#34;total_tests&#34;:&#34;81,294&#34;,&#34;tests_per_1m_population&#34;:&#34;16,320&#34;},{&#34;country_name&#34;:&#34;Grenada&#34;,&#34;cases&#34;:&#34;14,428&#34;,&#34;deaths&#34;:&#34;220&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,945&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;263&#34;,&#34;total_cases_per_1m_population&#34;:&#34;127,159&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,939&#34;,&#34;total_tests&#34;:&#34;148,567&#34;,&#34;tests_per_1m_population&#34;:&#34;1,309,376&#34;},{&#34;country_name&#34;:&#34;Bermuda&#34;,&#34;cases&#34;:&#34;13,143&#34;,&#34;deaths&#34;:&#34;131&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;12,719&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;293&#34;,&#34;total_cases_per_1m_population&#34;:&#34;212,453&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,118&#34;,&#34;total_tests&#34;:&#34;866,313&#34;,&#34;tests_per_1m_population&#34;:&#34;14,003,734&#34;},{&#34;country_name&#34;:&#34;Solomon Islands&#34;,&#34;cases&#34;:&#34;12,437&#34;,&#34;deaths&#34;:&#34;139&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,194&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,104&#34;,&#34;total_cases_per_1m_population&#34;:&#34;17,339&#34;,&#34;deaths_per_1m_population&#34;:&#34;194&#34;,&#34;total_tests&#34;:&#34;5,117&#34;,&#34;tests_per_1m_population&#34;:&#34;7,134&#34;},{&#34;country_name&#34;:&#34;Dominica&#34;,&#34;cases&#34;:&#34;12,011&#34;,&#34;deaths&#34;:&#34;63&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,926&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;22&#34;,&#34;total_cases_per_1m_population&#34;:&#34;166,107&#34;,&#34;deaths_per_1m_population&#34;:&#34;871&#34;,&#34;total_tests&#34;:&#34;187,690&#34;,&#34;tests_per_1m_population&#34;:&#34;2,595,666&#34;},{&#34;country_name&#34;:&#34;Gambia&#34;,&#34;cases&#34;:&#34;11,995&#34;,&#34;deaths&#34;:&#34;365&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,591&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;39&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,724&#34;,&#34;deaths_per_1m_population&#34;:&#34;144&#34;,&#34;total_tests&#34;:&#34;155,686&#34;,&#34;tests_per_1m_population&#34;:&#34;61,314&#34;},{&#34;country_name&#34;:&#34;Greenland&#34;,&#34;cases&#34;:&#34;11,971&#34;,&#34;deaths&#34;:&#34;21&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,761&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;9,189&#34;,&#34;total_cases_per_1m_population&#34;:&#34;210,209&#34;,&#34;deaths_per_1m_population&#34;:&#34;369&#34;,&#34;total_tests&#34;:&#34;164,926&#34;,&#34;tests_per_1m_population&#34;:&#34;2,896,081&#34;},{&#34;country_name&#34;:&#34;Yemen&#34;,&#34;cases&#34;:&#34;11,818&#34;,&#34;deaths&#34;:&#34;2,148&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,001&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;669&#34;,&#34;total_cases_per_1m_population&#34;:&#34;381&#34;,&#34;deaths_per_1m_population&#34;:&#34;69&#34;,&#34;total_tests&#34;:&#34;265,253&#34;,&#34;tests_per_1m_population&#34;:&#34;8,553&#34;},{&#34;country_name&#34;:&#34;Monaco&#34;,&#34;cases&#34;:&#34;11,604&#34;,&#34;deaths&#34;:&#34;54&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,362&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;188&#34;,&#34;total_cases_per_1m_population&#34;:&#34;291,969&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,359&#34;,&#34;total_tests&#34;:&#34;54,960&#34;,&#34;tests_per_1m_population&#34;:&#34;1,382,850&#34;},{&#34;country_name&#34;:&#34;Saint Martin&#34;,&#34;cases&#34;:&#34;10,279&#34;,&#34;deaths&#34;:&#34;63&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,399&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;8,817&#34;,&#34;total_cases_per_1m_population&#34;:&#34;257,903&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,581&#34;,&#34;total_tests&#34;:&#34;112,382&#34;,&#34;tests_per_1m_population&#34;:&#34;2,819,701&#34;},{&#34;country_name&#34;:&#34;Sint Maarten&#34;,&#34;cases&#34;:&#34;9,990&#34;,&#34;deaths&#34;:&#34;86&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,841&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;10&#34;,&#34;active_cases&#34;:&#34;63&#34;,&#34;total_cases_per_1m_population&#34;:&#34;228,317&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,965&#34;,&#34;total_tests&#34;:&#34;62,056&#34;,&#34;tests_per_1m_population&#34;:&#34;1,418,261&#34;},{&#34;country_name&#34;:&#34;Eritrea&#34;,&#34;cases&#34;:&#34;9,733&#34;,&#34;deaths&#34;:&#34;103&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,629&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,678&#34;,&#34;deaths_per_1m_population&#34;:&#34;28&#34;,&#34;total_tests&#34;:&#34;23,693&#34;,&#34;tests_per_1m_population&#34;:&#34;6,518&#34;},{&#34;country_name&#34;:&#34;Caribbean Netherlands&#34;,&#34;cases&#34;:&#34;9,592&#34;,&#34;deaths&#34;:&#34;34&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,392&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;166&#34;,&#34;total_cases_per_1m_population&#34;:&#34;359,749&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,275&#34;,&#34;total_tests&#34;:&#34;30,126&#34;,&#34;tests_per_1m_population&#34;:&#34;1,129,880&#34;},{&#34;country_name&#34;:&#34;Tonga&#34;,&#34;cases&#34;:&#34;9,553&#34;,&#34;deaths&#34;:&#34;11&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,306&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,236&#34;,&#34;total_cases_per_1m_population&#34;:&#34;88,571&#34;,&#34;deaths_per_1m_population&#34;:&#34;102&#34;,&#34;total_tests&#34;:&#34;408,213&#34;,&#34;tests_per_1m_population&#34;:&#34;3,784,761&#34;},{&#34;country_name&#34;:&#34;Niger&#34;,&#34;cases&#34;:&#34;8,914&#34;,&#34;deaths&#34;:&#34;309&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,507&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;98&#34;,&#34;total_cases_per_1m_population&#34;:&#34;346&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;249,026&#34;,&#34;tests_per_1m_population&#34;:&#34;9,657&#34;},{&#34;country_name&#34;:&#34;Guinea-Bissau&#34;,&#34;cases&#34;:&#34;8,185&#34;,&#34;deaths&#34;:&#34;171&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,515&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;499&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,989&#34;,&#34;deaths_per_1m_population&#34;:&#34;83&#34;,&#34;total_tests&#34;:&#34;132,611&#34;,&#34;tests_per_1m_population&#34;:&#34;64,628&#34;},{&#34;country_name&#34;:&#34;Comoros&#34;,&#34;cases&#34;:&#34;8,100&#34;,&#34;deaths&#34;:&#34;160&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,933&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;7&#34;,&#34;total_cases_per_1m_population&#34;:&#34;8,970&#34;,&#34;deaths_per_1m_population&#34;:&#34;177&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Sierra Leone&#34;,&#34;cases&#34;:&#34;7,681&#34;,&#34;deaths&#34;:&#34;125&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;929&#34;,&#34;deaths_per_1m_population&#34;:&#34;15&#34;,&#34;total_tests&#34;:&#34;259,958&#34;,&#34;tests_per_1m_population&#34;:&#34;31,435&#34;},{&#34;country_name&#34;:&#34;Antigua and Barbuda&#34;,&#34;cases&#34;:&#34;7,571&#34;,&#34;deaths&#34;:&#34;135&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,402&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;34&#34;,&#34;total_cases_per_1m_population&#34;:&#34;76,172&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,358&#34;,&#34;total_tests&#34;:&#34;18,901&#34;,&#34;tests_per_1m_population&#34;:&#34;190,164&#34;},{&#34;country_name&#34;:&#34;Liberia&#34;,&#34;cases&#34;:&#34;7,432&#34;,&#34;deaths&#34;:&#34;294&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,747&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,391&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,410&#34;,&#34;deaths_per_1m_population&#34;:&#34;56&#34;,&#34;total_tests&#34;:&#34;139,824&#34;,&#34;tests_per_1m_population&#34;:&#34;26,521&#34;},{&#34;country_name&#34;:&#34;Chad&#34;,&#34;cases&#34;:&#34;7,396&#34;,&#34;deaths&#34;:&#34;193&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,874&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;2,329&#34;,&#34;total_cases_per_1m_population&#34;:&#34;428&#34;,&#34;deaths_per_1m_population&#34;:&#34;11&#34;,&#34;total_tests&#34;:&#34;191,341&#34;,&#34;tests_per_1m_population&#34;:&#34;11,075&#34;},{&#34;country_name&#34;:&#34;Samoa&#34;,&#34;cases&#34;:&#34;7,185&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,605&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;5,567&#34;,&#34;total_cases_per_1m_population&#34;:&#34;35,783&#34;,&#34;deaths_per_1m_population&#34;:&#34;65&#34;,&#34;total_tests&#34;:&#34;53,893&#34;,&#34;tests_per_1m_population&#34;:&#34;268,399&#34;},{&#34;country_name&#34;:&#34;Vanuatu&#34;,&#34;cases&#34;:&#34;6,793&#34;,&#34;deaths&#34;:&#34;12&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,991&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;790&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,222&#34;,&#34;deaths_per_1m_population&#34;:&#34;37&#34;,&#34;total_tests&#34;:&#34;24,976&#34;,&#34;tests_per_1m_population&#34;:&#34;78,027&#34;},{&#34;country_name&#34;:&#34;St. Vincent Grenadines&#34;,&#34;cases&#34;:&#34;6,779&#34;,&#34;deaths&#34;:&#34;106&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,641&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;32&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,757&#34;,&#34;deaths_per_1m_population&#34;:&#34;950&#34;,&#34;total_tests&#34;:&#34;98,860&#34;,&#34;tests_per_1m_population&#34;:&#34;886,033&#34;},{&#34;country_name&#34;:&#34;British Virgin Islands&#34;,&#34;cases&#34;:&#34;6,296&#34;,&#34;deaths&#34;:&#34;62&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;205,792&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,027&#34;,&#34;total_tests&#34;:&#34;102,862&#34;,&#34;tests_per_1m_population&#34;:&#34;3,362,163&#34;},{&#34;country_name&#34;:&#34;Sao Tome and Principe&#34;,&#34;cases&#34;:&#34;5,953&#34;,&#34;deaths&#34;:&#34;73&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,875&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;5&#34;,&#34;total_cases_per_1m_population&#34;:&#34;26,282&#34;,&#34;deaths_per_1m_population&#34;:&#34;322&#34;,&#34;total_tests&#34;:&#34;29,036&#34;,&#34;tests_per_1m_population&#34;:&#34;128,193&#34;},{&#34;country_name&#34;:&#34;Turks and Caicos&#34;,&#34;cases&#34;:&#34;5,941&#34;,&#34;deaths&#34;:&#34;36&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,862&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;43&#34;,&#34;total_cases_per_1m_population&#34;:&#34;149,791&#34;,&#34;deaths_per_1m_population&#34;:&#34;908&#34;,&#34;total_tests&#34;:&#34;478,593&#34;,&#34;tests_per_1m_population&#34;:&#34;12,066,789&#34;},{&#34;country_name&#34;:&#34;Saint Kitts and Nevis&#34;,&#34;cases&#34;:&#34;5,561&#34;,&#34;deaths&#34;:&#34;43&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,517&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;103,215&#34;,&#34;deaths_per_1m_population&#34;:&#34;798&#34;,&#34;total_tests&#34;:&#34;65,141&#34;,&#34;tests_per_1m_population&#34;:&#34;1,209,046&#34;},{&#34;country_name&#34;:&#34;Cook Islands&#34;,&#34;cases&#34;:&#34;4,727&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,990&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;737&#34;,&#34;total_cases_per_1m_population&#34;:&#34;268,686&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;15,740&#34;,&#34;tests_per_1m_population&#34;:&#34;894,674&#34;},{&#34;country_name&#34;:&#34;St. Barth&#34;,&#34;cases&#34;:&#34;4,432&#34;,&#34;deaths&#34;:&#34;6&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;446,279&#34;,&#34;deaths_per_1m_population&#34;:&#34;604&#34;,&#34;total_tests&#34;:&#34;78,646&#34;,&#34;tests_per_1m_population&#34;:&#34;7,919,243&#34;},{&#34;country_name&#34;:&#34;Palau&#34;,&#34;cases&#34;:&#34;4,396&#34;,&#34;deaths&#34;:&#34;6&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,879&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;511&#34;,&#34;total_cases_per_1m_population&#34;:&#34;240,877&#34;,&#34;deaths_per_1m_population&#34;:&#34;329&#34;,&#34;total_tests&#34;:&#34;45,500&#34;,&#34;tests_per_1m_population&#34;:&#34;2,493,151&#34;},{&#34;country_name&#34;:&#34;Kiribati&#34;,&#34;cases&#34;:&#34;3,076&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,597&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;466&#34;,&#34;total_cases_per_1m_population&#34;:&#34;25,058&#34;,&#34;deaths_per_1m_population&#34;:&#34;106&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Anguilla&#34;,&#34;cases&#34;:&#34;2,731&#34;,&#34;deaths&#34;:&#34;9&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,716&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;6&#34;,&#34;total_cases_per_1m_population&#34;:&#34;179,141&#34;,&#34;deaths_per_1m_population&#34;:&#34;590&#34;,&#34;total_tests&#34;:&#34;51,382&#34;,&#34;tests_per_1m_population&#34;:&#34;3,370,417&#34;},{&#34;country_name&#34;:&#34;Saint Pierre Miquelon&#34;,&#34;cases&#34;:&#34;2,641&#34;,&#34;deaths&#34;:&#34;1&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,449&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;191&#34;,&#34;total_cases_per_1m_population&#34;:&#34;459,864&#34;,&#34;deaths_per_1m_population&#34;:&#34;174&#34;,&#34;total_tests&#34;:&#34;22,941&#34;,&#34;tests_per_1m_population&#34;:&#34;3,994,602&#34;},{&#34;country_name&#34;:&#34;Diamond Princess&#34;,&#34;cases&#34;:&#34;712&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;699&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;0&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Wallis and Futuna&#34;,&#34;cases&#34;:&#34;454&#34;,&#34;deaths&#34;:&#34;7&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;438&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;9&#34;,&#34;total_cases_per_1m_population&#34;:&#34;41,713&#34;,&#34;deaths_per_1m_population&#34;:&#34;643&#34;,&#34;total_tests&#34;:&#34;20,508&#34;,&#34;tests_per_1m_population&#34;:&#34;1,884,234&#34;},{&#34;country_name&#34;:&#34;Montserrat&#34;,&#34;cases&#34;:&#34;183&#34;,&#34;deaths&#34;:&#34;2&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;174&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;7&#34;,&#34;total_cases_per_1m_population&#34;:&#34;36,622&#34;,&#34;deaths_per_1m_population&#34;:&#34;400&#34;,&#34;total_tests&#34;:&#34;9,700&#34;,&#34;tests_per_1m_population&#34;:&#34;1,941,165&#34;},{&#34;country_name&#34;:&#34;Falkland Islands&#34;,&#34;cases&#34;:&#34;128&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;34,944&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;8,632&#34;,&#34;tests_per_1m_population&#34;:&#34;2,356,538&#34;},{&#34;country_name&#34;:&#34;Macao&#34;,&#34;cases&#34;:&#34;82&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;82&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;123&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;5,375&#34;,&#34;tests_per_1m_population&#34;:&#34;8,079&#34;},{&#34;country_name&#34;:&#34;Vatican City&#34;,&#34;cases&#34;:&#34;29&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;36,025&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Marshall Islands&#34;,&#34;cases&#34;:&#34;15&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8&#34;,&#34;total_cases_per_1m_population&#34;:&#34;250&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Western Sahara&#34;,&#34;cases&#34;:&#34;10&#34;,&#34;deaths&#34;:&#34;1&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16&#34;,&#34;deaths_per_1m_population&#34;:&#34;2&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;MS Zaandam&#34;,&#34;cases&#34;:&#34;9&#34;,&#34;deaths&#34;:&#34;2&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;0&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Niue&#34;,&#34;cases&#34;:&#34;8&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,860&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Nauru&#34;,&#34;cases&#34;:&#34;3&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;274&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Saint Helena&#34;,&#34;cases&#34;:&#34;2&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;327&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Micronesia&#34;,&#34;cases&#34;:&#34;1&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;9&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;}],&#34;statistic_taken_at&#34;:&#34;2022-04-24 11:18:01&#34;,&#34;world_total&#34;:{&#34;total_cases&#34;:&#34;509,268,964&#34;,&#34;new_cases&#34;:&#34;204,268&#34;,&#34;total_deaths&#34;:&#34;6,242,509&#34;,&#34;new_deaths&#34;:&#34;630&#34;,&#34;total_recovered&#34;:&#34;461,827,849&#34;,&#34;active_cases&#34;:&#34;41,198,606&#34;,&#34;serious_critical&#34;:&#34;42,510&#34;,&#34;total_cases_per_1m_population&#34;:&#34;65,334&#34;,&#34;deaths_per_1m_population&#34;:&#34;800.9&#34;,&#34;statistic_taken_at&#34;:&#34;2022-04-24 11:18:01&#34;}} . import requests url = &quot;https://weatherbit-v1-mashape.p.rapidapi.com/forecast/3hourly&quot; querystring = {&quot;lat&quot;:&quot;35.5&quot;,&quot;lon&quot;:&quot;-78.5&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;56cf0d9c39msh90ab47fd56c02e6p1d2792jsn0f4dfaa46b90&quot;, &quot;X-RapidAPI-Host&quot;: &quot;weatherbit-v1-mashape.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . {&#34;data&#34;:[{&#34;rh&#34;:87,&#34;dewpt&#34;:13.2,&#34;uv&#34;:0,&#34;pres&#34;:1016,&#34;wind_dir&#34;:340,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c01n&#34;,&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:15.4,&#34;app_temp&#34;:15.4,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-04T00:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-03T20:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:262.8,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:4.38,&#34;pop&#34;:0,&#34;clouds&#34;:0,&#34;vis&#34;:15.096,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:1.97,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-04:00&#34;,&#34;ts&#34;:1667520000,&#34;wind_cdir&#34;:&#34;NNW&#34;},{&#34;rh&#34;:92,&#34;dewpt&#34;:13.7,&#34;uv&#34;:0,&#34;pres&#34;:1016.5,&#34;wind_dir&#34;:16,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:14.9,&#34;app_temp&#34;:14.9,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-04T03:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-03T23:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:261,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:6.55,&#34;pop&#34;:0,&#34;clouds&#34;:3,&#34;vis&#34;:13.296,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.37,&#34;clouds_low&#34;:3,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-04:03&#34;,&#34;ts&#34;:1667530800,&#34;wind_cdir&#34;:&#34;NNE&#34;},{&#34;rh&#34;:93,&#34;dewpt&#34;:12.7,&#34;uv&#34;:0,&#34;pres&#34;:1015.5,&#34;wind_dir&#34;:347,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:13.8,&#34;app_temp&#34;:13.8,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-04T06:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-04T02:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:253.9,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:4.56,&#34;pop&#34;:0,&#34;clouds&#34;:8,&#34;vis&#34;:12.2,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:1.71,&#34;clouds_low&#34;:8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-04:06&#34;,&#34;ts&#34;:1667541600,&#34;wind_cdir&#34;:&#34;NNW&#34;},{&#34;rh&#34;:93,&#34;dewpt&#34;:11.7,&#34;uv&#34;:0,&#34;pres&#34;:1016,&#34;wind_dir&#34;:25,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:12.8,&#34;app_temp&#34;:12.8,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-04T09:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-04T05:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:246.4,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:5.74,&#34;pop&#34;:0,&#34;clouds&#34;:3,&#34;vis&#34;:12.4,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.34,&#34;clouds_low&#34;:3,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-04:09&#34;,&#34;ts&#34;:1667552400,&#34;wind_cdir&#34;:&#34;NNE&#34;},{&#34;rh&#34;:92,&#34;dewpt&#34;:10.7,&#34;uv&#34;:1.6,&#34;pres&#34;:1017,&#34;wind_dir&#34;:7,&#34;ghi&#34;:28.61,&#34;dhi&#34;:26.51,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:11.9,&#34;app_temp&#34;:11.9,&#34;dni&#34;:204.23,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-04T12:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-04T08:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:242.9,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:5.32,&#34;pop&#34;:0,&#34;clouds&#34;:3,&#34;vis&#34;:12.2,&#34;solar_rad&#34;:27.701199,&#34;wind_spd&#34;:2.16,&#34;clouds_low&#34;:3,&#34;wind_cdir_full&#34;:&#34;north&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-04:12&#34;,&#34;ts&#34;:1667563200,&#34;wind_cdir&#34;:&#34;N&#34;},{&#34;rh&#34;:87,&#34;dewpt&#34;:16.4,&#34;uv&#34;:3.2,&#34;pres&#34;:1017.5,&#34;wind_dir&#34;:37,&#34;ghi&#34;:518.64,&#34;dhi&#34;:98.11,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:18.7,&#34;app_temp&#34;:18.9,&#34;dni&#34;:810.55,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-04T15:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-04T11:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:241.3,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:4.32,&#34;pop&#34;:0,&#34;clouds&#34;:9,&#34;vis&#34;:15.096,&#34;solar_rad&#34;:495.1901,&#34;wind_spd&#34;:2.37,&#34;clouds_low&#34;:9,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-11-04:15&#34;,&#34;ts&#34;:1667574000,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:71,&#34;dewpt&#34;:18.3,&#34;uv&#34;:3.4,&#34;pres&#34;:1015.5,&#34;wind_dir&#34;:85,&#34;ghi&#34;:602.75,&#34;dhi&#34;:104.29,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:23.8,&#34;app_temp&#34;:24.1,&#34;dni&#34;:845.77,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-04T18:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-04T14:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:238.3,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:5.15,&#34;pop&#34;:0,&#34;clouds&#34;:27,&#34;vis&#34;:22.288,&#34;solar_rad&#34;:566.4033,&#34;wind_spd&#34;:2.8,&#34;clouds_low&#34;:27,&#34;wind_cdir_full&#34;:&#34;east&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-04:18&#34;,&#34;ts&#34;:1667584800,&#34;wind_cdir&#34;:&#34;E&#34;},{&#34;rh&#34;:67,&#34;dewpt&#34;:17.6,&#34;uv&#34;:1.2,&#34;pres&#34;:1015,&#34;wind_dir&#34;:82,&#34;ghi&#34;:181.49,&#34;dhi&#34;:62.66,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c03d&#34;,&#34;code&#34;:803,&#34;description&#34;:&#34;Broken clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:24.1,&#34;app_temp&#34;:24.3,&#34;dni&#34;:561.43,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-04T21:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-04T17:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:237.3,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:5.31,&#34;pop&#34;:0,&#34;clouds&#34;:53,&#34;vis&#34;:24.8,&#34;solar_rad&#34;:153.97943,&#34;wind_spd&#34;:3.94,&#34;clouds_low&#34;:53,&#34;wind_cdir_full&#34;:&#34;east&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-11-04:21&#34;,&#34;ts&#34;:1667595600,&#34;wind_cdir&#34;:&#34;E&#34;},{&#34;rh&#34;:80,&#34;dewpt&#34;:16.3,&#34;uv&#34;:0,&#34;pres&#34;:1016,&#34;wind_dir&#34;:90,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:19.8,&#34;app_temp&#34;:20,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-05T00:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-04T20:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:237,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:5.64,&#34;pop&#34;:0,&#34;clouds&#34;:30,&#34;vis&#34;:17.6,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.73,&#34;clouds_low&#34;:30,&#34;wind_cdir_full&#34;:&#34;east&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-05:00&#34;,&#34;ts&#34;:1667606400,&#34;wind_cdir&#34;:&#34;E&#34;},{&#34;rh&#34;:92,&#34;dewpt&#34;:16.2,&#34;uv&#34;:0,&#34;pres&#34;:1015.5,&#34;wind_dir&#34;:110,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:17.5,&#34;app_temp&#34;:17.5,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-05T03:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-04T23:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:235.6,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:6.28,&#34;pop&#34;:0,&#34;clouds&#34;:5,&#34;vis&#34;:12.6,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.41,&#34;clouds_low&#34;:5,&#34;wind_cdir_full&#34;:&#34;east-southeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-05:03&#34;,&#34;ts&#34;:1667617200,&#34;wind_cdir&#34;:&#34;ESE&#34;},{&#34;rh&#34;:93,&#34;dewpt&#34;:15.1,&#34;uv&#34;:0,&#34;pres&#34;:1015,&#34;wind_dir&#34;:109,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:0,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:16.2,&#34;app_temp&#34;:16.2,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-05T06:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-05T02:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:235.8,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:6.09,&#34;pop&#34;:0,&#34;clouds&#34;:8,&#34;vis&#34;:12.2,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:1.9,&#34;clouds_low&#34;:8,&#34;wind_cdir_full&#34;:&#34;east-southeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-11-05:06&#34;,&#34;ts&#34;:1667628000,&#34;wind_cdir&#34;:&#34;ESE&#34;},{&#34;rh&#34;:92,&#34;dewpt&#34;:14.1,&#34;uv&#34;:0,&#34;pres&#34;:1015,&#34;wind_dir&#34;:90,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:4,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:15.3,&#34;app_temp&#34;:15.3,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-05T09:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-05T05:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:234.6,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:5.91,&#34;pop&#34;:0,&#34;clouds&#34;:7,&#34;vis&#34;:12.2,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.27,&#34;clouds_low&#34;:7,&#34;wind_cdir_full&#34;:&#34;east&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-11-05:09&#34;,&#34;ts&#34;:1667638800,&#34;wind_cdir&#34;:&#34;E&#34;},{&#34;rh&#34;:90,&#34;dewpt&#34;:13.8,&#34;uv&#34;:1.5,&#34;pres&#34;:1015,&#34;wind_dir&#34;:112,&#34;ghi&#34;:26.33,&#34;dhi&#34;:25.48,&#34;precip&#34;:0,&#34;clouds_hi&#34;:23,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:15.5,&#34;app_temp&#34;:15.5,&#34;dni&#34;:192.75,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-05T12:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-05T08:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:235.3,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:7.61,&#34;pop&#34;:0,&#34;clouds&#34;:15,&#34;vis&#34;:12.4,&#34;solar_rad&#34;:25.283924,&#34;wind_spd&#34;:2.39,&#34;clouds_low&#34;:15,&#34;wind_cdir_full&#34;:&#34;east-southeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-11-05:12&#34;,&#34;ts&#34;:1667649600,&#34;wind_cdir&#34;:&#34;ESE&#34;},{&#34;rh&#34;:73,&#34;dewpt&#34;:18.3,&#34;uv&#34;:3.2,&#34;pres&#34;:1015,&#34;wind_dir&#34;:147,&#34;ghi&#34;:514.13,&#34;dhi&#34;:97.79,&#34;precip&#34;:0,&#34;clouds_hi&#34;:38,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:23.4,&#34;app_temp&#34;:23.7,&#34;dni&#34;:808.79,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-05T15:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-05T11:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:236.5,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:9.51,&#34;pop&#34;:0,&#34;clouds&#34;:10,&#34;vis&#34;:21.696,&#34;solar_rad&#34;:488.37744,&#34;wind_spd&#34;:4.71,&#34;clouds_low&#34;:1,&#34;wind_cdir_full&#34;:&#34;south-southeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-11-05:15&#34;,&#34;ts&#34;:1667660400,&#34;wind_cdir&#34;:&#34;SSE&#34;},{&#34;rh&#34;:48,&#34;dewpt&#34;:14.8,&#34;uv&#34;:3.7,&#34;pres&#34;:1013.5,&#34;wind_dir&#34;:164,&#34;ghi&#34;:598.19,&#34;dhi&#34;:104,&#34;precip&#34;:0,&#34;clouds_hi&#34;:64,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:26.8,&#34;app_temp&#34;:27.1,&#34;dni&#34;:844.31,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-05T18:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-05T14:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:235.9,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:7.41,&#34;pop&#34;:0,&#34;clouds&#34;:16,&#34;vis&#34;:39.872,&#34;solar_rad&#34;:573.384,&#34;wind_spd&#34;:5.38,&#34;clouds_low&#34;:5,&#34;wind_cdir_full&#34;:&#34;south-southeast&#34;,&#34;slp&#34;:1021.5,&#34;datetime&#34;:&#34;2022-11-05:18&#34;,&#34;ts&#34;:1667671200,&#34;wind_cdir&#34;:&#34;SSE&#34;},{&#34;rh&#34;:71,&#34;dewpt&#34;:18.2,&#34;uv&#34;:1.2,&#34;pres&#34;:1013,&#34;wind_dir&#34;:137,&#34;ghi&#34;:178.09,&#34;dhi&#34;:62.16,&#34;precip&#34;:0,&#34;clouds_hi&#34;:38,&#34;weather&#34;:{&#34;icon&#34;:&#34;c03d&#34;,&#34;code&#34;:803,&#34;description&#34;:&#34;Broken clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:23.8,&#34;app_temp&#34;:24,&#34;dni&#34;:557.21,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-05T21:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-05T17:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:235.4,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:5.4,&#34;pop&#34;:0,&#34;clouds&#34;:55,&#34;vis&#34;:24.096,&#34;solar_rad&#34;:148.23415,&#34;wind_spd&#34;:4.02,&#34;clouds_low&#34;:55,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1020.5,&#34;datetime&#34;:&#34;2022-11-05:21&#34;,&#34;ts&#34;:1667682000,&#34;wind_cdir&#34;:&#34;SE&#34;},{&#34;rh&#34;:77,&#34;dewpt&#34;:16.8,&#34;uv&#34;:0,&#34;pres&#34;:1014,&#34;wind_dir&#34;:125,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:7,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:20.9,&#34;app_temp&#34;:21.1,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-06T00:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-05T20:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:236.5,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:7.8,&#34;pop&#34;:0,&#34;clouds&#34;:18,&#34;vis&#34;:24.096,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.48,&#34;clouds_low&#34;:18,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1021.5,&#34;datetime&#34;:&#34;2022-11-06:00&#34;,&#34;ts&#34;:1667692800,&#34;wind_cdir&#34;:&#34;SE&#34;},{&#34;rh&#34;:94,&#34;dewpt&#34;:17,&#34;uv&#34;:0,&#34;pres&#34;:1014.5,&#34;wind_dir&#34;:130,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:23,&#34;weather&#34;:{&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:18,&#34;app_temp&#34;:18,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-06T03:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-05T23:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:236.5,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:8.4,&#34;pop&#34;:0,&#34;clouds&#34;:71,&#34;vis&#34;:24.096,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:3.05,&#34;clouds_low&#34;:71,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-11-06:03&#34;,&#34;ts&#34;:1667703600,&#34;wind_cdir&#34;:&#34;SE&#34;},{&#34;rh&#34;:99,&#34;dewpt&#34;:18.8,&#34;uv&#34;:0,&#34;pres&#34;:1014,&#34;wind_dir&#34;:140,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0.0625,&#34;clouds_hi&#34;:23,&#34;weather&#34;:{&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:18.9,&#34;app_temp&#34;:19.5,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-06T06:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-06T01:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:237.1,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:9.09,&#34;pop&#34;:10,&#34;clouds&#34;:84,&#34;vis&#34;:24.096,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.1,&#34;clouds_low&#34;:84,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1021.5,&#34;datetime&#34;:&#34;2022-11-06:06&#34;,&#34;ts&#34;:1667714400,&#34;wind_cdir&#34;:&#34;SE&#34;},{&#34;rh&#34;:94,&#34;dewpt&#34;:16.8,&#34;uv&#34;:0,&#34;pres&#34;:1012.5,&#34;wind_dir&#34;:134,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:17.7,&#34;app_temp&#34;:17.7,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-06T09:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-06T04:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:237.8,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:1.7,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:1.67,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1020.5,&#34;datetime&#34;:&#34;2022-11-06:09&#34;,&#34;ts&#34;:1667725200,&#34;wind_cdir&#34;:&#34;SE&#34;},{&#34;rh&#34;:95,&#34;dewpt&#34;:16.8,&#34;uv&#34;:1.4,&#34;pres&#34;:1014,&#34;wind_dir&#34;:84,&#34;ghi&#34;:24.11,&#34;dhi&#34;:24.42,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:17.6,&#34;app_temp&#34;:17.6,&#34;dni&#34;:181.01,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-06T12:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-06T07:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:238.4,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:1.91,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:46.842648,&#34;wind_spd&#34;:1.82,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;east&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-11-06:12&#34;,&#34;ts&#34;:1667736000,&#34;wind_cdir&#34;:&#34;E&#34;},{&#34;rh&#34;:74,&#34;dewpt&#34;:17.8,&#34;uv&#34;:1.3,&#34;pres&#34;:1014.5,&#34;wind_dir&#34;:110,&#34;ghi&#34;:509.65,&#34;dhi&#34;:97.47,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;},&#34;clouds_mid&#34;:91,&#34;temp&#34;:22.7,&#34;app_temp&#34;:23,&#34;dni&#34;:807.01,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-06T15:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-06T10:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:238.9,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:3.93,&#34;pop&#34;:0,&#34;clouds&#34;:91,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:155.14583,&#34;wind_spd&#34;:2.99,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;east-southeast&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-11-06:15&#34;,&#34;ts&#34;:1667746800,&#34;wind_cdir&#34;:&#34;ESE&#34;},{&#34;rh&#34;:54,&#34;dewpt&#34;:15.5,&#34;uv&#34;:3.4,&#34;pres&#34;:1013.5,&#34;wind_dir&#34;:82,&#34;ghi&#34;:593.69,&#34;dhi&#34;:103.72,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:9,&#34;temp&#34;:25.5,&#34;app_temp&#34;:25.5,&#34;dni&#34;:842.86,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-06T18:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-06T13:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:238.4,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:1.52,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:564.3136,&#34;wind_spd&#34;:1.58,&#34;clouds_low&#34;:1,&#34;wind_cdir_full&#34;:&#34;east&#34;,&#34;slp&#34;:1021,&#34;datetime&#34;:&#34;2022-11-06:18&#34;,&#34;ts&#34;:1667757600,&#34;wind_cdir&#34;:&#34;E&#34;},{&#34;rh&#34;:53,&#34;dewpt&#34;:14.8,&#34;uv&#34;:1.1,&#34;pres&#34;:1013,&#34;wind_dir&#34;:44,&#34;ghi&#34;:174.78,&#34;dhi&#34;:61.66,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c03d&#34;,&#34;code&#34;:803,&#34;description&#34;:&#34;Broken clouds&#34;},&#34;clouds_mid&#34;:58,&#34;temp&#34;:25.1,&#34;app_temp&#34;:25,&#34;dni&#34;:553.03,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-06T21:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-06T16:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:238.5,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:3.33,&#34;pop&#34;:0,&#34;clouds&#34;:58,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:143.27057,&#34;wind_spd&#34;:2.32,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1020.5,&#34;datetime&#34;:&#34;2022-11-06:21&#34;,&#34;ts&#34;:1667768400,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:73,&#34;dewpt&#34;:15.7,&#34;uv&#34;:0,&#34;pres&#34;:1013.5,&#34;wind_dir&#34;:59,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;},&#34;clouds_mid&#34;:81,&#34;temp&#34;:20.8,&#34;app_temp&#34;:20.8,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-07T00:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-06T19:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:239.1,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:6.1,&#34;pop&#34;:0,&#34;clouds&#34;:81,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.89,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1021.5,&#34;datetime&#34;:&#34;2022-11-07:00&#34;,&#34;ts&#34;:1667779200,&#34;wind_cdir&#34;:&#34;ENE&#34;},{&#34;rh&#34;:78,&#34;dewpt&#34;:15.2,&#34;uv&#34;:0,&#34;pres&#34;:1014,&#34;wind_dir&#34;:58,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:31,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:2,&#34;temp&#34;:19.2,&#34;app_temp&#34;:19.2,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-07T03:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-06T22:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:242,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:4.5,&#34;pop&#34;:0,&#34;clouds&#34;:8,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.56,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-11-07:03&#34;,&#34;ts&#34;:1667790000,&#34;wind_cdir&#34;:&#34;ENE&#34;},{&#34;rh&#34;:89,&#34;dewpt&#34;:15.7,&#34;uv&#34;:0,&#34;pres&#34;:1014,&#34;wind_dir&#34;:50,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:98,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:17.6,&#34;app_temp&#34;:17.6,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-07T06:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-07T01:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:242.3,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:4.8,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.72,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-11-07:06&#34;,&#34;ts&#34;:1667800800,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:92,&#34;dewpt&#34;:15.9,&#34;uv&#34;:0,&#34;pres&#34;:1014,&#34;wind_dir&#34;:18,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:17.2,&#34;app_temp&#34;:17.2,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-07T09:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-07T04:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:243.1,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:6.33,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:2.91,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-11-07:09&#34;,&#34;ts&#34;:1667811600,&#34;wind_cdir&#34;:&#34;NNE&#34;},{&#34;rh&#34;:90,&#34;dewpt&#34;:15,&#34;uv&#34;:1.4,&#34;pres&#34;:1015,&#34;wind_dir&#34;:17,&#34;ghi&#34;:21.94,&#34;dhi&#34;:23.34,&#34;precip&#34;:0,&#34;clouds_hi&#34;:99,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:16.7,&#34;app_temp&#34;:16.7,&#34;dni&#34;:169.02,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-07T12:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-07T07:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:243.6,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:8.1,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:43.876057,&#34;wind_spd&#34;:3.26,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-11-07:12&#34;,&#34;ts&#34;:1667822400,&#34;wind_cdir&#34;:&#34;NNE&#34;},{&#34;rh&#34;:67,&#34;dewpt&#34;:16.1,&#34;uv&#34;:2.9,&#34;pres&#34;:1015.5,&#34;wind_dir&#34;:39,&#34;ghi&#34;:505.2,&#34;dhi&#34;:97.15,&#34;precip&#34;:0,&#34;clouds_hi&#34;:70,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:22.5,&#34;app_temp&#34;:22.6,&#34;dni&#34;:805.23,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-07T15:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-07T10:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:244.4,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:6.8,&#34;pop&#34;:0,&#34;clouds&#34;:18,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:481.97238,&#34;wind_spd&#34;:4.59,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-11-07:15&#34;,&#34;ts&#34;:1667833200,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:56,&#34;dewpt&#34;:16.4,&#34;uv&#34;:3.3,&#34;pres&#34;:1014,&#34;wind_dir&#34;:45,&#34;ghi&#34;:589.26,&#34;dhi&#34;:103.44,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:25.9,&#34;app_temp&#34;:26,&#34;dni&#34;:841.41,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-07T18:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-07T13:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:244,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:6.2,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:558.38477,&#34;wind_spd&#34;:5,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-11-07:18&#34;,&#34;ts&#34;:1667844000,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:60,&#34;dewpt&#34;:16.9,&#34;uv&#34;:1.5,&#34;pres&#34;:1013.5,&#34;wind_dir&#34;:49,&#34;ghi&#34;:171.57,&#34;dhi&#34;:61.17,&#34;precip&#34;:0,&#34;clouds_hi&#34;:85,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:25.3,&#34;app_temp&#34;:25.4,&#34;dni&#34;:548.89,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-07T21:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-07T16:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:243.4,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:6.51,&#34;pop&#34;:0,&#34;clouds&#34;:21,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:162.97173,&#34;wind_spd&#34;:4.36,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1021.5,&#34;datetime&#34;:&#34;2022-11-07:21&#34;,&#34;ts&#34;:1667854800,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:75,&#34;dewpt&#34;:16.7,&#34;uv&#34;:0,&#34;pres&#34;:1014.5,&#34;wind_dir&#34;:38,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:21.3,&#34;app_temp&#34;:21.4,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-08T00:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-07T19:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:244,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:10.3,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:3.56,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-11-08:00&#34;,&#34;ts&#34;:1667865600,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:82,&#34;dewpt&#34;:17,&#34;uv&#34;:0,&#34;pres&#34;:1015,&#34;wind_dir&#34;:48,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:20.2,&#34;app_temp&#34;:20.4,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-08T03:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-07T22:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:243.1,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:11.4,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:4.35,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-11-08:03&#34;,&#34;ts&#34;:1667876400,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:85,&#34;dewpt&#34;:16.5,&#34;uv&#34;:0,&#34;pres&#34;:1014.5,&#34;wind_dir&#34;:40,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:19.1,&#34;app_temp&#34;:19.3,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-08T06:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-08T01:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:244.8,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:13.2,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:5.24,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-11-08:06&#34;,&#34;ts&#34;:1667887200,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:80,&#34;dewpt&#34;:15.1,&#34;uv&#34;:0,&#34;pres&#34;:1014,&#34;wind_dir&#34;:34,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:0,&#34;temp&#34;:18.6,&#34;app_temp&#34;:18.6,&#34;dni&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-08T09:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-08T04:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:243.3,&#34;pod&#34;:&#34;n&#34;,&#34;wind_gust_spd&#34;:15.12,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:0,&#34;wind_spd&#34;:6.17,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-11-08:09&#34;,&#34;ts&#34;:1667898000,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:82,&#34;dewpt&#34;:15.2,&#34;uv&#34;:1.4,&#34;pres&#34;:1015.5,&#34;wind_dir&#34;:34,&#34;ghi&#34;:19.84,&#34;dhi&#34;:22.23,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:12,&#34;temp&#34;:18.3,&#34;app_temp&#34;:18.3,&#34;dni&#34;:156.8,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-08T12:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-08T07:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:242.3,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:16.09,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:40.78233,&#34;wind_spd&#34;:7.28,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-11-08:12&#34;,&#34;ts&#34;:1667908800,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:68,&#34;dewpt&#34;:14,&#34;uv&#34;:1,&#34;pres&#34;:1016.5,&#34;wind_dir&#34;:39,&#34;ghi&#34;:500.77,&#34;dhi&#34;:96.83,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;},&#34;clouds_mid&#34;:99,&#34;temp&#34;:20.1,&#34;app_temp&#34;:19.9,&#34;dni&#34;:803.43,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-08T15:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-08T10:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:240.8,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:16.09,&#34;pop&#34;:0,&#34;clouds&#34;:99,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:140.73563,&#34;wind_spd&#34;:8.72,&#34;clouds_low&#34;:0,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-11-08:15&#34;,&#34;ts&#34;:1667919600,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:57,&#34;dewpt&#34;:12.4,&#34;uv&#34;:3.3,&#34;pres&#34;:1015,&#34;wind_dir&#34;:44,&#34;ghi&#34;:584.9,&#34;dhi&#34;:103.16,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;},&#34;clouds_mid&#34;:17,&#34;temp&#34;:21.3,&#34;app_temp&#34;:21,&#34;dni&#34;:839.98,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-08T18:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-08T13:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:238.9,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:14.91,&#34;pop&#34;:0,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:559.9225,&#34;wind_spd&#34;:9.86,&#34;clouds_low&#34;:1,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-11-08:18&#34;,&#34;ts&#34;:1667930400,&#34;wind_cdir&#34;:&#34;NE&#34;},{&#34;rh&#34;:46,&#34;dewpt&#34;:7.1,&#34;uv&#34;:0.6,&#34;pres&#34;:1015.5,&#34;wind_dir&#34;:44,&#34;ghi&#34;:168.46,&#34;dhi&#34;:60.69,&#34;precip&#34;:0,&#34;clouds_hi&#34;:100,&#34;weather&#34;:{&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;},&#34;clouds_mid&#34;:100,&#34;temp&#34;:18.9,&#34;app_temp&#34;:18.1,&#34;dni&#34;:544.82,&#34;snow_depth&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-11-08T21:00:00&#34;,&#34;timestamp_local&#34;:&#34;2022-11-08T16:00:00&#34;,&#34;snow&#34;:0,&#34;ozone&#34;:236.5,&#34;pod&#34;:&#34;d&#34;,&#34;wind_gust_spd&#34;:16.5,&#34;pop&#34;:0,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;solar_rad&#34;:77.535995,&#34;wind_spd&#34;:9.75,&#34;clouds_low&#34;:2,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-11-08:21&#34;,&#34;ts&#34;:1667941200,&#34;wind_cdir&#34;:&#34;NE&#34;}],&#34;lon&#34;:-78.5,&#34;country_code&#34;:&#34;US&#34;,&#34;lat&#34;:35.5,&#34;timezone&#34;:&#34;America /New_York&#34;,&#34;city_name&#34;:&#34;Four Oaks&#34;,&#34;state_code&#34;:&#34;NC&#34;} .",
            "url": "https://jw95z.github.io/JeongWooLee/api/2022/10/10/api.html",
            "relUrl": "/api/2022/10/10/api.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "stock market",
            "content": "Overview | Stock | Jokes API | Users Database | . Time All-time Cases Recorded Deaths Active Cases . | | | | Country All-time Cases Recorded Deaths Active Cases .",
            "url": "https://jw95z.github.io/JeongWooLee/data/stock",
            "relUrl": "/data/stock",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i-1] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter b is the 2 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: if i == letter: count = 0 a = alphabetList.index(letter) for b in range(a+1): count += 1 print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) . The letter b is the 2 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . letter = input(&quot;What letter would you like to check?&quot;) count = 0 for i in alphabetList: count += 1 if i == letter: break print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) . The letter c is the 3 letter in the alphabet . evens = [] i = 0 while i +1 &lt;= 10: evens.append(i+1) i += 2 print(evens) . [1, 3, 5, 7, 9] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: if i % 2 == 1: odds.append(i) i += 1 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 != 0): evens.append(numbers[i]) print(evens) . [1, 3, 5, 7, 9] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 != 0): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 1 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i-1] % 5 == 0: newNumbers.append(numbers[i-1]) if numbers[i-1] % 2 == 0: newNumbers.append(numbers[i-1]) print(newNumbers) . [2, 4, 5, 6, 8, 10, 10, 12, 14, 15, 16, 18, 20, 20, 22, 24, 25, 26, 28, 30, 30, 32, 34, 35, 36, 38, 40, 40, 42, 44, 45, 46, 48, 50, 50, 52, 54, 55, 56, 58, 60, 60, 62, 64, 65, 66, 68, 70, 70, 72, 74, 75, 76, 78, 80, 80, 82, 84, 85, 86, 88, 90, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times while True: item = input(&quot;Please select an item from the menu&quot;) total += menu[item] ans = input(&quot;do you want to order more? [y/n]&quot;) if ans == &quot;n&quot;: break else : #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 5.98 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/10/03/error_testing.html",
            "relUrl": "/markdown/2022/10/03/error_testing.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Program design and development",
            "content": "Program developed with a systematic approach to achieve a desired purpose. n . Develop of program . Program always starts with idea. . Programs are all developed a specific with specific purpose. | Developes follow specific steps and stick to their plan | Sometimes the development is more exploratory than anything, and the steps are dictated by what happens | . When we think about early AI projects or artificial intelligence, we abbreviate that to AI. Early on in this developers were just trying to figure out like hey, what is possible?, what can we make a computer do that would resemble intelligence. . Developes start investigating the problem/purpose and reflect . Investigation is an important step in the process. | Developers must determine the requirements of the program | Developers must understand the constraints | . One of the constraints is time you don’t have enough time to write this grand thing, you have to be very limited and very targeted about what you would accomplish. So understanding the constraints are a very important part of the investigative process. . Method of investigate . surveys | user testing | interviews | direct observations | . Developers design the program by . brainstorm | storyboarding the program | planning user experience | laying out the user interface | organizing into modules | develop a testing strategy | . Developers decide on the program requirements that . describe how a program should behave | include a list of user interactions | . The program specifications outline all of the requirements. Developers create a prototype of the program or components. An incremental process is frequently used so developers can refine small parts of the program . Testing, testing, and more testing . Developers test the program every step of the way . Testing occurs at the . micro level | macro level | . Developers refine and revise through testing, feedback, and reflection . Program development is rarely a solo endeavor . Programs are usually developed with by teams of people | Individuals and teams work on different functional components | Each member of the project deserves to receive credit for their work | Their names must be written in the documentation of the program indicating their contributors to the project | . The program should also be given credit where credit is due . Documentation is an important place to give credit . Many projects use comments within the programming language | Important part of the development of the program | When developers find a bug, they need to be able to determine who can fix the program | This may be most useful after a program is completed and users find additional bugs | . Many times developers use code segments, procedures, algorithms, and more than that are written by others. Similar to quoting someone in a research paper or article. . Reason of creating program documentation . describe the overall program | list program specifications | describe functions/procedures/methods within the code | specific code segments | list of events and corresponding outputs | the development of program | how other programs may interact with the program | . | list of contributors/authors of the program | . When does documentation happens . Documentation happens throughout the development of the program . At the beginning: list specifications | During: to keep track of process | After: to explain the overall process | improvement of documentation . efficiency of overall programming process | programmer’s ability to test and to refine the program | programmer’s response to bugs | . How do programmers document while programming . Most programming languages offer a commenting feature, although some do not. Commenting allows programming to write text within the program. This text does not affect the program. Comments are for programmers to read. This is a form of documentation and can be very useful when programmers collaborate or work individually. . example of comments . Text . Python | Java | Javascript, C/C++, Swift | XML/HTML | Applescript/Pascal | . Block based language . Scratch | MIT Applnventor | .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/10/01/Programpurpose.html",
            "relUrl": "/markdown/2022/10/01/Programpurpose.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Table",
            "content": ". . Resources Description Images . Diamond A rare mineral obtained from diamond ore or loot chests | | &lt;/tr&gt; Gold A material found in both the overworld and the Nether | | &lt;/tr&gt; Iron The product of the naturally occuring Silver Ore that is located underground | | &lt;/tr&gt; Emerald Rare minerals that are used primarily as the currency for trading with villagers and wandering traders | | &lt;/tr&gt; Netherite A material from the Nether, used primarily to upgrade diamond gear | | &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; | . | . | . | . | .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/09/26/javatable.html",
            "relUrl": "/markdown/2022/09/26/javatable.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Agile Methodology Diagram",
            "content": ". PBL vocabulary . Agile Methodology: a way to manage a project by breaking it up into several phases | Scrum board: a tool that helps Teams make Sprint Backlog items visible | Sprint: period of time that Team uses to plan work and execute work | DevOps: combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity | frontend developer: who creates websites and applications using web languages such as HTML, CSS, and JavaScript that allow users to access and interact with the site or app | backend developer: who builds and maintains the technology that powers those components which, together, enable the user-facing side of the website to even exist in the first place | . 7 Important Transferable Skills . Creativity: Creativity in education and workplace, in many cases, presents itself in terms of how you approach tasks and solve problems | Conceptualize problems and solutions | Display foresight | Make connections | Make intelligent inferences | Synthesize ideas and data | . Critical thinking: critical thinking skills enable the discovery of deficiencies that could cause less than optimal results | take a step back and look at things more critically | head off problems before critical thinkers arise | . Communication: Effective communication is the crux of everything you do. | Verbal skills | Listening skills | Writing skills | Technological communication skills | . Collaboration through Leadership: Leadership skills generally encompass communication, problem-solving and managing conflict, relationship building and being able to get people on your team on board with a mission or project | Delegating responsibility | Demonstrating effective time management | Initiating new ideas | Major decision-making | Managing conflict | Managing groups | Multitasking | Teaching and mentoring | . Collaboration: Teamwork — a sense of community — elevates spirits and improves productivity | Accepting responsibility | Making and implementing decisions | Managing time wisely | Meeting both short- and long-term goals | Organizing | Setting and meeting deadlines | . Research: Research is a key part of the lifecycle: changing plans, fluctuating results, and roadblocks require research before anyone can take action | Analyzing information | Brainstorming solutions | Delineating needs and requirements | Extracting information from data | Gathering information | Forecasting possible roadblocks | Setting goals | Solving problems | . Technical: Try to stay current with the many technical advancements on your project | Being easy to work with | Quick to learn | Glad to learn | Failing and always willing to try new things | Willing to open new doors in case of a drastic oversight | . 12 principles . Our highest priority is to satisfy the customer through early and continuous delivery of valuable software. | Welcome changing requirements, even late in development. Agile processes harness change for the customer’s competitive advantage. | Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale. | Business people and developers must work together daily throughout the project. | Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done. | The most efficient and effective method of conveying information to and within a development team is face-to-face conversation. | Working software is the primary measure of progress. | Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely. | Continuous attention to technical excellence and good design enhances agility. | Simplicity–the art of maximizing the amount of work not done–is essential. | The best architectures, requirements, and designs emerge from self-organizing teams. | At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly. |",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/09/25/Scrum.html",
            "relUrl": "/markdown/2022/09/25/Scrum.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "JavaScript",
            "content": "const options = { method: &#39;POST&#39;, headers: { &#39;content-type&#39;: &#39;application/json&#39;, &#39;X-RapidAPI-Key&#39;: &#39;56cf0d9c39msh90ab47fd56c02e6p1d2792jsn0f4dfaa46b90&#39;, &#39;X-RapidAPI-Host&#39;: &#39;motivational-quotes1.p.rapidapi.com&#39; }, body: &#39;{&quot;key1&quot;:&quot;value&quot;,&quot;key2&quot;:&quot;value&quot;}&#39; }; fetch(&#39;https://motivational-quotes1.p.rapidapi.com/motivation&#39;, options) .then(response =&gt; response.json()) .then(response =&gt; console.log(response)) .catch(err =&gt; console.error(err)); . evalmachine.&lt;anonymous&gt;:1 const options = { ^ TypeError: Identifier &#39;options&#39; has already been declared at evalmachine.&lt;anonymous&gt;:1:1 at ContextifyScript.Script.runInThisContext (vm.js:25:33) at Object.runInThisContext (vm.js:97:38) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) at _combinedTickCallback (internal/process/next_tick.js:73:7) . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . test = [] test.push({&quot;num&quot;: 1, &quot;int&quot;: 2}); test.push({&quot;num&quot;: 2, &quot;int&quot;: 3}); test.push({&quot;num&quot;: 3, &quot;int&quot;: 4}); test.push({&quot;num&quot;: 4, &quot;int&quot;: 5}); var obj = new Object() obj.num = 5; obj.int = 6; test.push(obj); test.forEach(function(item) { console.log(item.num + &quot;, &quot;+ item.int); }); console.log(&#39;== Get index 0, 1 value&#39;); test.splice(0,2).forEach(function(item) { console.log(item.num + &quot;, &quot; + item.int); }); console.log(&quot;==only values except index 0, 1 remain in the val&quot;) test.forEach(function(item) { console.log(item.num + &quot;, &quot; + item.int); }); console.log(&quot;= change the object which name is 4&quot;) var test3 = test.find(function(item){ return item.num == &quot;4&quot;; }); test3.num = &quot;change to 100&quot;; test.forEach(function(item) { console.log(item.num + &quot;, &quot; + item.int); }); console.log(&quot;== remove object which name is changed&quot;) var index = test.indexOf(test3) test.splice(index, 1); test.forEach(function(item) { console.log(item.num + &quot;, &quot; + item.int); }); . 1, 2 2, 3 3, 4 4, 5 5, 6 == Get index 0, 1 value 1, 2 2, 3 ==only values except index 0, 1 remain in the val 3, 4 4, 5 5, 6 = change the object which name is 4 3, 4 change to 100, 5 5, 6 == remove object which name is changed 3, 4 5, 6 .",
            "url": "https://jw95z.github.io/JeongWooLee/week5/2022/09/21/javascript.html",
            "relUrl": "/week5/2022/09/21/javascript.html",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Program Function and Purpose",
            "content": ". Computing Innovation . Applications Games | Social Media | Business | Productivity | . | Physical Devices Computers | Smart Phones/tablets | Smart &quot;Things&quot; | Wearables | . | Systems E-commerce | Cloud services | E-mail ## Purpose of computing innovation | . | Social Media Application Allow users to connect from a distance and archive their activities. | . | E-commerce Allow users to save time and money by being able to shop from home. | . | Digital Assistant Device Allow users to control their devices hands-free, making them safer while driving or more convenient when trying to multitask | . | . Different forms of Computer programs . tactile | audio | visual | text(including numerical values) | . types of input and output do your devices accept . Smart Phone/tablet | Laptop computer | Gaming Console | . Most programs are written in an event driven environment . &quot;Events&quot; are triggered by some action, which usually sends input to the program | . types of event can use a trigger . mouse clicks | screen taps/swipes(force touch) | physical button clicks | keyboard entries | audio trigger(key word or phrase) | . output produced by a device . visual | audio | tactile(touch/feel) | text | . How does program know what to do upon an event? . An action triggers an event . Action may be initiated by the user or another program/device | . The program &quot;jump&quot; to the coe segment according to the event . The code segment is executed | Output is triggered by the code segment (or additional events are triggered). | . The program code is not necessarily executed &quot;in order&quot; . What is a program? . A program is a collection of statements . A statement is a single command | A group of statements is called a code segment | Code segments are executed according to the rules of the programming language | A program is often referred to as software | . What does this program do . This code segment is written to find the minimum value in a list&lt;/font&gt; . This code segment would need to work for a variety of different lists, like list that include: number out of order | negative numbers | large numbers | decimals | . | This code segment could be inserted into a larger program. | . Description . Simply state what would it does so that someone could use the code segment in a larger program | . | Or include how it does what it does by explaining in detail how the code segment function | so that someone could expand upon the code segment | . | .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/09/20/program_purpose.html",
            "relUrl": "/markdown/2022/09/20/program_purpose.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Collaboration 1.1",
            "content": "Benefit of collaborating . Effective collaboration suppresses communication, consensus building, conflict resolution, and negotiation skills | Effective collaboration produces a computing innovation that reflects the diversity of talents and perspective of those who designed it. | We are humans, and when we code, we&#39;re not perfect and we have to think things through. | . Interpersonal skills . Communication | Consensus Building | Conflict Resolution | Negotiation | . How to collaborate in class . Pair Programming: Two programmers work together as a pair. One(the driver) writes program code, while the other(the observer, pointer, or navigator) reviews each line of program code as it is typed in. Think pair share: Students think through a problem alone, pair with a partner to share ideas and then share results with the class . Leave comments . Communicate to your partner(s) | Communicate to yourself | Acknowledge code segments used from other sources | Acknowledge media used from other sources | Differentiate what you and your partner(s) did | Clarify the functionality of your code | . Online tools . repl.it - multiplayer | Github - collaboration and repository | . shared document or folder . Ask friends and family to test drive your program and give you feedback .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/09/19/Collaboration.html",
            "relUrl": "/markdown/2022/09/19/Collaboration.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Docker Server",
            "content": "",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/09/15/server.html",
            "relUrl": "/markdown/2022/09/15/server.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "idea",
            "content": "simple game, tetris(the random blocks will fall over the square and player have to match it) row 1 idea will require explaining of how code works row 2 the blocks have to appear with a random shape and random position row 4 make a function can make the random blocks and condition that can erase the line of blocks when the line is all filled by the blocks. row 5 need to use the algorithm for making score and function row 6 need functions to work . | jump game, character in the game have to jump over the obstacles. When it attach to the character, it will be die. afhahfkjahkfdlafjakfjafla afnjafklakfjlajfl . |",
            "url": "https://jw95z.github.io/JeongWooLee/games/",
            "relUrl": "/games/",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Quiz in code.org",
            "content": "Fruit_quiz question1: what color the apple have? answer: red wrong: blue wrong: purple wrong: orange when were bananas discovered? answer: 327 BC wrong: 1997 wrong: 1792 wrong 2020 BC what one is a fruit? answer: strawberries wrong: melon wrong: tomato wrong: strawberries If answer is wrong, there is one chance to redo and if there is two incorrect, the player cannot take the quiz. If player solve the question with at least one incorrect, they can retake the quiz. . var total = 0; var i = 1; function myFunction() { onEvent(&quot;button1&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen2&quot;); }); onEvent(&quot;button2&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen4&quot;); }); onEvent(&quot;button3&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button4&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button5&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button6&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button7&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button9&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button8&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button10&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button11&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button12&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); }); onEvent(&quot;button13&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); } function games() { onEvent(&quot;button1&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen2&quot;); }); onEvent(&quot;button2&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen4&quot;); total = total + 1; }); onEvent(&quot;button3&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen2&quot;); myFunction(); total = total - 1; }); }); onEvent(&quot;button4&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen2&quot;); myFunction(); total = total - 1; }); }); onEvent(&quot;button5&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen2&quot;); myFunction(); total = total - 1; }); }); onEvent(&quot;button6&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen4&quot;); myFunction(); total = total - 1; }); }); onEvent(&quot;button7&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); myFunction(); total = total - 1; }); }); onEvent(&quot;button9&quot;, &quot;click&quot;, function( ) { onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); myFunction(); total = total - 1; }); }); onEvent(&quot;button8&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); total = total + 1; }); onEvent(&quot;button10&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); myFunction(); total = total - 1; }); }); onEvent(&quot;button11&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); myFunction(); total = total - 1; }); }); onEvent(&quot;button12&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); total = total + 1; }); onEvent(&quot;button13&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); myFunction(); total = total - 1; }); }); } games(); onEvent(&quot;button2&quot;, &quot;click&quot;, function( ) { playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;, false); }); onEvent(&quot;button8&quot;, &quot;click&quot;, function( ) { playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;, false); }); onEvent(&quot;button12&quot;, &quot;click&quot;, function( ) { playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;, false); }); onEvent(&quot;button14&quot;, &quot;click&quot;, function( ) { write(&quot;you got&quot; + total); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen1&quot;); total = 0; games(); }); .",
            "url": "https://jw95z.github.io/JeongWooLee/week%203/2022/09/07/quiz_org.html",
            "relUrl": "/week%203/2022/09/07/quiz_org.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "List of dictionaries",
            "content": "Week2 . this is week 2 . dic_list = [] while True: sel = int(input(&quot;press 1 to continue and press 2 to stop&quot;)) if sel == 1: print(&quot;adding in dictionary&quot;) my_dict = {} while True: key = int(input(&quot;key: &quot;)) val = input(&quot;value: &quot;) my_dict[key] = val con = int(input(&quot;press 1 to continue and press 2 to stop&quot;)) if con ==2: print(&quot; The End &quot;) break dic_list.append(my_dict) elif sel == 2: print(&quot;end&quot;) break else: print(&quot;you pick the wrong one&quot;) break print(&quot;This is the list you made: &quot;,dic_list) . adding in dictionary The End end This is the list you made: [{1: &#39;hello&#39;, 2: &#39;world&#39;}] .",
            "url": "https://jw95z.github.io/JeongWooLee/phython%20codes/week2/2022/09/01/Quiz.html",
            "relUrl": "/phython%20codes/week2/2022/09/01/Quiz.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "List",
            "content": "Week2 . this is week 2 . InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;James&quot;, &quot;LastName&quot;: &quot;Lee&quot;, &quot;DOB&quot;: &quot;Sempember 5&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;michaelmichael6909@gmail.com&quot;, &quot;Owns_sisters&quot;: [&quot;Chole&quot;, &quot;Rayna&quot;] }) def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Owns_sisters:&quot;, &quot;, &quot;.join(d_rec[&quot;Owns_sisters&quot;]) ) def while_loop(): print(&quot;While loop output n&quot;) i = 0 for i in range(0, len(InfoDb)): record = InfoDb[i] print_data(record) return while_loop() . While loop output James Lee Residence: San Diego Birth Day: Sempember 5 Email: michaelmichael6909@gmail.com Owns_sisters: Chole, Rayna .",
            "url": "https://jw95z.github.io/JeongWooLee/jupyter/week2/2022/08/30/Loop.html",
            "relUrl": "/jupyter/week2/2022/08/30/Loop.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Bash shell practice",
            "content": "Week1 . this is week 1 . python3 --version . Python 3.9.12 . Anaconda Verification . conda --version . conda 4.14.0 . git status . On branch master Your branch is up to date with &#39;origin/master&#39;. Untracked files: (use &#34;git add &lt;file&gt;...&#34; to include in what will be committed) 2022-08-29-Bash.ipynb version nothing added to commit but untracked files present (use &#34;git add&#34; to track) . git add *.ipynb . git status . On branch master Your branch is up to date with &#39;origin/master&#39;. Changes to be committed: (use &#34;git restore --staged &lt;file&gt;...&#34; to unstage) new file: 2022-08-29-Bash.ipynb Untracked files: (use &#34;git add &lt;file&gt;...&#34; to include in what will be committed) version . git commit -am &quot;Test Commit 2022-08-29.00&quot; . [master 77f0eae] Test Commit 2022-08-29.00 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 _notebooks/2022-08-29-Bash.ipynb . git push . Username for &#39;https://github.com&#39;: .",
            "url": "https://jw95z.github.io/JeongWooLee/jupyter/week1/2022/08/29/Bash.html",
            "relUrl": "/jupyter/week1/2022/08/29/Bash.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "MyBlog",
            "content": "MyBlog . Hello! Have a nice day .",
            "url": "https://jw95z.github.io/JeongWooLee/markdown/2022/08/24/MyBlog.html",
            "relUrl": "/markdown/2022/08/24/MyBlog.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Quiz",
            "content": "Week1 . this is week 1 . import getpass, sys correct = 0 def questionAnswer(prompt): print(&quot;question: &quot; + prompt) ans = input() print(&quot;Answer: &quot; + ans) return ans def questionRespone(prompt): print(&quot;question: &quot; + prompt) ans = input() print(&quot;I got a number :&quot;,ans) return ans def questi(): global correct res = questionRespone(&quot;1 + 1 = ? &quot;) if res == &quot;2&quot;: print(res + &quot; is correct&quot;) correct += 1 else: print(res + &quot; is incorrect&quot;) rep = questionRespone(&quot;2 + 3 = ? &quot;) if rep == &quot;5&quot;: print(rep + &quot; is correct&quot;) correct += 1 else: print(rep + &quot; is incorrect&quot;) reg = questionRespone(&quot;3 + 5 = ? &quot;) if reg == &quot;8&quot;: print(reg + &quot; is correct&quot;) correct += 1 else: print(reg + &quot; is incorrect&quot;) print((str)((float)(correct/quest*100)) + &quot;%&quot;) quest = 3 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(quest) + &quot; questions.&quot;) a = questionAnswer(&quot;Are you ready to take the test[y/n]? &quot;) if a == &quot;y&quot;: questi() else: print(&quot;......&quot;) . Hello, james running /bin/python3 You will be asked 3 questions. question: Are you ready to take the test[y/n]? Answer: y question: 1 + 1 = ? I goy number : 2 2 is correct question: 2 + 3 = ? I goy number : 5 5 is correct question: 3 + 5 = ? I goy number : 8 8 is correct 100.0% .",
            "url": "https://jw95z.github.io/JeongWooLee/jupyter/week1/2022/08/24/My-First-Post.html",
            "relUrl": "/jupyter/week1/2022/08/24/My-First-Post.html",
            "date": " • Aug 24, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "API",
          "content": "Overview | Stock | Jokes API | Users Database | . hello .",
          "url": "https://jw95z.github.io/JeongWooLee/API/",
          "relUrl": "/API/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Sub_menu",
          "content": "Using Javascript Table .",
          "url": "https://jw95z.github.io/JeongWooLee/stub/",
          "relUrl": "/stub/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "Hello my name is James This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://jw95z.github.io/JeongWooLee/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Psychology and the Good life",
          "content": "Psychology and the Good Life . Vocab . Syllabus: an outline of the subjects in a course of study or teaching . Notes . Yale students have a lot of stress. Yale students are incredibly privileged to be at an amazing place like Yale with so many opportunities but they react to that with anxiety. Students are so stressed so they can’t make good opportunities. The stress takes its toll and it takes its toll in a way the students sometimes don’t want to admit. Many students are suffering at mental problems such as loneliness and depression. Science comes from two domains. One domain is this domain of positive psychology a field that literally studies happy people and other is the science of behavior change. Taking times in things that we like are built into the syllabus. We can control our happiness that we think and lot of this work comes from an idea that we tended think of people as being kind of a half glassful type person or a half empty kind of person. Unhappy people are spending time alone more than happy people. . Glitches . I think my whole life is my glitches. My heart is like a broken glass. . How to adapt . Just accept it and live. I just live because I don’t want to die. . Gratitude . I appreciated to my ELD teacher in last semester. Because of her, I could hear what teachers saying in the school. I was confused when I came to this school, but teacher teach me and communicate with me. . | I also thankful to staff of “league of legends”. I spend most of time in there. I used 1000 dollars in there. It is important as my life. I think my characters in the game have to wear expensive clothes than me. . | . Goal . To be alive | Get good score in every subjects | Be good at all of the finals | .",
          "url": "https://jw95z.github.io/JeongWooLee/gratitude/",
          "relUrl": "/gratitude/",
          "date": ""
      }
      
  

  

  
      ,"page6": {
          "title": "Notes",
          "content": "This website is powered by fastpages [^1]. This is my first server that I made [^1]:a blogging platform that natively supports Jupyter notebooks in addition to other formats. .",
          "url": "https://jw95z.github.io/JeongWooLee/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page10": {
          "title": "Table",
          "content": "Week AP Test Prep Career Tech . 0 | Pseudo code | Tools and equipment | . 1 | Hello to Phython | Fastpages, Jupyter notebooks, Markdown | . 2 | Phython list and dictionaries | Tools and equipment | .",
          "url": "https://jw95z.github.io/JeongWooLee/Table/",
          "relUrl": "/Table/",
          "date": ""
      }
      
  

  

  
      ,"page12": {
          "title": "vocab",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://jw95z.github.io/JeongWooLee/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  

  

  
  

  
      ,"page19": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jw95z.github.io/JeongWooLee/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}